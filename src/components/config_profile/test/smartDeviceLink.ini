  ; The INI-file consists of different chapters.
; Each chapter begins with the line containing
; the name in square brackets. Syntax:
; [chapter]
; The chapters consists of a set of items with a
; assinged value. The syntax is:
; item=value
; All white spaces an second encounters of chapters
; or items will be ignored.
; Remarks start with semicolon or star as first character.
; It is alowed for names of chapters and items to
; contain semicolon and star. Possible syntax is:
; [ chapter ]       ;Remark
;    item = value   ;Remark

[HMI]
LaunchHMI = true
ServerAddress = 127.0.0.1
ServerPort = 8087
VideoStreamingPort = 5050
AudioStreamingPort = 5080

[MAIN]
; Contains .json/.ini files
AppConfigFolder =
; Contains output files, e.g. .wav
AppStorageFolder = storage
; Contains resourses, e.g. audio8bit.wav
AppResourceFolder =
; Standard min stack size
;     in Ubuntu : PTHREAD_STACK_MIN = 16384
;     in QNX : PTHREAD_STACK_MIN = 256
;The value of a variable ThreadStackSize used only if its realy needed, other way stack size will be PTHREAD_STACK_MIN
;
ThreadStackSize = 20480
MixingAudioSupported = true
HMICapabilities = hmi_capabilities.json
MaxCmdID = 2000000000
; Default request timeout in milliseconds
DefaultTimeout = 10000

AppDirectoryQuota = 104857600
; Allowed requests amount in HMI level NONE during time scale.
; If value is 0 check will be skipped
AppHMILevelNoneTimeScaleMaxRequests = 100
AppHMILevelNoneRequestsTimeScale = 10
; Allowed requests amount during time scale.
; If value is 0 check will be skipped
AppTimeScaleMaxRequests = 1000
AppRequestsTimeScale = 10
; Allowed pending requests amount. If value is 0 check will be skipped
PendingRequestsAmount = 5000
HeartBeatTimeout = 7
SupportedDiagModes = 0x01, 0x02, 0x03, 0x05, 0x06, 0x07, 0x09, 0x0A, 0x18, 0x19, 0x22, 0x3E
SystemFilesPath = /tmp/fs/mp/images/ivsu_cache
UseLastState = true
TimeTestingPort = 8090
ReadDIDRequest = 5, 1
GetVehicleDataRequest = 5, 1

[MEDIA MANAGER]
; where 3 is a number of retries and 1 is a timeout in seconds for request frequency
StartStreamRetry = 3, 1
EnableRedecoding = false
VideoStreamConsumer = socket
AudioStreamConsumer = socket
;VideoStreamConsumer = file
;AudioStreamConsumer = file
;VideoStreamConsumer = pipe
;AudioStreamConsumer = pipe
;Temp solution: if you change NamedPipePath also change path to pipe in src/components/qt_hmi/qml_model_qtXX/views/SDLNavi.qml
;Named pipe path will be constructed using AppStorageFolder + name
NamedVideoPipePath = video_stream_pipe
NamedAudioPipePath = audio_stream_pipe
;File path will be constructed using AppStorageFolder + name
VideoStreamFile = video_stream_file
AudioStreamFile = audio_stream_file
; Recording file source (used for audio pass thru emulation only)
RecordingFileSource = audio.8bit.wav
; Recording file for audio pass thru
RecordingFileName = audio.wav

; HelpPromt and TimeOutPrompt is a vector of strings separated by comma
[GLOBAL PROPERTIES]

; Delimiter, which will be appended to each TTS chunck, e.g. helpPrompt/timeoutPrompt
TTSDelimiter = ,
; Default prompt items, separated by comma
HelpPromt = Please speak one of the following commands,Please say a command
; Default prompt items, separated by comma
TimeOutPromt = Please speak one of the following commands,Please say a command
HelpTitle = Available Vr Commands List
; In case mobile app didn't send global properties default global properties will be sent after this timeout
; max value TTSGlobalPropertiesTimeout 64K
TTSGlobalPropertiesTimeout = 20

[FILESYSTEM RESTRICTIONS]
; Max allowed number of PutFile requests for one application in NONE
PutFileRequest = 5
; Max allowed number of DeleteFile requests for one application in NONE
DeleteFileRequest = 5
; Max allowed number of ListFiles requests for one application in NONE
ListFilesRequest = 5

[VR COMMANDS]
HelpCommand = Help

[AppInfo]
; The path for applications info storage.
AppInfoStorage = app_info.dat

[Security Manager]
Protocol = TLSv1.2
; Certificate and key path to pem file
CertificatePath = mycert.pem
KeyPath         = mykey.pem
; SSL mode could be SERVER or CLIENT
SSLMode         = CLIENT
; Could be ALL ciphers or list of chosen
;CipherList      = AES256-GCM-SHA384
CipherList      = ALL
; Verify Mobile app certificate (could be used in both SSLMode Server and Client)
VerifyPeer  = false
; If VerifyPeer is enable - terminate handshake if mobile app did not return a certificate
FialOnNoCert = false
; If VerifyPeer is enable - do not ask for a mobile app certificate again in case of a renegotiation
VerifyClientOnce = false
; Force protected services (could be id's from 0x01 to 0xFF)
;ForceProtectedService = 0x0A, 0x0B
ForceProtectedService = Non
; Force unprotected services
;ForceUnprotectedService = 0x07
ForceUnprotectedService = Non

[Policy]
EnablePolicy = true
PreloadedPT = sdl_preloaded_pt.json
PathToSnapshot = sdl_snapshot.json
; Number of attempts to open policy DB
AttemptsToOpenPolicyDB = 5
; Timeout between attempts during opening DB in milliseconds
OpenAttemptTimeoutMs = 500

[TransportManager]
TCPAdapterPort = 12345
MMEDatabase = /dev/qdb/mediaservice_db
EventMQ = /dev/mqueue/ToSDLCoreUSBAdapter
AckMQ = /dev/mqueue/FromSDLCoreUSBAdapter

[IAP]
LegacyProtocol = com.ford.sync.prot[0-29]
HubProtocol = com.smartdevicelink.prot0
PoolProtocol = com.smartdevicelink.prot[1-29]
IAPSystemConfig = /fs/mp/etc/mm/ipod.cfg
IAP2SystemConfig = /fs/mp/etc/mm/iap2.cfg
IAP2HubConnectAttempts = 3

[ProtocolHandler]
; Packet with payload bigger than next value will be marked as a malformed
; 1488 = 1500 - 12 = TCP MTU - header size
MaximumPayloadSize = 1488
; Application shall send less #FrequencyCount messages per #FrequencyTime mSecs
; Frequency check could be disable by setting FrequencyTime to Zero
FrequencyCount = 1000
FrequencyTime = 1000

[ApplicationManager]
ApplicationListUpdateTimeout = 2
; Max allowed threads for handling mobile requests. Currently max allowed is 2
ThreadPoolSize = 1

[Resumption]

# Timeout in seconds for resumption Application HMILevel
# and resolving conflicts in case if multiple applications initiate resumption
ApplicationResumingTimeout = 3

# Timeout in seconds for pereodical saving resumption persisten data
AppSavePersistentDataTimeout = 10 #seconds

# Timeout in seconds to store hmi_level for media app before ign_off
ResumptionDelayBeforeIgn = 30;

# Timeout in seconds to restore hmi_level for media app after sdl run
ResumptionDelayAfterIgn = 30;
