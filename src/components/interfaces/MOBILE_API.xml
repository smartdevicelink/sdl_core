<?xml version="1.0" standalone="no"?>
<?xml-stylesheet type="text/xml" href="protocol2html.xsl"?>

<interface name="SmartDeviceLink RAPI" version="6.0.0" minVersion="1.0" date="2019-03-19">
    <enum name="Result" internal_scope="base" since="1.0">
        <element name="SUCCESS">
            <description>The request succeeded</description>
        </element>
        <element name="UNSUPPORTED_REQUEST">
            <description>The request is not supported by the headunit</description>
        </element>
        <element name="UNSUPPORTED_RESOURCE">
            <description>
                A button that was requested for subscription is not supported under the current system.
            </description>
        </element>
        <element name="DISALLOWED">
            <description>RPC is not authorized in local policy table.</description>
        </element>
        <element name="REJECTED">
            <description>
                The requested command was rejected, e.g. because mobile app is in background and cannot perform any HMI commands.
                Or an HMI command (e.g. Speak) is rejected because a higher priority HMI command (e.g. Alert) is playing.
            </description>
        </element>
        <element name="ABORTED">
            <description>
                A command was aborted, for example due to user interaction (e.g. user pressed button).
                Or an HMI command (e.g. Speak) is aborted because a higher priority HMI command (e.g. Alert) was requested.
            </description>
        </element>
        <element name="IGNORED">
            <description>
                A command was ignored, because the intended result is already in effect.
                For example, SetMediaClockTimer was used to pause the media clock although the clock is paused already.
                NOTE: potentially replaces SUBSCRIBED_ALREADY
            </description>
        </element>
        <element name="RETRY">
            <description>The user interrupted the RPC (e.g. PerformAudioPassThru) and indicated to start over.  Note, the app must issue the new RPC.</description>
        </element>
        <element name="IN_USE">
            <description>
                The data may not be changed, because it is currently in use.
                For example when trying to delete a command set that is currently involved in an interaction.
            </description>
        </element>
        <element name="VEHICLE_DATA_NOT_AVAILABLE" since="2.0">
            <description>The requested vehicle data is not available on this vehicle or is not published.</description>
        </element>
        <element name="TIMED_OUT">
            <description>Overlay reached the maximum timeout and closed.</description>
        </element>
        <element name="INVALID_DATA">
            <description>
                The data sent is invalid. For example:
                Invalid Json syntax
                Parameters out of bounds (number or enum range)
                Mandatory parameters not provided
                Parameter provided with wrong type
                Invalid characters
                Empty string
            </description>
        </element>
        <element name="CHAR_LIMIT_EXCEEDED"></element>
        <element name="INVALID_ID">
            <description>
                One of the provided IDs is not valid. For example
                This applies to CorrelationID, SubscriptionID, CommandID, MenuID, etc.
            </description>
        </element>
        <element name="DUPLICATE_NAME">
            <description>There was a conflict with an registered name (application or menu item) or vr command</description>
        </element>
        <element name="APPLICATION_NOT_REGISTERED">
            <description>An command can not be executed because no application has been registered with RegisterApplication.</description>
        </element>
        <element name="WRONG_LANGUAGE">
            <description>
                The requested language is currently not supported.
                Might be because of a mismatch of the currently active language on the headunit and the requested language
            </description>
        </element>
        <element name="OUT_OF_MEMORY">
            <description>The system could not process the request because the necessary memory couldn't be allocated</description>
        </element>
        <element name="TOO_MANY_PENDING_REQUESTS">
            <description>There are too many requests pending (means, that the response has not been delivered, yet).There may be a maximum of 1000 pending requests at a time.</description>
        </element>
        <element name="TOO_MANY_APPLICATIONS">
            <description>There are already too many registered applications</description>
        </element>
        <element name="APPLICATION_REGISTERED_ALREADY">
            <description>RegisterApplication has been called again, after a RegisterApplication was successful before.</description>
        </element>
        <element name="WARNINGS">
            <description>The RPC (e.g. SubscribeVehicleData) executed successfully but one or more items have a warning or failure.</description>
        </element>
        <element name="GENERIC_ERROR">
            <description>Provided data is valid but something went wrong in the lower layers.</description>
        </element>
        <element name="USER_DISALLOWED" since="2.0">
            <description>RPC is included in a functional group explicitly blocked by the user.</description>
        </element>
        <element name="TRUNCATED_DATA">
            <description>The RPC (e.g. ReadDID) executed successfully but the data exceeded the platform maximum threshold and thus, only part of the data is available.</description>
        </element>
        <element name="UNSUPPORTED_VERSION" since="2.0">
            <description>Sync doesn't support the protocol that is requested by the mobile application</description>
        </element>
        <element name="VEHICLE_DATA_NOT_ALLOWED" since="2.0">
            <description>The user has turned off access to vehicle data, and it is globally unavailable to mobile applications.</description>
        </element>
        <element name="FILE_NOT_FOUND" since="3.0">
            <description>A specified file could not be found on the headunit.</description>
        </element>
        <element name="CANCEL_ROUTE">
            <description>User selected to Cancel Route.</description>
        </element>
        <element name="SAVED" since="2.0">
            <description>The RPC (e.g. Slider) executed successfully and the user elected to save the current position / value.</description>
        </element>
        <element name="INVALID_CERT" since="3.0">
            <description>The certificate provided during authentication is invalid.</description>
        </element>
        <element name="EXPIRED_CERT" since="3.0">
            <description>The certificate provided during authentication is expired.</description>
        </element>
        <element name="RESUME_FAILED" since="3.0">
            <description>The provided hash ID does not match the hash of the current set of registered data or the core could not resume the previous data.</description>
        </element>
        <element name="DATA_NOT_AVAILABLE" since="4.5">
            <description>The requested information is currently not available. This is different than UNSUPPORTED_RESOURCE because it implies the data is at some point available. </description>
        </element>
        <element name="READ_ONLY" since="4.5">
            <description>The value being set is read only</description>
        </element>
        <element name="CORRUPTED_DATA" since="5.0">
            <description>The data sent failed to pass CRC check in receiver end</description>
        </element>
        <element name="ENCRYPTION_NEEDED" since="6.0">
            <description>SDL receives an un-encrypted RPC request that needs protection. </description>
        </element>
    </enum>
    
    <enum name="ButtonPressMode" since="1.0">
        <element name="LONG">
            <description>
                A button was released, after it was pressed for a long time
                Actual timing is defined by the headunit and may vary
            </description>
        </element>
        <element name="SHORT">
            <description>
                A button was released, after it was pressed for a short time
                Actual timing is defined by the headunit and may vary
            </description>
        </element>
    </enum>
    
    <enum name="ButtonEventMode" since="1.0">
        <element name="BUTTONUP">
            <description>A button has been released up</description>
        </element>
        <element name="BUTTONDOWN">
            <description>A button has been pressed down</description>
        </element>
    </enum>
    
    <enum name="Language" since="1.0">
        <element name="EN-US" internal_name="EN_US">
            <description>English - US</description>
        </element>
        <element name="ES-MX" internal_name="ES_MX">
            <description>Spanish - Mexico</description>
        </element>
        <element name="FR-CA" internal_name="FR_CA">
            <description>French - Canada</description>
        </element>
        <element name="DE-DE" internal_name="DE_DE" since="2.0">
            <description>German - Germany</description>
        </element>
        <element name="ES-ES" internal_name="ES_ES" since="2.0">
            <description>Spanish - Spain</description>
        </element>
        <element name="EN-GB" internal_name="EN_GB" since="2.0">
            <description>English - GB</description>
        </element>
        <element name="RU-RU" internal_name="RU_RU" since="2.0">
            <description>Russian - Russia</description>
        </element>
        <element name="TR-TR" internal_name="TR_TR" since="2.0">
            <description>Turkish - Turkey</description>
        </element>
        <element name="PL-PL" internal_name="PL_PL" since="2.0">
            <description>Polish - Poland</description>
        </element>
        <element name="FR-FR" internal_name="FR_FR" since="2.0">
            <description>French - France</description>
        </element>
        <element name="IT-IT" internal_name="IT_IT" since="2.0">
            <description>Italian - Italy</description>
        </element>
        <element name="SV-SE" internal_name="SV_SE" since="2.0">
            <description>Swedish - Sweden</description>
        </element>
        <element name="PT-PT" internal_name="PT_PT" since="2.0">
            <description>Portuguese - Portugal</description>
        </element>
        <element name="NL-NL" internal_name="NL_NL" since="2.0">
            <description>Dutch (Standard) - Netherlands</description>
        </element>
        <element name="EN-AU" internal_name="EN_AU" since="2.0">
            <description>English - Australia</description>
        </element>
        <element name="ZH-CN" internal_name="ZH_CN" since="2.0">
            <description>Mandarin - China</description>
        </element>
        <element name="ZH-TW" internal_name="ZH_TW" since="2.0">
            <description>Mandarin - Taiwan</description>
        </element>
        <element name="JA-JP" internal_name="JA_JP" since="2.0">
            <description>Japanese - Japan</description>
        </element>
        <element name="AR-SA" internal_name="AR_SA" since="2.0">
            <description>Arabic - Saudi Arabia</description>
        </element>
        <element name="KO-KR" internal_name="KO_KR" since="2.0">
            <description>Korean - South Korea</description>
        </element>
        <element name="PT-BR" internal_name="PT_BR" since="2.0">
            <description>Portuguese - Brazil</description>
        </element>
        <element name="CS-CZ" internal_name="CS_CZ" since="2.0">
            <description>Czech - Czech Republic</description>
        </element>
        <element name="DA-DK" internal_name="DA_DK" since="2.0">
            <description>Danish - Denmark</description>
        </element>
        <element name="NO-NO" internal_name="NO_NO" since="2.0">
            <description>Norwegian - Norway</description>
        </element>
        <element name="NL-BE" internal_name="NL_BE" since="2.0">
            <description>Dutch (Flemish) - Belgium</description>
        </element>
        <element name="EL-GR" internal_name="EL_GR" since="2.0">
            <description>Greek - Greece</description>
        </element>
        <element name="HU-HU" internal_name="HU_HU" since="2.0">
            <description>Hungarian - Hungary</description>
        </element>
        <element name="FI-FI" internal_name="FI_FI" since="2.0">
            <description>Finnish - Finland</description>
        </element>
        <element name="SK-SK" internal_name="SK_SK" since="2.0">
            <description>Slovak - Slovakia</description>
        </element>
        <element name="EN-IN" internal_name="EN_IN" since="4.5">
            <description>English - India</description>
        </element>
        <element name="TH-TH" internal_name="TH_TH" since="4.5">
            <description>Thai - Thailand</description>
        </element>
        <element name="EN-SA" internal_name="EN_SA" since="4.5">
            <description>English - Middle East</description>
        </element>
        <element name="HE-IL" internal_name="HE_IL" since="4.5">
            <description>Hebrew - Israel</description>
        </element>
        <element name="RO-RO" internal_name="RO_RO" since="4.5">
            <description>Romanian - Romania</description>
        </element>
        <element name="UK-UA" internal_name="UK_UA" since="4.5">
            <description>Ukrainian - Ukraine</description>
        </element>
        <element name="ID-ID" internal_name="ID_ID" since="4.5">
            <description>Indonesian - Indonesia</description>
        </element>
        <element name="VI-VN" internal_name="VI_VN" since="4.5">
            <description>Vietnamese - Vietnam</description>
        </element>
        <element name="MS-MY" internal_name="MS_MY" since="4.5">
            <description>Malay - Malaysia</description>
        </element>
        <element name="HI-IN" internal_name="HI_IN" since="4.5">
            <description>Hindi - India</description>
        </element>
    </enum>
    
    <enum name="UpdateMode" since="1.0">
        <description>Describes how the media clock timer should behave on the platform</description>
        <element name="COUNTUP" >
            <description>Starts the media clock timer counting upwards, as in time elapsed.</description>
        </element>
        <element name="COUNTDOWN" >
            <description>Starts the media clock timer counting downwards, as in time remaining.</description>
        </element>
        <element name="PAUSE" >
            <description>Pauses the media clock timer</description>
        </element>
        <element name="RESUME" >
            <description>Resume the media clock timer</description>
        </element>
        <element name="CLEAR" >
            <description>Clears the media clock timer (previously done through Show->mediaClock)</description>
        </element>
    </enum>
    
    <enum name="TimerMode" since="1.0">
        <element name="UP" >
            <description>Causes the media clock timer to update from 0:00 to a specified time</description>
        </element>
        <element name="DOWN" >
            <description>Causes the media clock timer to update from a specified time to 0:00</description>
        </element>
        <element name="NONE" >
            <description>Indicates to not use the media clock timer</description>
        </element>
    </enum>
    
    <enum name="InteractionMode" since="1.0">
        <description>For application-requested interactions, this mode indicates the method in which the user is notified and uses the interaction.</description>
        <element name="MANUAL_ONLY" >
            <description>This mode causes the interaction to only occur on the display, meaning the choices are provided only via the display. No Voice Interaction.</description>
        </element>
        <element name="VR_ONLY" >
            <description>This mode causes the interaction to only occur using the headunits VR system. Selections are made by saying the command.</description>
        </element>
        <element name="BOTH" >
            <description>This mode causes both a VR and display selection option for an interaction. The user will first be asked via Voice Interaction (if available). If this is unsuccessful, the system will switch to manual input.</description>
        </element>
    </enum>
    
    <enum name="LayoutMode" since="3.0">
        <description>For touchscreen interactions, the mode of how the choices are presented.</description>
        <element name="ICON_ONLY" >
            <description>This mode causes the interaction to display the previous set of choices as icons.</description>
        </element>
        <element name="ICON_WITH_SEARCH" >
            <description>This mode causes the interaction to display the previous set of choices as icons along with a search field in the HMI.</description>
        </element>
        <element name="LIST_ONLY" >
            <description>This mode causes the interaction to display the previous set of choices as a list.</description>
        </element>
        <element name="LIST_WITH_SEARCH" >
            <description>This mode causes the interaction to display the previous set of choices as a list along with a search field in the HMI.</description>
        </element>
        <element name="KEYBOARD" >
            <description>This mode causes the interaction to immediately display a keyboard entry through the HMI.</description>
        </element>
    </enum>

    <enum name="WindowType" since="6.0">
        <element name="MAIN">
            <description>
                This window type describes the main window on a display.
            </description>
        </element>
        <element name="WIDGET">
            <description>
                A widget is a small window that the app can create to provide information and soft buttons for quick app control.
            </description>
        </element>
    </enum>

    <enum name="PredefinedWindows" since="6.0">
        <element name="DEFAULT_WINDOW" value="0">
            <description>The default window is a main window pre-created on behalf of the app.</description>
        </element>
        <element name="PRIMARY_WIDGET" value="1">
            <description>The primary widget of the app.</description>
        </element>
    </enum>

    <enum name="HMILevel" since="1.0">
        <description>Enumeration that describes current levels of HMI.</description>
        <element name="FULL" internal_name="HMI_FULL" />
        <element name="LIMITED" internal_name="HMI_LIMITED" />
        <element name="BACKGROUND" internal_name="HMI_BACKGROUND" />
        <element name="NONE" internal_name="HMI_NONE" />
    </enum>
    
    <enum name="AudioStreamingState" since="1.0">
        <description>Enumeration that describes possible states of audio streaming.</description>
        <element name="AUDIBLE" />
        <element name="ATTENUATED" />
        <element name="NOT_AUDIBLE" />
    </enum>
    
    <enum name="SystemAction" since="1.0">
        <description>Enumeration that describes system actions that can be triggered.</description>
        <element name="DEFAULT_ACTION">
            <description>Default action occurs.  Standard behavior (e.g. SoftButton clears overlay).</description>
        </element>
        <element name="STEAL_FOCUS">
            <description>App is brought into HMI_FULL.</description>
        </element>
        <element name="KEEP_CONTEXT">
            <description>Current system context is maintained.  An overlay is persisted even though a SoftButton has been pressed and the notification sent.</description>
        </element>
    </enum>
    
    <enum name="SystemContext" since="1.0">
        <description>Enumeration that describes possible contexts an app's HMI might be in. Communicated to whichever app is in HMI FULL, except Alert.</description>
        <element name="MAIN" internal_name="SYSCTXT_MAIN">
            <description>The app's persistent display (whether media/non-media/navigation) is fully visible onscreen.</description>
        </element>
        <element name="VRSESSION" internal_name="SYSCTXT_VRSESSION">
            <description>The system is currently in a VR session (with whatever dedicated VR screen being overlaid onscreen).</description>
        </element>
        <element name="MENU" internal_name="SYSCTXT_MENU">
            <description>The system is currently displaying an in-App menu onscreen.</description>
        </element>
        <element name="HMI_OBSCURED" internal_name="SYSCTXT_HMI_OBSCURED">
            <description>The app's display HMI is currently being obscured by either a system or other app's overlay.</description>
        </element>
        <element name="ALERT" internal_name="SYSCTXT_ALERT">
            <description>Broadcast only to whichever app has an alert currently being displayed.</description>
        </element>
    </enum>

    <enum name="VideoStreamingState" since="5.0">
        <description>Enumeration that describes possible states of video streaming. </description>
        <element name="STREAMABLE" />
        <element name="NOT_STREAMABLE" />
    </enum>
    
    <enum name="SoftButtonType" since="2.0">
        <description>Contains information about the SoftButton capabilities.</description>
        <element name="TEXT" internal_name="SBT_TEXT"/>
        <element name="IMAGE" internal_name="SBT_IMAGE"/>
        <element name="BOTH" internal_name="SBT_BOTH"/>
    </enum>
    
    <enum name="AppInterfaceUnregisteredReason" since="1.0">
        <description>Error code, which comes from the module side.</description>
        <!-- Deprecate
         <element name="USER_EXIT" />
         -->
        <element name="IGNITION_OFF" />
        <element name="BLUETOOTH_OFF" />
        <element name="USB_DISCONNECTED" />
        <element name="REQUEST_WHILE_IN_NONE_HMI_LEVEL" />
        <element name="TOO_MANY_REQUESTS" />
        <element name="DRIVER_DISTRACTION_VIOLATION" />
        <element name="LANGUAGE_CHANGE" />
        <element name="MASTER_RESET" />
        <element name="FACTORY_DEFAULTS" />
        <element name="APP_UNAUTHORIZED" since="2.0" />
        <element name="PROTOCOL_VIOLATION" since="4.0" />
        <element name="UNSUPPORTED_HMI_RESOURCE" since="4.1" />
    </enum>
    
    <enum name="TriggerSource" since="1.0">
        <description>Indicates the source from where the command was triggered.</description>
        <element name="MENU" internal_name="TS_MENU" />
        <element name="VR" internal_name="TS_VR" />
        <element name="KEYBOARD" internal_name="TS_KEYBOARD" since="3.0" />
    </enum>
    
    <enum name="HmiZoneCapabilities" since="1.0">
        <description>Contains information about the HMI zone capabilities.</description>
        <description>For future use.</description>
        <element name="FRONT" />
        <element name="BACK" />
    </enum>
    
    <enum name="SpeechCapabilities" since="1.0">
        <description>Contains information about the TTS capabilities.</description>
        <element name="TEXT" internal_name="SC_TEXT"/>
        <element name="SAPI_PHONEMES" />
        <element name="LHPLUS_PHONEMES" />
        <element name="PRE_RECORDED" />
        <element name="SILENCE" />
        <element name="FILE" since="5.0" />
    </enum>
    
    <enum name="VrCapabilities" since="1.0">
        <description>Contains information about the VR capabilities.</description>
        <element name="TEXT" internal_name="VR_TEXT"/>
    </enum>
    
    <enum name="PrerecordedSpeech" since="1.0">
        <description>Contains a list of prerecorded speech items present on the platform.</description>
        <element name="HELP_JINGLE" />
        <element name="INITIAL_JINGLE" />
        <element name="LISTEN_JINGLE" />
        <element name="POSITIVE_JINGLE" />
        <element name="NEGATIVE_JINGLE" />
    </enum>
    
    <enum name="SamplingRate" since="2.0">
        <description>Describes different sampling options for PerformAudioPassThru.</description>
        <element name="8KHZ" internal_name="SamplingRate_8KHZ">
            <description>Sampling rate of 8000 Hz.</description>
        </element>
        <element name="16KHZ" internal_name="SamplingRate_16KHZ">
            <description>Sampling rate of 16000 Hz.</description>
        </element>
        <element name="22KHZ" internal_name="SamplingRate_22KHZ">
            <description>Sampling rate of 22050 Hz.</description>
        </element>
        <element name="44KHZ" internal_name="SamplingRate_44KHZ">
            <description>Sampling rate of 44100 Hz.</description>
        </element>
    </enum>
    
    <enum name="BitsPerSample" since="2.0">
        <description>Describes different quality options for PerformAudioPassThru.</description>
        <element name="8_BIT" internal_name="BitsPerSample_8_BIT">
            <description>Audio sample is 8 bits wide, unsigned.</description>
        </element>
        <element name="16_BIT" internal_name="BitsPerSample_16_BIT">
            <description>Audio sample is 16 bits wide, signed, and in little endian.</description>
        </element>
    </enum>
    
    <enum name="AudioType" since="2.0">
        <description>Describes different audio type options for PerformAudioPassThru.</description>
        <element name="PCM">
            <description>Linear PCM.</description>
        </element>
    </enum>
    
    <struct name="AudioPassThruCapabilities" since="2.0">
        <description>
            Describes different audio type configurations for PerformAudioPassThru.
            e.g. {8kHz,8-bit,PCM}
            The audio is recorded in monaural.
        </description>
        <param name="samplingRate" type="SamplingRate" mandatory="true"/>
        <param name="bitsPerSample" type="BitsPerSample" mandatory="true"/>
        <param name="audioType" type="AudioType" mandatory="true"/>
    </struct>
    
    <enum name="VehicleDataType" since="2.0">
        <description>Defines the data types that can be published and subscribed to.</description>
        <element name="VEHICLEDATA_GPS">
            <description>Notifies GPSData may be subscribed</description>
        </element>
        <element name="VEHICLEDATA_SPEED" />
        <element name="VEHICLEDATA_RPM" />
        <element name="VEHICLEDATA_FUELLEVEL" />
        <element name="VEHICLEDATA_FUELLEVEL_STATE" />
        <element name="VEHICLEDATA_FUELCONSUMPTION" />
        <element name="VEHICLEDATA_EXTERNTEMP" />
        <element name="VEHICLEDATA_VIN" />
        <element name="VEHICLEDATA_PRNDL" />
        <element name="VEHICLEDATA_TIREPRESSURE" />
        <element name="VEHICLEDATA_ODOMETER" />
        <element name="VEHICLEDATA_BELTSTATUS" />
        <element name="VEHICLEDATA_BODYINFO" />
        <element name="VEHICLEDATA_DEVICESTATUS" />
        <element name="VEHICLEDATA_ECALLINFO" />
        <element name="VEHICLEDATA_AIRBAGSTATUS" />
        <element name="VEHICLEDATA_EMERGENCYEVENT" />
        <element name="VEHICLEDATA_CLUSTERMODESTATUS" />
        <element name="VEHICLEDATA_MYKEY" />
        <element name="VEHICLEDATA_BRAKING" />
        <element name="VEHICLEDATA_WIPERSTATUS" />
        <element name="VEHICLEDATA_HEADLAMPSTATUS" />
        <element name="VEHICLEDATA_BATTVOLTAGE" />
        <element name="VEHICLEDATA_ENGINETORQUE" />
        <element name="VEHICLEDATA_ACCPEDAL" />
        <element name="VEHICLEDATA_STEERINGWHEEL" />
        <element name="VEHICLEDATA_TURNSIGNAL" since="5.0" />
        <element name="VEHICLEDATA_FUELRANGE" since="5.0" />
        <element name="VEHICLEDATA_ENGINEOILLIFE" since="5.0" />
        <element name="VEHICLEDATA_ELECTRONICPARKBRAKESTATUS" since="5.0" />
        <element name="VEHICLEDATA_CLOUDAPPVEHICLEID" since="5.1"/>
        <element name="VEHICLEDATA_OEM_CUSTOM_DATA" since="6.0"/>
    </enum>

    <enum name="HybridAppPreference" since="5.1">
        <description>Enumeration for the user's preference of which app type to use when both are available</description>
        <element name="MOBILE" />
        <element name="CLOUD" />
        <element name="BOTH" />
    </enum>

    <struct name="CloudAppProperties" since="5.1">
        <param name="nicknames" type="String" minlength="0" maxlength="100" array="true" minsize="0" maxsize="100" mandatory="false">
            <description>An array of app names a cloud app is allowed to register with. If included in a SetCloudAppProperties request, this value will overwrite the existing "nicknames" field in the app policies section of the policy table.</description>
        </param>
        <param name="appID" type="String" maxlength="100" mandatory="true"/>
        <param name="enabled" type="Boolean" mandatory="false">
            <description>If true, cloud app will be included in HMI RPC UpdateAppList</description>
        </param>
        <param name="authToken" type="String" maxlength="65535" mandatory="false">
            <description>Used to authenticate websocket connection on app activation</description>
        </param>
        <param name="cloudTransportType" type="String" maxlength="100" mandatory="false">
            <description>Specifies the connection type Core should use</description>
        </param>
        <param name="hybridAppPreference" type="HybridAppPreference" mandatory="false">
            <description>Specifies the user preference to use the cloud app version or mobile app version when both are available</description>
        </param>
        <param name="endpoint" type="String" maxlength="65535" mandatory="false">
            <description>Specifies the endpoint which Core will attempt to connect to when this app is selected</description>
        </param>
    </struct>
    
    <enum name="ButtonName" since="1.0">
        <description>Defines the hard (physical) and soft (touchscreen) buttons available from the module</description>
        <element name="OK" />
        <element name="PLAY_PAUSE" since="5.0">
            <description>
              The button name for the physical Play/Pause
              toggle that can be used by media apps.
            </description>
            <warning>
              Please use the physical OK button in order to
              use a Play/Pause toggle for versions &lt; 4.5.0.
            </warning>
        </element>
        <element name="SEEKLEFT" />
        <element name="SEEKRIGHT" />
        <element name="TUNEUP" />
        <element name="TUNEDOWN" />
        <element name="PRESET_0" />
        <element name="PRESET_1" />
        <element name="PRESET_2" />
        <element name="PRESET_3" />
        <element name="PRESET_4" />
        <element name="PRESET_5" />
        <element name="PRESET_6" />
        <element name="PRESET_7" />
        <element name="PRESET_8" />
        <element name="PRESET_9" />
        <element name="CUSTOM_BUTTON" />
        <element name="SEARCH" />
        <!-- Climate Buttons -->
        <element name="AC_MAX" since="4.5" />
        <element name="AC" since="4.5" />
        <element name="RECIRCULATE" since="4.5" />
        <element name="FAN_UP" since="4.5" />
        <element name="FAN_DOWN" since="4.5" />
        <element name="TEMP_UP" since="4.5" />
        <element name="TEMP_DOWN" since="4.5" />
        <element name="DEFROST_MAX" since="4.5" />
        <element name="DEFROST" since="4.5" />
        <element name="DEFROST_REAR" since="4.5" />
        <element name="UPPER_VENT" since="4.5" />
        <element name="LOWER_VENT" since="4.5" />
        <!-- Radio Buttons -->
        <element name="VOLUME_UP" since="4.5" />
        <element name="VOLUME_DOWN" since="4.5" />
        <element name="EJECT" since="4.5" />
        <element name="SOURCE" since="4.5" />
        <element name="SHUFFLE" since="4.5" />
        <element name="REPEAT" since="4.5" />
        <!-- Navigation Buttons -->
        <element name="NAV_CENTER_LOCATION" since="6.0" />
        <element name="NAV_ZOOM_IN" since="6.0" />
        <element name="NAV_ZOOM_OUT" since="6.0" />
        <element name="NAV_PAN_UP" since="6.0" />
        <element name="NAV_PAN_UP_RIGHT" since="6.0" />
        <element name="NAV_PAN_RIGHT" since="6.0" />
        <element name="NAV_PAN_DOWN_RIGHT" since="6.0" />
        <element name="NAV_PAN_DOWN" since="6.0" />
        <element name="NAV_PAN_DOWN_LEFT" since="6.0" />
        <element name="NAV_PAN_LEFT" since="6.0" />
        <element name="NAV_PAN_UP_LEFT" since="6.0" />
        <element name="NAV_TILT_TOGGLE" since="6.0" >
            <description>If supported, this toggles between a top-down view and an angled/3D view. If your app supports different, but substantially similar options, then you may implement those. If you don't implement these or similar options, do not subscribe to this button.</description>
        </element>
        <element name="NAV_ROTATE_CLOCKWISE" since="6.0" />
        <element name="NAV_ROTATE_COUNTERCLOCKWISE" since="6.0" />
        <element name="NAV_HEADING_TOGGLE" since="6.0" >
            <description>If supported, this toggles between locking the orientation to north or to the vehicle's heading. If your app supports different, but substantially similar options, then you may implement those. If you don't implement these or similar options, do not subscribe to this button.</description>
        </element>
    </enum>
    
    <enum name="MediaClockFormat" since="1.0">
        <element name="CLOCK1">
            <description>
                minutesFieldWidth = 2;minutesFieldMax = 19;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 19;maxMinutes = 59;maxSeconds = 59;
                used for Type II and CID headunits
            </description>
        </element>
        <element name="CLOCK2">
            <description>
                minutesFieldWidth = 3;minutesFieldMax = 199;secondsFieldWidth = 2;secondsFieldMax = 99;maxHours = 59;maxMinutes = 59;maxSeconds = 59;
                used for Type V headunit
            </description>
        </element>
        <element name="CLOCK3" since="2.0">
            <description>
                minutesFieldWidth = 2;minutesFieldMax = 59;secondsFieldWidth = 2;secondsFieldMax = 59;maxHours = 9;maxMinutes = 59;maxSeconds = 59;
                used for GEN1.1 MFD3/4/5 headunits
            </description>
        </element>
        <element name="CLOCKTEXT1">
            <description>
                5 characters possible
                Format:      1|sp   c   :|sp   c   c
                1|sp : digit "1" or space
                c    : character out of following character set: sp|0-9|[letters, see TypeII column in XLS. See [@TODO: create file ref]]
                :|sp : colon or space
                used for Type II headunit
            </description>
        </element>
        <element name="CLOCKTEXT2">
            <description>
                5 chars possible
                Format:      1|sp   c   :|sp   c   c
                1|sp : digit "1" or space
                c    : character out of following character set: sp|0-9|[letters, see CID column in XLS. See [@TODO: create file ref]]
                :|sp : colon or space
                used for CID headunit
                NOTE: difference between CLOCKTEXT1 and CLOCKTEXT2 is the supported character set
            </description>
        </element>
        <element name="CLOCKTEXT3">
            <description>
                6 chars possible
                Format:      1|sp   c   c   :|sp   c   c
                1|sp : digit "1" or space
                c    : character out of following character set: sp|0-9|[letters, see Type 5 column in XLS]. See [@TODO: create file ref]
                :|sp : colon or space
                used for Type V headunit
            </description>
        </element>
        <element name="CLOCKTEXT4" since="2.0">
            <description>
                6 chars possible
                Format:      c   :|sp   c   c   :   c   c
                :|sp : colon or space
                c    : character out of following character set: sp|0-9|[letters].
                used for GEN1.1 MFD3/4/5 headunits
            </description>
        </element>
    </enum>
    
    <enum name="DisplayType" deprecated="true" since="5.0">
        <description>See DAES for further infos regarding the displays</description>
        <element name="CID"/>
        <element name="TYPE2" />
        <element name="TYPE5" />
        <element name="NGN" />
        <element name="GEN2_8_DMA" since="3.0" />
        <element name="GEN2_6_DMA" since="3.0" />
        <element name="MFD3" since="2.0" />
        <element name="MFD4" since="2.0" />
        <element name="MFD5" since="2.0" />
        <element name="GEN3_8-INCH" internal_name="GEN3_8_INCH" since="3.0" />
        <element name="SDL_GENERIC" since="4.0" />
        <history>
            <enum name="DisplayType" since="1.0" until="5.0"/>
        </history>
    </enum>
    
    <enum name="TextFieldName" since="1.0">
        <element name="mainField1">
            <description>The first line of first set of main fields of the persistent display; applies to "Show"</description>
        </element>
        
        <element name="mainField2">
            <description>The second line of first set of main fields of the persistent display; applies to "Show"</description>
        </element>
        
        <element name="mainField3">
            <description>The first line of second set of main fields of persistent display; applies to "Show"</description>
        </element>
        
        <element name="mainField4">
            <description>The second line of second set of main fields of the persistent display; applies to "Show"</description>
        </element>
        
        <element name="statusBar">
            <description>The status bar on NGN; applies to "Show"</description>
        </element>
        
        <element name="mediaClock">
            <description>Text value for MediaClock field; applies to "Show"</description>
        </element>
        
        <element name="mediaTrack">
            <description>The track field of NGN and GEN1.1 MFD displays. This field is only available for media applications; applies to "Show"</description>
        </element>

        <element name="templateTitle" since="6.0">
            <description>The title of the new template that will be displayed; applies to "Show"</description>
        </element>

        <element name="alertText1">
            <description>The first line of the alert text field; applies to "Alert"</description>
        </element>
        
        <element name="alertText2" since="2.0">
            <description>The second line of the alert text field; applies to "Alert"</description>
        </element>
        
        <element name="alertText3" since="2.0">
            <description>The third line of the alert text field; applies to "Alert"</description>
        </element>
        
        <element name="scrollableMessageBody" since="2.0">
            <description>Long form body of text that can include newlines and tabs; applies to "ScrollableMessage"</description>
        </element>
        
        <element name="initialInteractionText" since="2.0">
            <description> First line suggestion for a user response (in the case of VR enabled interaction)</description>
        </element>
        
        <element name="navigationText1" since="2.0">
            <description> First line of navigation text</description>
        </element>
        
        <element name="navigationText2" since="2.0">
            <description> Second line of navigation text</description>
        </element>
        
        <element name="ETA" since="2.0">
            <description> Estimated Time of Arrival time for navigation</description>
        </element>
        
        <element name="totalDistance" since="2.0">
            <description> Total distance to destination for navigation</description>
        </element>
        
        <element name="audioPassThruDisplayText1" since="2.0">
            <description> First line of text for audio pass thru</description>
        </element>
        
        <element name="audioPassThruDisplayText2" since="2.0">
            <description> Second line of text for audio pass thru</description>
        </element>
        
        <element name="sliderHeader" since="2.0">
            <description> Header text for slider</description>
        </element>
        
        <element name="sliderFooter" since="2.0">
            <description> Footer text for slider</description>
        </element>
        
        <element name="menuName">
            <description> Primary text for Choice</description>
        </element>
        
        <element name="secondaryText">
            <description> Secondary text for Choice</description>
        </element>
        
        <element name="tertiaryText">
            <description> Tertiary text for Choice</description>
        </element>
        
        <element name="menuTitle">
            <description> Optional text to label an app menu button (for certain touchscreen platforms).</description>
        </element>
        
        <element name="locationName" since="4.0">
            <description> Optional name / title of intended location for SendLocation.</description>
        </element>
        
        <element name="locationDescription" since="4.0">
            <description> Optional description of intended location / establishment (if applicable) for SendLocation.</description>
        </element>
        
        <element name="addressLines" since="4.0">
            <description> Optional location address (if applicable) for SendLocation.</description>
        </element>
        
        <element name="phoneNumber" since="4.0">
            <description> Optional hone number of intended location / establishment (if applicable) for SendLocation.</description>
        </element>
        
    </enum>
    
    <enum name="ImageFieldName" since="3.0">
        <element name="softButtonImage">
            <description>The image field for SoftButton</description>
        </element>
        
        <element name="choiceImage">
            <description>The first image field for Choice</description>
        </element>
        
        <element name="choiceSecondaryImage">
            <description>The secondary image field for Choice</description>
        </element>
        
        <element name="vrHelpItem">
            <description>The image field for vrHelpItem</description>
        </element>
        
        <element name="turnIcon">
            <description>The image field for Turn</description>
        </element>
        
        <element name="menuIcon">
            <description>The image field for the menu icon in SetGlobalProperties</description>
        </element>
        
        <element name="cmdIcon">
            <description>The image field for AddCommand</description>
        </element>
        
        <element name="appIcon">
            <description>The image field for the app icon (set by setAppIcon)</description>
        </element>
        
        <element name="graphic">
            <description>The primary image field for Show</description>
        </element>
        
        <element name="secondaryGraphic" since="5.0">
            <description>The secondary image field for Show</description>
        </element>
        
        <element name="showConstantTBTIcon">
            <description>The primary image field for ShowConstantTBT</description>
        </element>
        
        <element name="showConstantTBTNextTurnIcon">
            <description>The secondary image field for ShowConstantTBT</description>
        </element>
        
        <element name="locationImage" since="4.0">
            <description>The optional image of a destination / location</description>
        </element>

        <element name="alertIcon" since="6.0">
            <description>The image field for Alert</description>
        </element>

    </enum>
    
    <enum name="CharacterSet" since="1.0">
        <description>The list of potential character sets</description>
        <element name="TYPE2SET">
            <description>See [@TODO: create file ref]</description>
        </element>
        <element name="TYPE5SET">
            <description>See [@TODO: create file ref]</description>
        </element>
        <element name="CID1SET">
            <description>See [@TODO: create file ref]</description>
        </element>
        <element name="CID2SET">
            <description>See [@TODO: create file ref]</description>
        </element>
    </enum>
    
    <enum name="TextAlignment" since="1.0">
        <description>The list of possible alignments, left, right, or centered</description>
        <element name="LEFT_ALIGNED" />
        <element name="RIGHT_ALIGNED" />
        <element name="CENTERED" />
    </enum>
    
    <enum name="TBTState" since="2.0">
        <description>Enumeration that describes possible states of turn-by-turn client or SmartDeviceLink app.</description>
        <element name="ROUTE_UPDATE_REQUEST" />
        <element name="ROUTE_ACCEPTED" />
        <element name="ROUTE_REFUSED" />
        <element name="ROUTE_CANCELLED" />
        <element name="ETA_REQUEST" />
        <element name="NEXT_TURN_REQUEST" />
        <element name="ROUTE_STATUS_REQUEST" />
        <element name="ROUTE_SUMMARY_REQUEST" />
        <element name="TRIP_STATUS_REQUEST" />
        <element name="ROUTE_UPDATE_REQUEST_TIMEOUT" />
    </enum>
    
    <enum name="DriverDistractionState" since="2.0">
        <description>Enumeration that describes possible states of driver distraction.</description>
        <element name="DD_ON" />
        <element name="DD_OFF" />
    </enum>
    
    <enum name="ImageType" since="2.0">
        <description>Contains information about the type of image.</description>
        <element name="STATIC" />
        <element name="DYNAMIC" />
    </enum>
    
    <enum name="DeliveryMode" since="4.1">
        <description>The mode in which the SendLocation request is sent</description>
        <element name="PROMPT" />
        <element name="DESTINATION" />
        <element name="QUEUE" />
    </enum>
    
    <enum name="VideoStreamingProtocol" since="4.5">
        <description>Enum for each type of video streaming protocol type.</description>
        <element name="RAW">
            <description>Raw stream bytes that contains no timestamp data and is the lowest supported video streaming</description>
        </element>
        <element name="RTP">
            <description>RTP facilitates the transfer of real-time data. Information provided by this protocol include timestamps (for synchronization), sequence numbers (for packet loss and reordering detection) and the payload format which indicates the encoded format of the data.</description>
        </element>
        <element name="RTSP">
            <description>The transmission of streaming data itself is not a task of RTSP. Most RTSP servers use the Real-time Transport Protocol (RTP) in conjunction with Real-time Control Protocol (RTCP) for media stream delivery. However, some vendors implement proprietary transport protocols. </description>
        </element>
        <element name="RTMP">
            <description> Real-Time Messaging Protocol (RTMP) was initially a proprietary protocol developed by Macromedia for streaming audio, video and data over the Internet, between a Flash player and a server. Macromedia is now owned by Adobe, which has released an incomplete version of the specification of the protocol for public use.</description>
        </element>
        <element name="WEBM">
            <description>The WebM container is based on a profile of Matroska. WebM initially supported VP8 video and Vorbis audio streams. In 2013 it was updated to accommodate VP9 video and Opus audio.</description>
        </element>
    </enum>
    
    <enum name="VideoStreamingCodec" since="4.5">
        <description>Enum for each type of video streaming codec.</description>
        <element name="H264">
            <description>A block-oriented motion-compensation-based video compression standard. As of 2014 it is one of the most commonly used formats for the recording, compression, and distribution of video content.</description>
        </element>
        <element name="H265">
            <description>High Efficiency Video Coding (HEVC), also known as H.265 and MPEG-H Part 2, is a video compression standard, one of several potential successors to the widely used AVC (H.264 or MPEG-4 Part 10). In comparison to AVC, HEVC offers about double the data compression ratio at the same level of video quality, or substantially improved video quality at the same bit rate. It supports resolutions up to 8192x4320, including 8K UHD.</description>
        </element>
        <element name="Theora">
            <description>Theora is derived from the formerly proprietary VP3 codec, released into the public domain by On2 Technologies. It is broadly comparable in design and bitrate efficiency to MPEG-4 Part 2, early versions of Windows Media Video, and RealVideo while lacking some of the features present in some of these other codecs. It is comparable in open standards philosophy to the BBC's Dirac codec.</description>
        </element>
        <element name="VP8">
            <description>VP8 can be multiplexed into the Matroska-based container format WebM along with Vorbis and Opus audio. The image format WebP is based on VP8's intra-frame coding. VP8's direct successor, VP9, and the emerging royalty-free internet video format AV1 from the Alliance for Open Media (AOMedia) are based on VP8.</description>
        </element>
        <element name="VP9">
            <description>Similar to VP8, but VP9 is customized for video resolutions beyond high-definition video (UHD) and also enables lossless compression.</description>
        </element>
    </enum>
    
    <enum name="AudioStreamingIndicator" since="5.0">
        <element name="PLAY_PAUSE">
            <description>
                Default playback indicator.
                By default the playback indicator should be PLAY_PAUSE when:
                    - the media app is newly registered on the head unit (after RegisterAppInterface)
                    - the media app was closed by the user (App enters HMI_NONE)
                    - the app sends SetMediaClockTimer with audioStreamingIndicator not set to any value
            </description>
        </element>
        <element name="PLAY">
            <description>Indicates that a button press of the Play/Pause button starts the audio playback.</description>
        </element>
        <element name="PAUSE">
            <description>Indicates that a button press of the Play/Pause button pauses the current audio playback.</description>
        </element>
        <element name="STOP">
            <description>Indicates that a button press of the Play/Pause button stops the current audio playback.</description>
        </element>
    </enum> 
    
    <struct name="Image" since="2.0">
        <param name="value" minlength="0" maxlength="65535" type="String" mandatory="true">
            <description>Either the static hex icon value or the binary image file name identifier (sent by PutFile).</description>
        </param>
        <param name="imageType" type="ImageType" mandatory="true">
            <description>Describes, whether it is a static or dynamic image.</description>
        </param>
        <param name="isTemplate" type="Boolean" mandatory="false" since="5.0">
            <description>If true, the image is a template image and can be recolored by the HMI</description>
        </param>
    </struct>
    
    <struct name="SoftButton" since="2.0">
        <param name="type" type="SoftButtonType" mandatory="true">
            <description>Describes, whether it is text, highlighted text, icon, or dynamic image. See softButtonType</description>
        </param>
        <param name="text" minlength="0" maxlength="500" type="String" mandatory="false">
            <description>Optional text to display (if defined as TEXT or BOTH)</description>
        </param>
        <param name="image" type="Image" mandatory="false">
            <description>Optional image struct for SoftButton (if defined as IMAGE or BOTH)</description>
        </param>
        <param name="isHighlighted" type="Boolean" defvalue="false" mandatory="false">
            <description>
                True, if highlighted
                False, if not highlighted
            </description>
        </param>
        <param name="softButtonID" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Value which is returned via OnButtonPress / OnButtonEvent</description>
        </param>
        <param name="systemAction" type="SystemAction" defvalue="DEFAULT_ACTION" mandatory="false">
            <description>Parameter indicating whether selecting a SoftButton shall call a specific system action.  This is intended to allow Notifications to bring the callee into full / focus; or in the case of persistent overlays, the overlay can persist when a SoftButton is pressed.</description>
        </param>
    </struct>
    
    <struct name="Choice" since="1.0">
        <description>A choice is an option given to the user, which can be selected either by menu, or through voice recognition system.</description>
        <param name="choiceID" type="Integer" minvalue="0" maxvalue="65535"  mandatory="true"/>
        <param name="menuName" type="String" maxlength="500"  mandatory="true"/>
        <param name="vrCommands" type="String" minsize="1" maxsize="100" maxlength="99" array="true" mandatory="false" since="5.0">
            <history>
                <param name="vrCommands" type="String" minsize="1" maxsize="100" maxlength="99" array="true" mandatory="true" since="1.0" until="5.0"/>
            </history>
        </param>
        <param name="image" type="Image" mandatory="false" since="2.0" />
        <param name="secondaryText" maxlength="500" type="String" mandatory="false" since="3.0">
            <description>Optional secondary text to display; e.g. address of POI in a search result entry</description>
        </param>
        <param name="tertiaryText" maxlength="500" type="String" mandatory="false" since="3.0">
            <description>Optional tertiary text to display; e.g. distance to POI for a search result entry</description>
        </param>
        <param name="secondaryImage" type="Image" mandatory="false" since="3.0">
            <description>Optional secondary image struct for choice</description>
        </param>
    </struct>
    
    <struct name="VrHelpItem" since="2.0">
        <param name="text" maxlength="500" type="String" mandatory="true">
            <description>Text to display for VR Help item</description>
        </param>
        <param name="image" type="Image" mandatory="false">
            <description>Image struct for VR Help item</description>
        </param>
        <param name="position" type="Integer" minvalue="1" maxvalue="100" mandatory="true">
            <description>Position to display item in VR Help list</description>
        </param>
    </struct>
    
    <struct name="SyncMsgVersion" since="1.0">
        <description>Specifies the version number of the SmartDeviceLink protocol that is supported by the mobile application</description>
        
        <param name="majorVersion" type="Integer" minvalue="1" maxvalue="10" mandatory="true">
            <description>The major version indicates versions that is not-compatible to previous versions.</description>
        </param>
        <param name="minorVersion" type="Integer" minvalue="0" maxvalue="1000" mandatory="true">
            <description>The minor version indicates a change to a previous version that should still allow to be run on an older version (with limited functionality)</description>
        </param>
        <param name="patchVersion" type="Integer" minvalue="0" maxvalue="1000" mandatory="false" since="4.3">
            <description>The patch version indicates a fix to existing functionality in a previous version that should still be able to be run on an older version </description>
        </param>
    </struct>
    
    <enum name="GlobalProperty" since="1.0">
        <description>The different global properties.</description>
        <element name="USER_LOCATION" since="6.0">
            <description>Location of the user's seat of setGlobalProperties</description>
        </element>
        <element name="HELPPROMPT" since="1.0">
            <description>The property helpPrompt of setGlobalProperties</description>
        </element>
        <element name="TIMEOUTPROMPT" since="1.0">
            <description>The property timeoutPrompt of setGlobalProperties</description>
        </element>
        <element name="VRHELPTITLE" since="2.0">
            <description>The property vrHelpTitle of setGlobalProperties</description>
        </element>
        <element name="VRHELPITEMS" since="2.0">
            <description>The property array of vrHelp of setGlobalProperties</description>
        </element>
        <element name="MENUNAME" since="3.0">
            <description>The property in-app menu name of setGlobalProperties</description>
        </element>
        <element name="MENUICON" since="3.0">
            <description>The property in-app menu icon of setGlobalProperties</description>
        </element>
        <element name="KEYBOARDPROPERTIES" since="3.0">
            <description>The on-screen keyboard configuration of setGlobalProperties</description>
        </element>
    </enum>
    
    <enum name="CompassDirection" since="2.0">
        <description>The list of potential compass directions</description>
        <element name="NORTH">
        </element>
        <element name="NORTHWEST">
        </element>
        <element name="WEST">
        </element>
        <element name="SOUTHWEST">
        </element>
        <element name="SOUTH">
        </element>
        <element name="SOUTHEAST">
        </element>
        <element name="EAST">
        </element>
        <element name="NORTHEAST">
        </element>
    </enum>
    
    <enum name="Dimension" since="2.0">
        <description>The supported dimensions of the GPS</description>
        <element name="NO_FIX" internal_name="Dimension_NO_FIX">
            <description>No GPS at all</description>
        </element>
        <element name="2D" internal_name="Dimension_2D">
            <description>Longitude and latitude</description>
        </element>
        <element name="3D" internal_name="Dimension_3D">
            <description>Longitude and latitude and altitude</description>
        </element>
    </enum>
    
    <enum name="PRNDL" since="2.0">
        <description>The selected gear.</description>
        <element name="PARK">
            <description>Parking</description>
        </element>
        <element name="REVERSE">
            <description>Reverse gear</description>
        </element>
        <element name="NEUTRAL">
            <description>No gear</description>
        </element>
        <element name="DRIVE">
        </element>
        <element name="SPORT">
            <description>Drive Sport mode</description>
        </element>
        <element name="LOWGEAR">
            <description>1st gear hold</description>
        </element>
        <element name="FIRST">
        </element>
        <element name="SECOND">
        </element>
        <element name="THIRD">
        </element>
        <element name="FOURTH">
        </element>
        <element name="FIFTH">
        </element>
        <element name="SIXTH">
        </element>
        <element name="SEVENTH">
        </element>
        <element name="EIGHTH">
        </element>
        <element name="UNKNOWN">
        </element>
        <element name="FAULT">
        </element>
    </enum>
    
    <enum name="ComponentVolumeStatus" since="2.0">
        <description>The volume status of a vehicle component.</description>
        <element name="UNKNOWN" internal_name="CVS_UNKNOWN">
        </element>
        <element name="NORMAL" internal_name="CVS_NORMAL">
        </element>
        <element name="LOW" internal_name="CVS_LOW">
        </element>
        <element name="FAULT" internal_name="CVS_FAULT">
        </element>
        <element name="ALERT"  internal_name="CVS_ALERT">
        </element>
        <element name="NOT_SUPPORTED" internal_name="CVS_NOT_SUPPORTED">
        </element>
    </enum>

    <enum name="TPMS" since="5.0">
        <element name="UNKNOWN">
            <description>If set the status of the tire is not known.</description>
        </element>
        <element name="SYSTEM_FAULT">
            <description>TPMS does not function.</description>
        </element>
        <element name="SENSOR_FAULT">
            <description>The sensor of the tire does not function.</description>
        </element>
        <element name="LOW">
            <description>TPMS is reporting a low tire pressure for the tire.</description>
        </element>
        <element name="SYSTEM_ACTIVE">
            <description>TPMS is active and the tire pressure is monitored.</description>
        </element>
        <element name="TRAIN">
            <description>TPMS is reporting that the tire must be trained.</description>
        </element>
        <element name="TRAINING_COMPLETE">
            <description>TPMS reports the training for the tire is completed.</description>
        </element>
        <element name="NOT_TRAINED">
            <description>TPMS reports the tire is not trained.</description>
        </element>
    </enum>

    <enum name="FuelType" since="5.0">
        <element name="GASOLINE" />
        <element name="DIESEL" />
        <element name="CNG">
            <description>
                For vehicles using compressed natural gas.
            </description>
        </element>
        <element name="LPG">
            <description>
                For vehicles using liquefied petroleum gas.
            </description>
        </element>
        <element name="HYDROGEN">
            <description>For FCEV (fuel cell electric vehicle).</description>
        </element>
        <element name="BATTERY">
            <description>For BEV (Battery Electric Vehicle), PHEV (Plug-in Hybrid Electric Vehicle), solar vehicles and other vehicles which run on a battery.</description>
        </element>
    </enum>

    <struct name="FuelRange" since="5.0">
        <param name="type" type="FuelType" mandatory="false"/>
        <param name="range" type="Float" minvalue="0" maxvalue="10000" mandatory="false">
            <description>
                The estimate range in KM the vehicle can travel based on fuel level and consumption.
            </description>
        </param>
    </struct>

    <enum name="ElectronicParkBrakeStatus" since="5.0">
      <element name="CLOSED">
        <description>
          Park brake actuators have been fully applied.
        </description>
        </element>
      <element name="TRANSITION">
        <description>
          Park brake actuators are transitioning to either Apply/Closed or Release/Open state.
        </description>
      </element>
      <element name="OPEN">
        <description>
          Park brake actuators are released.
        </description>
      </element>
      <element name="DRIVE_ACTIVE">
        <description>
          When driver pulls the Electronic Park Brake switch while driving "at speed".
        </description>
      </element>
     <element name="FAULT">
        <description>
          When system has a fault or is under maintenance.
        </description>
     </element>
    </enum>
    
    <struct name="SingleTireStatus" since="2.0">
        <param name="status" type="ComponentVolumeStatus" mandatory="true">
            <description>See ComponentVolumeStatus.</description>
        </param>
        <param name="tpms" type="TPMS" mandatory="false" since="5.0">
            <description>
                The status of TPMS according to the particular tire.
            </description>
        </param>
        <param name="pressure" type="Float" mandatory="false" minvalue="0" maxvalue="2000" since="5.0">
            <description>The pressure value of the particular tire in kilo pascal.</description>
        </param>
    </struct>
    
    <enum name="WarningLightStatus" since="2.0">
        <description>Reflects the status of a cluster instrument warning light.</description>
        <element name="OFF" internal_name="WLS_OFF">
        </element>
        <element name="ON" internal_name="WLS_ON">
        </element>
        <element name="FLASH" internal_name="WLS_FLASH">
        </element>
        <element name="NOT_USED" internal_name="WLS_NOT_USED">
        </element>
    </enum>
    
    <enum name="VehicleDataNotificationStatus" since="2.0">
        <description>Reflects the status of a vehicle data notification.</description>
        <element name="NOT_SUPPORTED" internal_name="VDNS_NOT_SUPPORTED">
        </element>
        <element name="NORMAL" internal_name="VDNS_NORMAL">
        </element>
        <element name="ACTIVE" internal_name="VDNS_ACTIVE">
        </element>
        <element name="NOT_USED" internal_name="VDNS_NOT_USED">
        </element>
    </enum>
    
    <enum name="IgnitionStableStatus" since="2.0">
        <description>Reflects the ignition switch stability.</description>
        <element name="IGNITION_SWITCH_NOT_STABLE">
        </element>
        <element name="IGNITION_SWITCH_STABLE">
        </element>
        <element name="MISSING_FROM_TRANSMITTER">
        </element>
    </enum>
    
    <enum name="IgnitionStatus" since="2.0">
        <description>Reflects the status of ignition.</description>
        <element name="UNKNOWN" internal_name="IS_UNKNOWN">
        </element>
        <element name="OFF" internal_name="IS_OFF">
        </element>
        <element name="ACCESSORY" internal_name="IS_ACCESSORY">
        </element>
        <element name="RUN" internal_name="IS_RUN">
        </element>
        <element name="START" internal_name="IS_START">
        </element>
        <element name="INVALID" internal_name="IS_INVALID">
        </element>
    </enum>
    
    <enum name="VehicleDataEventStatus" since="2.0">
        <description>Reflects the status of a vehicle data event; e.g. a seat belt event status.</description>
        <element name="NO_EVENT" internal_name="VDES_NO_EVENT">
        </element>
        <element name="NO" internal_name="VDES_NO">
        </element>
        <element name="YES" internal_name="VDES_YES">
        </element>
        <element name="NOT_SUPPORTED" internal_name="VDES_NOT_SUPPORTED">
        </element>
        <element name="FAULT" internal_name="VDES_FAULT">
        </element>
    </enum>
    
    <enum name="DeviceLevelStatus" since="2.0">
        <description>Reflects the reported battery status of the connected device, if reported.</description>
        <element name="ZERO_LEVEL_BARS">
        </element>
        <element name="ONE_LEVEL_BARS">
        </element>
        <element name="TWO_LEVEL_BARS">
        </element>
        <element name="THREE_LEVEL_BARS">
        </element>
        <element name="FOUR_LEVEL_BARS">
        </element>
        <element name="NOT_PROVIDED">
        </element>
    </enum>
    
    <enum name="PrimaryAudioSource" since="2.0">
        <description>Reflects the current primary audio source (if selected).</description>
        <element name="NO_SOURCE_SELECTED">
        </element>
        <element name="CD" since="5.0">
        </element>
        <element name="USB">
        </element>
        <element name="USB2">
        </element>
        <element name="BLUETOOTH_STEREO_BTST">
        </element>
        <element name="LINE_IN">
        </element>
        <element name="IPOD">
        </element>
        <element name="MOBILE_APP">
        </element>
        <element name="AM" since="5.0">
        </element>
        <element name="FM" since="5.0">
        </element>
        <element name="XM" since="5.0">
        </element>
        <element name="DAB" since="5.0">
        </element>
    </enum>
    
    <enum name="WiperStatus" since="2.0">
        <description>Reflects the status of the wipers.</description>
        <element name="OFF" />
        <element name="AUTO_OFF" />
        <element name="OFF_MOVING" />
        <element name="MAN_INT_OFF" />
        <element name="MAN_INT_ON" />
        <element name="MAN_LOW" />
        <element name="MAN_HIGH" />
        <element name="MAN_FLICK" />
        <element name="WASH" />
        <element name="AUTO_LOW" />
        <element name="AUTO_HIGH" />
        <element name="COURTESYWIPE" />
        <element name="AUTO_ADJUST" />
        <element name="STALLED" />
        <element name="NO_DATA_EXISTS" />
    </enum>
    
    <enum name="VehicleDataStatus" since="2.0">
        <description>Reflects the status of a binary vehicle data item.</description>
        <element name="NO_DATA_EXISTS" internal_name="VDS_NO_DATA_EXISTS">
        </element>
        <element name="OFF" internal_name="VDS_OFF">
        </element>
        <element name="ON" internal_name="VDS_ON">
        </element>
    </enum>
    
    <enum name="MaintenanceModeStatus" since="2.0">
        <description>Reflects the status of a vehicle maintenance mode.</description>
        <element name="NORMAL" internal_name="MMS_NORMAL">
        </element>
        <element name="NEAR" internal_name="MMS_NEAR">
        </element>
        <element name="ACTIVE" internal_name="MMS_ACTIVE">
        </element>
        <element name="FEATURE_NOT_PRESENT" internal_name="MMS_FEATURE_NOT_PRESENT">
        </element>
    </enum>
    
    <enum name="VehicleDataActiveStatus" since="2.0">
        <description>Reflects the status of given vehicle component.</description>
        <element name="INACTIVE_NOT_CONFIRMED" internal_name="VDAS_INACTIVE_NOT_CONFIRMED">
        </element>
        <element name="INACTIVE_CONFIRMED" internal_name="VDAS_INACTIVE_CONFIRMED">
        </element>
        <element name="ACTIVE_NOT_CONFIRMED" internal_name="VDAS_ACTIVE_NOT_CONFIRMED">
        </element>
        <element name="ACTIVE_CONFIRMED" internal_name="VDAS_ACTIVE_CONFIRMED">
        </element>
        <element name="FAULT" internal_name="VDAS_FAULT">
        </element>
    </enum>
    
    <enum name="AmbientLightStatus" since="2.0">
        <description>Reflects the status of the ambient light sensor.</description>
        <element name="NIGHT" />
        <element name="TWILIGHT_1" />
        <element name="TWILIGHT_2" />
        <element name="TWILIGHT_3" />
        <element name="TWILIGHT_4" />
        <element name="DAY" />
        <element name="UNKNOWN" internal_name="ALS_UNKNOWN" />
        <element name="INVALID" />
    </enum>
    
    <enum name="ModuleType" since="4.5">
        <element name="CLIMATE"/>
        <element name="RADIO"/>
        <element name="SEAT" since="5.0"/>
        <element name="AUDIO" since="5.0"/>
        <element name="LIGHT" since="5.0"/>
        <element name="HMI_SETTINGS" since="5.0"/>
    </enum>
    
    <enum name="DefrostZone" since="4.5">
        <element name="FRONT"/>
        <element name="REAR"/>
        <element name="ALL"/>
        <element name="NONE"/>
    </enum>
    
    <enum name="VentilationMode" since="4.5">
        <element name="UPPER"/>
        <element name="LOWER"/>
        <element name="BOTH"/>
        <element name="NONE"/>
    </enum>
    
    <enum name="RadioBand" since="4.5">
        <element name="AM"/>
        <element name="FM"/>
        <element name="XM"/>
    </enum>
    
    <enum name="RadioState" since="4.5">
        <element name="ACQUIRING"/>
        <element name="ACQUIRED"/>
        <element name="MULTICAST"/>
        <element name="NOT_FOUND"/>
    </enum>
    
    <enum name="TemperatureUnit" since="4.5">
        <element name="FAHRENHEIT"/>
        <element name="CELSIUS"/>
    </enum>

    <struct name="BeltStatus" since="2.0">
        <param name="driverBeltDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsDrvBelt_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerBeltDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsPasBelt_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerBuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw1PasBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="driverBuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw1DrvBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="leftRow2BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw2lBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerChildDetected" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw1PasChld_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="rightRow2BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw2rBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="middleRow2BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw2mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="middleRow3BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw3mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="leftRow3BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw3lBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="rightRow3BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw3rBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="leftRearInflatableBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw2lRib_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="rightRearInflatableBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw2rRib_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="middleRow1BeltDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw1mBelt_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="middleRow1BuckleBelted" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsRw1mBckl_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
    </struct>
    
    <struct name="BodyInformation" since="2.0">
        <param name="parkBrakeActive" type="Boolean" mandatory="true">
            <description>References signal "PrkBrkActv_B_Actl".</description>
        </param>
        <param name="ignitionStableStatus" type="IgnitionStableStatus" mandatory="true">
            <description>References signal "Ignition_Switch_Stable". See IgnitionStableStatus.</description>
        </param>
        <param name="ignitionStatus" type="IgnitionStatus" mandatory="true">
            <description>References signal "Ignition_status". See IgnitionStatus.</description>
        </param>
        <param name="driverDoorAjar" type="Boolean" mandatory="false">
            <description>References signal "DrStatDrv_B_Actl".</description>
        </param>
        <param name="passengerDoorAjar" type="Boolean" mandatory="false">
            <description>References signal "DrStatPsngr_B_Actl".</description>
        </param>
        <param name="rearLeftDoorAjar" type="Boolean" mandatory="false">
            <description>References signal "DrStatRl_B_Actl".</description>
        </param>
        <param name="rearRightDoorAjar" type="Boolean" mandatory="false">
            <description>References signal "DrStatRr_B_Actl".</description>
        </param>
    </struct>
    
    <struct name="DeviceStatus" since="2.0">
        <param name="voiceRecOn" type="Boolean" mandatory="true">
            <description>References signal "CPM_VoiceRec_STAT".</description>
        </param>
        <param name="btIconOn" type="Boolean" mandatory="true">
            <description>References signal "BT_ICON".</description>
        </param>
        <param name="callActive" type="Boolean" mandatory="true">
            <description>References signal "CPM_Call_Active_STAT".</description>
        </param>
        <param name="phoneRoaming" type="Boolean" mandatory="true">
            <description>References signal "CPM_Phone_Roaming_STAT".</description>
        </param>
        <param name="textMsgAvailable" type="Boolean" mandatory="true">
            <description>References signal "CPM_TextMsg_AVAL".</description>
        </param>
        <param name="battLevelStatus" type="DeviceLevelStatus" mandatory="true">
            <description>Device battery level status.  References signal "CPM_Batt_Level_STAT". See DeviceLevelStatus.</description>
        </param>
        <param name="stereoAudioOutputMuted" type="Boolean" mandatory="true">
            <description>References signal "CPM_Stereo_Audio_Output".</description>
        </param>
        <param name="monoAudioOutputMuted" type="Boolean" mandatory="true">
            <description>References signal "CPM_Mono_Audio_Output".</description>
        </param>
        <param name="signalLevelStatus" type="DeviceLevelStatus" mandatory="true">
            <description>Device signal level status.  References signal "CPM_Signal_Strength_STAT". See DeviceLevelStatus.</description>
        </param>
        <param name="primaryAudioSource" type="PrimaryAudioSource" mandatory="true">
            <description>References signal "CPM_Stereo_PAS_Source". See PrimaryAudioSource.</description>
        </param>
        <param name="eCallEventActive" type="Boolean" mandatory="true">
            <description>References signal "eCall_Event".</description>
        </param>
    </struct>
    
    <struct name="HeadLampStatus" since="2.0">
        <param name="lowBeamsOn" type="Boolean" mandatory="true">
            <description>Status of the low beam lamps.  References signal "HeadLampLoActv_B_Stat".</description>
        </param>
        <param name="highBeamsOn" type="Boolean" mandatory="true">
            <description>Status of the high beam lamps.  References signal "HeadLghtHiOn_B_Stat".</description>
        </param>
        <param name="ambientLightSensorStatus" type="AmbientLightStatus" mandatory="false">
            <description>Status of the ambient light sensor.</description>
        </param>
    </struct>
    
    <struct name="AppInfo" since="4.2">
        <description>Contains detailed information about the registered application.</description>
        
        <param name="appDisplayName" type="String" maxlength="100" mandatory="true">
            <description>The name displayed for the mobile application on the mobile device (can differ from the app name set in the initial RAI request).</description>
        </param>
        
        <param name="appBundleID" type="String" maxlength="256" mandatory="true">
            <description>The AppBundleID of an iOS application or package name of the Android application. This supports App Launch strategies for each platform.</description>
        </param>
        
        <param name="appVersion" type="String" maxlength="256" mandatory="true">
            <description>Represents the build version number of this particular mobile app.</description>
        </param>
        
        <param name="appIcon" type="String" maxlength="500" mandatory="false">
            <description>A file reference to the icon utilized by this app (simplifies the process of setting an app icon during app registration).</description>
        </param>
    </struct>
    
    <enum name="FileType" since="2.0">
        <description>Enumeration listing possible file types.</description>
        <element name="GRAPHIC_BMP" />
        <element name="GRAPHIC_JPEG" />
        <element name="GRAPHIC_PNG" />
        <element name="AUDIO_WAVE" />
        <element name="AUDIO_MP3" />
        <element name="AUDIO_AAC" />
        <element name="BINARY" />
        <element name="JSON" />
    </enum>
    
    <enum name="FuelCutoffStatus" since="2.0">
        <description>Reflects the status of the RCM fuel cutoff.</description>
        <element name="TERMINATE_FUEL" internal_name="FCS_TERMINATE_FUEL">
        </element>
        <element name="NORMAL_OPERATION" internal_name="FCS_NORMAL_OPERATION">
        </element>
        <element name="FAULT" internal_name="FCS_FAULT">
        </element>
    </enum>
    
    <enum name="EmergencyEventType" since="2.0">
        <description>Reflects the emergency event status of the vehicle.</description>
        <element name="NO_EVENT" internal_name="EET_NO_EVENT">
        </element>
        <element name="FRONTAL" internal_name="EET_FRONTAL">
        </element>
        <element name="SIDE" internal_name="EET_SIDE">
        </element>
        <element name="REAR" internal_name="EET_REAR">
        </element>
        <element name="ROLLOVER" internal_name="EET_ROLLOVER">
        </element>
        <element name="NOT_SUPPORTED" internal_name="EET_NOT_SUPPORTED">
        </element>
        <element name="FAULT" internal_name="EET_FAULT">
        </element>
    </enum>
    
    <enum name="ECallConfirmationStatus" since="2.0">
        <description>Reflects the status of the eCall Notification.</description>
        <element name="NORMAL" internal_name="ECCS_NORMAL">
        </element>
        <element name="CALL_IN_PROGRESS" internal_name="ECCS_CALL_IN_PROGRESS">
        </element>
        <element name="CALL_CANCELLED" internal_name="ECCS_CALL_CANCELLED">
        </element>
        <element name="CALL_COMPLETED">
        </element>
        <element name="CALL_UNSUCCESSFUL" internal_name="ECCS_CALL_UNSUCCESSFUL">
        </element>
        <element name="ECALL_CONFIGURED_OFF" internal_name="ECCS_ECALL_CONFIGURED_OFF">
        </element>
        <element name="CALL_COMPLETE_DTMF_TIMEOUT" internal_name="ECCS_CALL_COMPLETE_DTMF_TIMEOUT">
        </element>
    </enum>
    
    <enum name="PowerModeQualificationStatus" since="2.0">
        <description>Reflects the status of the current power mode qualification.</description>
        <element name="POWER_MODE_UNDEFINED">
        </element>
        <element name="POWER_MODE_EVALUATION_IN_PROGRESS">
        </element>
        <element name="NOT_DEFINED">
        </element>
        <element name="POWER_MODE_OK">
        </element>
    </enum>
    
    <enum name="PowerModeStatus" since="2.0">
        <description>Reflects the status of the current power mode.</description>
        <element name="KEY_OUT">
        </element>
        <element name="KEY_RECENTLY_OUT">
        </element>
        <element name="KEY_APPROVED_0">
        </element>
        <element name="POST_ACCESORY_0">
        </element>
        <element name="ACCESORY_1">
        </element>
        <element name="POST_IGNITION_1">
        </element>
        <element name="IGNITION_ON_2">
        </element>
        <element name="RUNNING_2">
        </element>
        <element name="CRANK_3">
        </element>
    </enum>
    
    <enum name="CarModeStatus" since="2.0">
        <description>Reflects the status of the current car mode.</description>
        <element name="NORMAL" internal_name="CMS_NORMAL">
        </element>
        <element name="FACTORY" internal_name="CMS_FACTORY">
        </element>
        <element name="TRANSPORT" internal_name="CMS_TRANSPORT">
        </element>
        <element name="CRASH" internal_name="CMS_CRASH">
        </element>
    </enum>
    
    <struct name="ECallInfo" since="2.0">
        <param name="eCallNotificationStatus" type="VehicleDataNotificationStatus" mandatory="true">
            <description>References signal "eCallNotification_4A". See VehicleDataNotificationStatus.</description>
        </param>
        <param name="auxECallNotificationStatus" type="VehicleDataNotificationStatus" mandatory="true">
            <description>References signal "eCallNotification". See VehicleDataNotificationStatus.</description>
        </param>
        <param name="eCallConfirmationStatus" type="ECallConfirmationStatus" mandatory="true">
            <description>References signal "eCallConfirmation". See ECallConfirmationStatus.</description>
        </param>
    </struct>
    
    <struct name="AirbagStatus" since="2.0">
        <param name="driverAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsDrvBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="driverSideAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsDrvSideBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="driverCurtainAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsDrvCrtnBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsPasBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerCurtainAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsPasCrtnBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="driverKneeAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsKneeDrvBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerSideAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsPasSideBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        <param name="passengerKneeAirbagDeployed" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsKneePasBag_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
    </struct>
    
    <struct name="EmergencyEvent" since="2.0">
        <param name="emergencyEventType" type="EmergencyEventType" mandatory="true">
            <description>References signal "VedsEvntType_D_Ltchd". See EmergencyEventType.</description>
        </param>
        <param name="fuelCutoffStatus" type="FuelCutoffStatus" mandatory="true">
            <description>References signal "RCM_FuelCutoff". See FuelCutoffStatus.</description>
        </param>
        <param name="rolloverEvent" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsEvntRoll_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
        
        <param name="maximumChangeVelocity" type="Integer" minvalue="0" maxvalue="255" mandatory="true">
            <description>
                References signal "VedsMaxDeltaV_D_Ltchd". Change in velocity in KPH.  Additional reserved values:
                0x00 No event
                0xFE Not supported
                0xFF Fault
            </description>
        </param>
        <param name="multipleEvents" type="VehicleDataEventStatus" mandatory="true">
            <description>References signal "VedsMultiEvnt_D_Ltchd". See VehicleDataEventStatus.</description>
        </param>
    </struct>
    
    <struct name="ClusterModeStatus" since="2.0">
        <param name="powerModeActive" type="Boolean" mandatory="true">
            <description>References signal "PowerMode_UB".</description>
        </param>
        <param name="powerModeQualificationStatus" type="PowerModeQualificationStatus" mandatory="true">
            <description>References signal "PowerModeQF". See PowerModeQualificationStatus.</description>
        </param>
        <param name="carModeStatus" type="CarModeStatus" mandatory="true">
            <description>References signal "CarMode". See CarMode.</description>
        </param>
        <param name="powerModeStatus" type="PowerModeStatus" mandatory="true">
            <description>References signal "PowerMode". See PowerMode.</description>
        </param>
    </struct>
    
    <struct name="MyKey" since="2.0">
        <param name="e911Override" type="VehicleDataStatus" mandatory="true">
            <description>Indicates whether e911 override is on.  References signal "MyKey_e911Override_St". See VehicleDataStatus.</description>
        </param>
    </struct>
    
    <enum name="VehicleDataResultCode" since="2.0">
        <description>Enumeration that describes possible result codes of a vehicle data entry request.</description>
        <element name="SUCCESS" internal_name="VDRC_SUCCESS">
            <description>Individual vehicle data item / DTC / DID request or subscription successful</description>
        </element>
        <element name="TRUNCATED_DATA" internal_name="VDRC_TRUNCATED_DATA">
            <description>DTC / DID request successful, however, not all active DTCs or full contents of DID location available</description>
        </element>
        <element name="DISALLOWED" internal_name="VDRC_DISALLOWED">
            <description>This vehicle data item is not allowed for this app by the OEM/Manufactorer of the connected module.</description>
        </element>
        <element name="USER_DISALLOWED" internal_name="VDRC_USER_DISALLOWED">
            <description>The user has not granted access to this type of vehicle data item at this time.</description>
        </element>
        <element name="INVALID_ID" internal_name="VDRC_INVALID_ID">
            <description>The ECU ID referenced is not a valid ID on the bus / system.</description>
        </element>
        <element name="VEHICLE_DATA_NOT_AVAILABLE" internal_name="VDRC_DATA_NOT_AVAILABLE">
            <description>The requested vehicle data item / DTC / DID is not currently available or responding on the bus / system.</description>
        </element>
        <element name="DATA_ALREADY_SUBSCRIBED" internal_name="VDRC_DATA_ALREADY_SUBSCRIBED">
            <description>The vehicle data item is already subscribed.</description>
        </element>
        <element name="DATA_NOT_SUBSCRIBED" internal_name="VDRC_DATA_NOT_SUBSCRIBED">
            <description>The vehicle data item cannot be unsubscribed because it is not currently subscribed.</description>
        </element>
        <element name="IGNORED" internal_name="VDRC_IGNORED">
            <description>The request for this item is ignored because it is already in progress.</description>
        </element>
    </enum>
    
    <struct name="TireStatus" since="2.0">
        <description>The status and pressure of the tires.</description>
        
        <param name="pressureTelltale" type="WarningLightStatus" mandatory="true">
            <description>Status of the Tire Pressure Telltale. See WarningLightStatus.</description>
        </param>
        <param name="leftFront" type="SingleTireStatus" mandatory="true">
            <description>The status of the left front tire.</description>
        </param>
        <param name="rightFront" type="SingleTireStatus" mandatory="true">
            <description>The status of the right front tire.</description>
        </param>
        <param name="leftRear" type="SingleTireStatus" mandatory="true">
            <description>The status of the left rear tire.</description>
        </param>
        <param name="rightRear" type="SingleTireStatus" mandatory="true">
            <description>The status of the right rear tire.</description>
        </param>
        <param name="innerLeftRear" type="SingleTireStatus" mandatory="true">
            <description>The status of the inner left rear.</description>
        </param>
        <param name="innerRightRear" type="SingleTireStatus" mandatory="true">
            <description>The status of the inner right rear.</description>
        </param>
    </struct>
    
    <enum name="TurnSignal" since="5.0">
        <description>Enumeration that describes the status of the turn light indicator.</description>
        <element name="OFF">
            <description>Turn signal is OFF</description>
        </element>
        <element name="LEFT">
            <description>Left turn signal is on</description>
        </element>
        <element name="RIGHT">
            <description>Right turn signal is on</description>
        </element>
        <element name="BOTH">
            <description>Both signals (left and right) are on.</description>
        </element>
    </enum>

    <enum name="MenuLayout" since="6.0">
        <description>How the main menu or submenu is laid out on screen</description>
        <element name="LIST" />
        <element name="TILES" />
    </enum>

    <struct name="GPSData" since="2.0">
        <description>Struct with the GPS data.</description>
        <param name="longitudeDegrees" type="Float" minvalue="-180" maxvalue="180" mandatory="true">
        </param>
        <param name="latitudeDegrees" type="Float" minvalue="-90" maxvalue="90" mandatory="true">
        </param>
        <param name="utcYear" type="Integer" minvalue="2010" maxvalue="2100" mandatory="false" since="5.0">
            <description>The current UTC year.</description>
            <history>
                <param name="utcYear" type="Integer" minvalue="2010" maxvalue="2100" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="utcMonth" type="Integer" minvalue="1" maxvalue="12" mandatory="false" since="5.0">
            <description>The current UTC month.</description>
            <history>
                <param name="utcMonth" type="Integer" minvalue="1" maxvalue="12" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="utcDay" type="Integer" minvalue="1" maxvalue="31" mandatory="false" since="5.0">
            <description>The current UTC day.</description>
            <history>
                <param name="utcDay" type="Integer" minvalue="1" maxvalue="31" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="utcHours" type="Integer" minvalue="0" maxvalue="23" mandatory="false" since="5.0">
            <description>The current UTC hour.</description>
            <history>
                <param name="utcHours" type="Integer" minvalue="0" maxvalue="23" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="utcMinutes" type="Integer" minvalue="0" maxvalue="59" mandatory="false" since="5.0">
            <description>The current UTC minute.</description>
            <history>
                <param name="utcMinutes" type="Integer" minvalue="0" maxvalue="59" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="utcSeconds" type="Integer" minvalue="0" maxvalue="59" mandatory="false" since="5.0">
            <description>The current UTC second.</description>
            <history>
                <param name="utcSeconds" type="Integer" minvalue="0" maxvalue="59" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="compassDirection" type="CompassDirection" mandatory="false" since="5.0">
            <description>See CompassDirection.</description>
            <history>
                <param name="compassDirection" type="CompassDirection" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="pdop" type="Float" minvalue="0" maxvalue="1000" defvalue="0" mandatory="false" since="5.0">
            <description>PDOP.  If undefined or unavailable, then value shall be set to 0.</description>
            <history>
                <param name="pdop" type="Float" minvalue="0" maxvalue="10" defvalue="0" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="hdop" type="Float" minvalue="0" maxvalue="1000" defvalue="0" mandatory="false" since="5.0">
            <description>HDOP.  If value is unknown, value shall be set to 0.</description>
            <history>
                <param name="hdop" type="Float" minvalue="0" maxvalue="10" defvalue="0" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="vdop" type="Float" minvalue="0" maxvalue="1000" defvalue="0" mandatory="false" since="5.0">
            <description>VDOP.  If value is unknown, value shall be set to 0.</description>
            <history>
                <param name="vdop" type="Float" minvalue="0" maxvalue="10" defvalue="0" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="actual" type="Boolean" mandatory="false" since="5.0">
            <description>
                True, if actual.
                False, if inferred.
            </description>
            <history>
                <param name="actual" type="Boolean" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="satellites" type="Integer" minvalue="0" maxvalue="31" mandatory="false" since="5.0">
            <description>Number of satellites in view</description>
            <history>
                <param name="satellites" type="Integer" minvalue="0" maxvalue="31" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="dimension" type="Dimension" mandatory="false" since="5.0">
            <description>See Dimension</description>
            <history>
                <param name="dimension" type="Dimension" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="altitude" type="Float" minvalue="-10000" maxvalue="10000" mandatory="false" since="5.0">
            <description>Altitude in meters</description>
            <history>
                <param name="altitude" type="Float" minvalue="-10000" maxvalue="10000" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="heading" type="Float" minvalue="0" maxvalue="359.99" mandatory="false" since="5.0">
            <description>The heading. North is 0. Resolution is 0.01</description>
            <history>
                <param name="heading" type="Float" minvalue="0" maxvalue="359.99" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="speed" type="Float" minvalue="0" maxvalue="500" mandatory="false" since="5.0">
            <description>The speed in KPH</description>
            <history>
                <param name="speed" type="Float" minvalue="0" maxvalue="500" mandatory="true" since="2.0" until="5.0"/>
            </history>
        </param>
        <param name="shifted" type="Boolean" mandatory="false" since="6.0">
            <description>
                True, if GPS lat/long, time, and altitude have been purposefully shifted (requires a proprietary algorithm to unshift).
                False, if the GPS data is raw and un-shifted.
                If not provided, then value is assumed False.
            </description>
        </param>
    </struct>
    
    <struct name="VehicleDataResult" since="2.0">
        <description>Individual published data request result</description>
        <param name="dataType" type="VehicleDataType" mandatory="true">
            <description>Defined published data element type.</description>
        </param>
        <param name="resultCode" type="VehicleDataResultCode" mandatory="true">
            <description>Published data result code.</description>
        </param>
        <param name="oemCustomDataType" type="String" mandatory="false" since="6.0">
            <description>Type of requested oem specific parameter </description>
        </param>
    </struct>
    
    <struct name="DIDResult" since="2.0">
        <description>Individual requested DID result and data</description>
        <param name="resultCode" type="VehicleDataResultCode" mandatory="true">
            <description>Individual DID result code.</description>
        </param>
        <param name="didLocation" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Location of raw data from vehicle data DID</description>
        </param>
        <param name="data" type="String" maxlength="5000" mandatory="false">
            <description>Raw DID-based data returned for requested element.</description>
        </param>
    </struct>
    
    <struct name="StartTime" since="1.0">
        <param name="hours" type="Integer" minvalue="0" maxvalue="59" mandatory="true">
            <description>
                The hour of the media clock.
                Some radios only support a max of 19 hours. If out of range, it will be rejected.
            </description>
        </param>
        <param name="minutes" type="Integer" minvalue="0" maxvalue="59"  mandatory="true"/>
        <param name="seconds" type="Integer" minvalue="0" maxvalue="59"  mandatory="true"/>
    </struct>
    
    <struct name="TextField" since="1.0">
        <param name="name" type="TextFieldName" mandatory="true">
            <description>The name that identifies the field. See TextFieldName.</description>
        </param>
        <param name="characterSet" type="CharacterSet" mandatory="true">
            <description>The character set that is supported in this field. See CharacterSet.</description>
        </param>
        <param name="width" type="Integer" minvalue="1" maxvalue="500" mandatory="true">
            <description>The number of characters in one row of this field.</description>
        </param>
        <param name="rows" type="Integer" minvalue="1" maxvalue="8" mandatory="true">
            <description>The number of rows of this field.</description>
        </param>
    </struct>
    
    <struct name="ImageResolution" since="3.0">
        <param name="resolutionWidth" type="Integer" minvalue="1" maxvalue="10000" mandatory="true">
            <description>The image resolution width.</description>
        </param>
        <param name="resolutionHeight" type="Integer" minvalue="1" maxvalue="10000" mandatory="true">
            <description>The image resolution height.</description>
        </param>
    </struct>
    
    <struct name="ImageField" since="3.0">
        <param name="name" type="ImageFieldName" mandatory="true">
            <description>The name that identifies the field. See ImageFieldName.</description>
        </param>
        <param name="imageTypeSupported" type="FileType" minsize="1" maxsize="100" array="true" mandatory="true">
            <description>The image types that are supported in this field. See FileType.</description>
        </param>
        <param name="imageResolution" type="ImageResolution" mandatory="false">
            <description>The image resolution of this field.</description>
        </param>
    </struct>
    
    <struct name="TouchCoord" since="3.0">
        <param name="x" type="Integer" mandatory="true" minvalue="0" maxvalue="10000">
            <description>The x coordinate of the touch.</description>
        </param>
        <param name="y" type="Integer" mandatory="true" minvalue="0" maxvalue="10000">
            <description>The y coordinate of the touch.</description>
        </param>
    </struct>
    
    <enum name="TouchType" since="3.0">
        <element name="BEGIN"/>
        <element name="MOVE"/>
        <element name="END"/>
        <element name="CANCEL" since="4.5"/>
    </enum>
    
    <struct name="TouchEvent" since="3.0">
        <param name="id" type="Integer" mandatory="true" minvalue="0" maxvalue="9">
            <description>
                A touch's unique identifier.  The application can track the current touch events by id.
                If a touch event has type begin, the id should be added to the set of touches.
                If a touch event has type end, the id should be removed from the set of touches.
            </description>
        </param>
        <param name="ts" type="Integer" mandatory="true" array="true" minvalue="0" maxvalue="2000000000" minsize="1" maxsize="1000">
            <description>
                The time that the touch was recorded.  This number can the time since the beginning of the session or something else as long as the units are in milliseconds.
                The timestamp is used to determined the rate of change of position of a touch.
                The application also uses the time to verify whether two touches, with different ids, are part of a single action by the user.
                If there is only a single timestamp in this array, it is the same for every coordinate in the coordinates array.
            </description>
        </param>
        <param name="c" type="TouchCoord" mandatory="true" array="true" minsize="1" maxsize="1000">
        </param>
    </struct>
    
    <struct name="TouchEventCapabilities" since="3.0">
        <param name="pressAvailable" type="Boolean" mandatory="true">
        </param>
        <param name="multiTouchAvailable" type="Boolean" mandatory="true">
        </param>
        <param name="doublePressAvailable" type="Boolean" mandatory="true">
        </param>
    </struct>
    
    <struct name="ScreenParams" since="3.0">
        <param name="resolution" type="ImageResolution" mandatory="true">
            <description>The resolution of the prescribed screen area.</description>
        </param>
        <param name="touchEventAvailable" type="TouchEventCapabilities" mandatory="false">
            <description>Types of screen touch events available in screen area.</description>
        </param>
    </struct>
    
    <enum name="PermissionStatus" since="2.0">
        <description>Enumeration that describes possible permission states of a policy table entry.</description>
        <element name="ALLOWED" internal_name="PS_ALLOWED"/>
        <element name="DISALLOWED" internal_name="PS_DISALLOWED"/>
        <element name="USER_DISALLOWED" internal_name="PS_USER_DISALLOWED"/>
        <element name="USER_CONSENT_PENDING" internal_name="PS_USER_CONSENT_PENDING"/>
    </enum>
    
    <struct name="HMIPermissions" since="2.0">
        <param name="allowed" type="HMILevel" minsize="0" maxsize="100" array="true" mandatory="true">
            <description>A set of all HMI levels that are permitted for this given RPC.</description>
        </param>
        <param name="userDisallowed" type="HMILevel" minsize="0" maxsize="100" array="true" mandatory="true">
            <description>A set of all HMI levels that are prohibited for this given RPC.</description>
        </param>
    </struct>
    
    <struct name="ParameterPermissions" since="2.0">
        <param name="allowed" type="String" minsize="0" maxsize="100" maxlength = "100" array="true" mandatory="true">
            <description>A set of all parameters that are permitted for this given RPC.</description>
        </param>
        <param name="userDisallowed" type="String" minsize="0" maxsize="100" maxlength = "100" array="true" mandatory="true">
            <description>A set of all parameters that are prohibited for this given RPC.</description>
        </param>
    </struct>
    
    <struct name="PermissionItem" since="2.0">
        <param name="rpcName" type="String" maxlength="100" mandatory="true">
            <description>Name of the individual RPC in the policy table.</description>
        </param>
        <param name="hmiPermissions" type="HMIPermissions"  mandatory="true"/>
        <param name="parameterPermissions" type="ParameterPermissions"  mandatory="true"/>
        <param name="requireEncryption" type="Boolean" mandatory="false" since="6.0"/>
    </struct>
    
    <struct name="DisplayCapabilities" deprecated="true" since="6.0">
        <history>
            <struct name="DisplayCapabilities" since="1.0" until="6.0"/>
        </history>
        <description>Contains information about the display capabilities. This struct is deprecated; please see the new SystemCapability DISPLAYS and corresponding struct DisplayCapability </description>
        <param name="displayType" type="DisplayType" mandatory="true" deprecated="true" since="5.0">
            <description>The type of the display. See DisplayType</description>
            <history>
                <param name="displayType" type="DisplayType" mandatory="true" since="1.0" until="5.0"/>
            </history>
        </param>
        <param name="displayName" type="String" mandatory="false" since="5.0">
            <description>The name of the display the app is connected to.</description>
        </param>
        <param name="textFields" type="TextField" minsize="1" maxsize="100" array="true" mandatory="true">
            <description>A set of all fields that support text data. See TextField</description>
        </param>
        <param name="imageFields" type="ImageField" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>A set of all fields that support images. See ImageField</description>
        </param>
        <param name="mediaClockFormats" type="MediaClockFormat" minsize="0" maxsize="100" array="true" mandatory="true">
            <description>A set of all supported formats of the media clock. See MediaClockFormat</description>
        </param>
        <param name="graphicSupported" type="Boolean" mandatory="true" since="2.0">
            <description>The display's persistent screen supports referencing a static or dynamic image.</description>
        </param>
        <param name="templatesAvailable" type="String" minsize="0" maxsize="100" maxlength="100" array="true" mandatory="false" since="3.0">
            <description>A set of all predefined persistent display templates available on headunit.  To be referenced in SetDisplayLayout.</description>
        </param>
        <param name="screenParams" type="ScreenParams" mandatory="false" since="3.0">
            <description>A set of all parameters related to a prescribed screen area (e.g. for video / touch input).</description>
        </param>
        <param name="numCustomPresetsAvailable" type="Integer" minvalue="1" maxvalue="100" mandatory="false" since="3.0">
            <description>The number of on-screen custom presets available (if any); otherwise omitted.</description>
        </param>
        <!-- TODO:  Add pixel density? -->
    </struct>

    <struct name="Grid" since="6.0">
        <description>Describes a location (origin coordinates and span) of a vehicle component.</description>
        <param name="col" type="Integer" mandatory="true" minvalue="-1" maxvalue="100">
        </param>
        <param name="row" type="Integer"  mandatory="true" minvalue="-1" maxvalue="100">
        </param>
        <param name="level" type="Integer" mandatory="false"  defvalue="0" minvalue="-1" maxvalue="100" >
        </param>
        <param name="colspan" type="Integer" mandatory="false" defvalue="1" minvalue="1" maxvalue="100">
        </param>
        <param name="rowspan" type="Integer" mandatory="false" defvalue="1" minvalue="1" maxvalue="100">
        </param>
        <param name="levelspan" type="Integer" mandatory="false" defvalue="1" minvalue="1" maxvalue="100">
        </param>
    </struct>

    <struct name="ModuleInfo" since="6.0">
        <description>Information about a RC module</description>
        <param name="moduleId" type="String" maxlength="100" mandatory="true">
            <description> uuid of a module. "moduleId + moduleType" uniquely identify a module.</description>
        </param>
        <param name="location" type="Grid" mandatory="false">
           <description>Location of a module.</description>
        </param>
        <param name="serviceArea" type="Grid" mandatory="false">
           <description>Service area of a module. </description>
        </param>
        <param name="allowMultipleAccess" type="Boolean" mandatory="false" defvalue="true">
            <description>allow multiple users/apps to access the module or not </description>
        </param>
    </struct>

    <struct name="ButtonCapabilities" since="1.0">
        <description>Contains information about a button's capabilities.</description>
        <param name="name" type="ButtonName" mandatory="true">
            <description>The name of the button. See ButtonName.</description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="shortPressAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports a short press.
                Whenever the button is pressed short, onButtonPressed( SHORT) will be invoked.
            </description>
        </param>
        <param name="longPressAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports a LONG press.
                Whenever the button is pressed long, onButtonPressed( LONG) will be invoked.
            </description>
        </param>
        <param name="upDownAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports "button down" and "button up".
                Whenever the button is pressed, onButtonEvent( DOWN) will be invoked.
                Whenever the button is released, onButtonEvent( UP) will be invoked.
            </description>
        </param>
    </struct>         

    <struct name="SoftButtonCapabilities" since="2.0">
        <description>Contains information about a SoftButton's capabilities.</description>
        <param name="shortPressAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports a short press.
                Whenever the button is pressed short, onButtonPressed( SHORT) will be invoked.
            </description>
        </param>
        <param name="longPressAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports a LONG press.
                Whenever the button is pressed long, onButtonPressed( LONG) will be invoked.
            </description>
        </param>
        <param name="upDownAvailable" type="Boolean" mandatory="true">
            <description>
                The button supports "button down" and "button up".
                Whenever the button is pressed, onButtonEvent( DOWN) will be invoked.
                Whenever the button is released, onButtonEvent( UP) will be invoked.
            </description>
        </param>
        <param name="imageSupported" type="Boolean" mandatory="true">
            <description>The button supports referencing a static or dynamic image.</description>
        </param>
        <param name="textSupported" type="Boolean" mandatory="false"  since="6.0">
            <description>
                The button supports the use of text.
                If not included, the default value should be considered true that the button will support text.
           </description>
        </param>
    </struct>         

    <struct name="PresetBankCapabilities" since="2.0">
        <description>Contains information about on-screen preset capabilities.</description>
        <param name="onScreenPresetsAvailable" type="Boolean" mandatory="true">
            <description>Onscreen custom presets are available.</description>
        </param>
    </struct>         

    <struct name="WindowCapability" since="6.0">
        <param name="windowID" type="Integer" mandatory="false">
            <description>
                The specified ID of the window. This ID is either one used when sending the CreateWindow request, 
                or one of the predefined window ID values from the enum PredefinedWindows. If ommited, value is 
                assumed to be the main window on the main display.
            </description>
        </param>
        <param name="textFields" type="TextField" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>A set of all fields that support text data. See TextField</description>
        </param>
        <param name="imageFields" type="ImageField" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>A set of all fields that support images. See ImageField</description>
        </param>
        <param name="imageTypeSupported" type="ImageType" array="true" minsize="0" maxsize="1000" mandatory="false">
            <description>Provides information about image types supported by the system.</description>
        </param>
        <param name="templatesAvailable" type="String" minsize="0" maxsize="100" maxlength="100" array="true" mandatory="false">
            <description>A set of all window templates available on the head unit.</description>
        </param>
        <param name="numCustomPresetsAvailable" type="Integer" minvalue="1" maxvalue="100" mandatory="false">
            <description>The number of on-window custom presets available (if any); otherwise omitted.</description>
        </param>
        <param name="buttonCapabilities" type="ButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>The number of buttons and the capabilities of each on-window button.</description>
        </param>
        <param name="softButtonCapabilities" type="SoftButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>The number of soft buttons available on-window and the capabilities for each button.</description>
        </param>
        <param name="menuLayoutsAvailable" type="MenuLayout" array="true" minsize="1" maxsize="1000" mandatory="false" since="6.0">
            <description>An array of available menu layouts. If this parameter is not provided, only the `LIST` layout is assumed to be available</description>
        </param>
    </struct>

    <struct name="WindowTypeCapabilities" since="6.0">
        <param name="type" type="WindowType" mandatory="true" />
        <param name="maximumNumberOfWindows" type="Integer" mandatory="true" />
    </struct>

    <struct name="DisplayCapability" since="6.0">
        <param name="displayName" type="String" mandatory="false" />
        <param name="windowTypeSupported" type="WindowTypeCapabilities" array="true" minsize="1" mandatory="false">
            <description>
              Informs the application how many windows the app is allowed to create per type.
            </description>
        </param>
        <param name="windowCapabilities" type="WindowCapability" array="true" minsize="1" maxsize="1000" mandatory="false">
            <description>
              Contains a list of capabilities of all windows related to the app.
              Once the app has registered the capabilities of all windows are provided.
              GetSystemCapability still allows requesting window capabilities of all windows.
              After registration, only windows with capabilities changed will be included. Following cases will cause only affected windows to be included:
              1. App creates a new window. After the window is created, a system capability notification will be sent related only to the created window.
              2. App sets a new layout to the window. The new layout changes window capabilties. The notification will reflect those changes to the single window.
            </description>
        </param>
    </struct>

    <struct name="HMICapabilities" since="3.0">
        <param name="navigation" type="Boolean" mandatory="false">
            <description>Availability of build in Nav. True: Available, False: Not Available</description>
        </param>
        <param name="phoneCall" type="Boolean" mandatory="false">
            <description>Availability of build in phone. True: Available, False: Not Available </description>
        </param>
        <param name="videoStreaming" type="Boolean" mandatory="false" since="4.5">
            <description>Availability of video streaming. </description>
        </param>
        <param name="remoteControl" type="Boolean" mandatory="false" since="4.5">
            <description>Availability of remote control feature. True: Available, False: Not Available</description>
        </param>
        <param name="appServices" type="Boolean" mandatory="false" since="6.0">
            <description>Availability of App Services functionality. True: Available, False: Not Available</description>
        </param>
        <param name="displays" type="Boolean" mandatory="false" since="6.0">
            <description>Availability of displays capability. True: Available, False: Not Available</description>
        </param>
        <param name="seatLocation" type="Boolean" mandatory="false" since="6.0">
            <description>Availability of seat location feature. True: Available, False: Not Available</description>
        </param>
    </struct>

    <struct name="MenuParams" since="1.0">
        <param name="parentID" type="Integer" minvalue="0" maxvalue="2000000000" defvalue="0" mandatory="false">
            <description>
                unique ID of the sub menu, the command will be added to.
                If not provided, it will be provided to the top level of the in application menu.
            </description>
        </param>         
        <param name="position" type="Integer" minvalue="0" maxvalue="1000" mandatory="false">
            <description>
                Position within the items that are are at top level of the in application menu.
                0 will insert at the front.
                1 will insert at the second position.
                if position is greater or equal than the number of items on top level, the sub menu will be appended to the end.
                If this param was omitted the entry will be added at the end.
            </description>
        </param>         
        <param name="menuName" type="String" maxlength="500" mandatory="true">
            <description>Text to show in the menu for this sub menu.</description>
        </param>
    </struct>
    
    <struct name="TTSChunk" since="1.0">
        <description>A TTS chunk, that consists of text/phonemes to speak or the name of a file to play, and a TTS type (like text or SAPI)</description>
        <param name="text" minlength="0" maxlength="500" type="String" mandatory="true">
            <description>
                The text or phonemes to speak, or the name of the audio file to play.
                May not be empty.
            </description>
        </param>

        <param name="type" type="SpeechCapabilities" mandatory="true">
            <description>Describes whether the TTS chunk is plain text, a specific phoneme set, or an audio file. See SpeechCapabilities</description>
        </param>
    </struct>         

    <struct name="Turn" since="2.0">
        <param name="navigationText" type="String" maxlength="500" mandatory="false">
            <description>Individual turn text.  Must provide at least text or icon for a given turn.</description>
        </param>
        <param name="turnIcon" type="Image" mandatory="false">
            <description>Individual turn icon.  Must provide at least text or icon for a given turn.</description>
        </param>
    </struct>         

    <struct name="VehicleType" since="2.0">
        <param name="make" type="String" maxlength="500" mandatory="false">
            <description>Make of the vehicle, e.g. Ford</description>
        </param>
        <param name="model" type="String" maxlength="500" mandatory="false">
            <description>Model of the vehicle, e.g. Fiesta</description>
        </param>
        <param name="modelYear" type="String" maxlength="500" mandatory="false">
            <description>Model Year of the vehicle, e.g. 2013</description>
        </param>
        <param name="trim" type="String" maxlength="500" mandatory="false">
            <description>Trim of the vehicle, e.g. SE</description>
        </param>
    </struct>   

    <enum name="KeyboardLayout" since="3.0">
        <description>Enumeration listing possible keyboard layouts.</description>
        <element name="QWERTY" />
        <element name="QWERTZ" />
        <element name="AZERTY" />
    </enum>         
    
    <enum name="KeyboardEvent" since="3.0">
        <description>Enumeration listing possible keyboard events.</description>
        <element name="KEYPRESS" />
        <element name="ENTRY_SUBMITTED" />
        <element name="ENTRY_VOICE" />
        <element name="ENTRY_CANCELLED" />
        <element name="ENTRY_ABORTED" />
    </enum>         

    <enum name="KeypressMode" since="3.0">
        <description>Enumeration listing possible keyboard events.</description>
        <element name="SINGLE_KEYPRESS">
            <description>Each keypress is individually sent as the user presses the keyboard keys.</description>
        </element>
        <element name="QUEUE_KEYPRESSES">
            <description>The keypresses are queued and a string is eventually sent once the user chooses to submit their entry.</description>
        </element>
        <element name="RESEND_CURRENT_ENTRY">
            <description>The keypresses are queue and a string is sent each time the user presses a keyboard key; the string contains the entire current entry.</description>
        </element>
    </enum>         

    <struct name="KeyboardProperties" since="3.0">
        <description>Configuration of on-screen keyboard (if available).</description>         
        <param name="language" type="Language" mandatory="false">
            <description>The keyboard language.</description>
        </param>
        <param name="keyboardLayout" type="KeyboardLayout" mandatory="false" >
            <description>Desired keyboard layout.</description>
        </param>
        <param name="keypressMode" type="KeypressMode" mandatory="false" >
            <description>
                Desired keypress mode.
                If omitted, this value will be set to RESEND_CURRENT_ENTRY.
            </description>
        </param>
        <param name="limitedCharacterList" type="String" maxlength="1" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>Array of keyboard characters to enable.</description>
            <description>All omitted characters will be greyed out (disabled) on the keyboard.</description>
            <description>If omitted, the entire keyboard will be enabled.</description>
        </param>
        <param name="autoCompleteText" type="String" maxlength="1000" mandatory="false" deprecated="true" since="6.0">
            <description>Deprecated, use autoCompleteList instead.</description>
            <history>
                <param name="autoCompleteText" type="String" maxlength="1000" mandatory="false" since="3.0" until="6.0" />
            </history>
        </param>
        <param name="autoCompleteList" type="String" maxlength="1000" minsize="0" maxsize="100" array="true" mandatory="false" since="6.0">
            <description>
                Allows an app to prepopulate the text field with a list of suggested or completed entries as the user types. 
                If empty, the auto-complete list will be removed from the screen.
            </description>
        </param>
    </struct>

    <struct name="DeviceInfo" since="3.0">
        <description>Various information about connecting device.</description>         
        <param name="hardware" type="String"  minlength="0" maxlength="500" mandatory="false">
            <description>Device model</description>
        </param>
        <param name="firmwareRev" type="String" minlength="0" maxlength="500" mandatory="false">
            <description>Device firmware revision</description>
        </param>
        <param name="os" type="String" minlength="0" maxlength="500" mandatory="false">
            <description>Device OS</description>
        </param>
        <param name="osVersion" type="String" minlength="0" maxlength="500" mandatory="false">
            <description>Device OS version</description>
        </param>
        <param name="carrier" type="String" minlength="0" maxlength="500" mandatory="false">
            <description>Device mobile carrier (if applicable)</description>
        </param>
        <param name="maxNumberRFCOMMPorts" type="Integer" minvalue="0" maxvalue="100" mandatory="false">
            <description>Omitted if connected not via BT.</description>
        </param>         
    </struct>         

    <enum name="RequestType" since="3.0">
        <description>Enumeration listing possible asynchronous requests.</description>
        <element name="HTTP" />
        <element name="FILE_RESUME" />
        <element name="AUTH_REQUEST" />
        <element name="AUTH_CHALLENGE" />
        <element name="AUTH_ACK" />
        <element name="PROPRIETARY" />
        <element name="QUERY_APPS" />
        <element name="LAUNCH_APP" />
        <element name="LOCK_SCREEN_ICON_URL" />
        <element name="TRAFFIC_MESSAGE_CHANNEL" />
        <element name="DRIVER_PROFILE" />
        <element name="VOICE_SEARCH" />
        <element name="NAVIGATION" />
        <element name="PHONE" />
        <element name="CLIMATE" />
        <element name="SETTINGS" />
        <element name="VEHICLE_DIAGNOSTICS" />
        <element name="EMERGENCY" />
        <element name="MEDIA" />
        <element name="FOTA" />
        <element name="OEM_SPECIFIC" since="5.0" />
        <element name="ICON_URL" since="5.1" />
    </enum>         
 
    <enum name="AppHMIType" since="2.0">
        <description>Enumeration listing possible app types.</description>
        <element name="DEFAULT" />
        <element name="COMMUNICATION" />
        <element name="MEDIA" />
        <element name="MESSAGING" />
        <element name="NAVIGATION" />
        <element name="INFORMATION" />
        <element name="SOCIAL" />
        <element name="BACKGROUND_PROCESS" />
        <element name="TESTING" />
        <element name="SYSTEM" />
        <element name="PROJECTION" since="4.5" />
        <element name="REMOTE_CONTROL" since="4.5" />
    </enum>         

    <enum name="PredefinedLayout" platform="documentation" since="3.0">
        <description>Predefined screen layout.</description>         
        <element name="DEFAULT" rootscreen="true">
            <description>
                Default media / non-media screen.
                Can be set as a root screen.
            </description>
        </element>
        <element name="MEDIA" rootscreen="true">
            <description>
                Default Media screen.
                Can be set as a root screen.
            </description>
        </element>
        <element name="NON-MEDIA" internal_name="NON_MEDIA" rootscreen="true">
            <description>
                Default Non-media screen.
                Can be set as a root screen.
            </description>
        </element>
        <element name="ONSCREEN_PRESETS" rootscreen="true">
            <description>
                Custom root media screen containing app-defined onscreen presets.
                Can be set as a root screen.
            </description>
        </element>
        <element name="NAV_FULLSCREEN_MAP" rootscreen="true" >
            <description>
                Custom root template screen containing full screen map with navigation controls.
                Can be set as a root screen.
            </description>
        </element>
        <element name="NAV_LIST" rootscreen="true" >
            <description>
                Custom root template screen containing video represented list.
                Can be set as a root screen.
            </description>
        </element>
        <element name="NAV_KEYBOARD" rootscreen="true" >
            <description>
                Custom root template screen containing video represented keyboard.
                Can be set as a root screen.
            </description>
        </element>
        <element name="GRAPHIC_WITH_TEXT" rootscreen="true">
            <description>
                Custom root template screen containing half-screen graphic with lines of text.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TEXT_WITH_GRAPHIC" rootscreen="true">
            <description>
                Custom root template screen containing lines of text with half-screen graphic.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TILES_ONLY" rootscreen="true">
            <description>
                Custom root template screen containing only tiled SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TEXTBUTTONS_ONLY" rootscreen="true">
            <description>
                Custom root template screen containing only text SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="GRAPHIC_WITH_TILES" rootscreen="true">
            <description>
                Custom root template screen containing half-screen graphic with tiled SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TILES_WITH_GRAPHIC" rootscreen="true">
            <description>
                Custom root template screen containing tiled SoftButtons with half-screen graphic.
                Can be set as a root screen.
            </description>
        </element>
        <element name="GRAPHIC_WITH_TEXT_AND_SOFTBUTTONS" rootscreen="true">
            <description>
                Custom root template screen containing half-screen graphic with text and SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TEXT_AND_SOFTBUTTONS_WITH_GRAPHIC" rootscreen="true">
            <description>
                Custom root template screen containing text and SoftButtons with half-screen graphic.
                Can be set as a root screen.
            </description>
        </element>
        <element name="GRAPHIC_WITH_TEXTBUTTONS" rootscreen="true">
            <description>
                Custom root template screen containing half-screen graphic with text only SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="TEXTBUTTONS_WITH_GRAPHIC" rootscreen="true">
            <description>
                Custom root template screen containing text only SoftButtons with half-screen graphic.
                Can be set as a root screen.
            </description>
        </element>
        <element name="LARGE_GRAPHIC_WITH_SOFTBUTTONS" rootscreen="true">
            <description>
                Custom root template screen containing a large graphic and SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="DOUBLE_GRAPHIC_WITH_SOFTBUTTONS" rootscreen="true">
            <description>
                Custom root template screen containing two graphics and SoftButtons.
                Can be set as a root screen.
            </description>
        </element>
        <element name="LARGE_GRAPHIC_ONLY" rootscreen="true">
            <description>
                Custom root template screen containing only a large graphic.
                Can be set as a root screen.
            </description>
        </element>
    </enum>         
   
    <enum name="FunctionID" internal_scope="base" since="1.0">
        <description>Enumeration linking function names with function IDs in SmartDeviceLink protocol. Assumes enumeration starts at value 0.</description>
        <element name="RESERVED" value="0" since="1.0" />
         <!--
         Base Request / Response RPCs
         Range = 0x 0000 0001 - 0x 0000 7FFF
         -->
        <element name="RegisterAppInterfaceID" value="1" hexvalue="1" since="1.0" />
        <element name="UnregisterAppInterfaceID" value="2" hexvalue="2" since="1.0" />
        <element name="SetGlobalPropertiesID" value="3" hexvalue="3" since="1.0" />
        <element name="ResetGlobalPropertiesID" value="4" hexvalue="4" since="1.0" />
        <element name="AddCommandID" value="5" hexvalue="5" since="1.0" />
        <element name="DeleteCommandID" value="6" hexvalue="6" since="1.0" />
        <element name="AddSubMenuID" value="7" hexvalue="7" since="1.0" />
        <element name="DeleteSubMenuID" value="8" hexvalue="8" since="1.0" />
        <element name="CreateInteractionChoiceSetID" value="9" hexvalue="9" since="1.0" />
        <element name="PerformInteractionID" value="10" hexvalue="A" since="1.0" />
        <element name="DeleteInteractionChoiceSetID" value="11" hexvalue="B" since="1.0" />
        <element name="AlertID" value="12" hexvalue="C" since="1.0" />
        <element name="ShowID" value="13" hexvalue="D" since="1.0" />
        <element name="SpeakID" value="14" hexvalue="E" since="1.0" />
        <element name="SetMediaClockTimerID" value="15" hexvalue="F" since="1.0" />
        <element name="PerformAudioPassThruID" value="16" hexvalue="10" since="2.0" />
        <element name="EndAudioPassThruID" value="17" hexvalue="11" since="2.0" />
        <element name="SubscribeButtonID" value="18" hexvalue="12" since="1.0" />
        <element name="UnsubscribeButtonID" value="19" hexvalue="13" since="1.0" />
        <element name="SubscribeVehicleDataID" value="20" hexvalue="14" since="2.0" />
        <element name="UnsubscribeVehicleDataID" value="21" hexvalue="15" since="2.0" />
        <element name="GetVehicleDataID" value="22" hexvalue="16" since="2.0" />
        <element name="ReadDIDID" value="23" hexvalue="17" since="2.0" />
        <element name="GetDTCsID" value="24" hexvalue="18" since="2.0" />
        <element name="ScrollableMessageID" value="25" hexvalue="19" since="2.0" />
        <element name="SliderID" value="26" hexvalue="1A" since="2.0" />
        <element name="ShowConstantTBTID" value="27" hexvalue="1B" since="2.0" />
        <element name="AlertManeuverID" value="28" hexvalue="1C" since="2.0" />
        <element name="UpdateTurnListID" value="29" hexvalue="1D" since="2.0" />
        <element name="ChangeRegistrationID" value="30" hexvalue="1E" since="2.0" />
        <element name="GenericResponseID" value="31" hexvalue="1F" since="1.0" />
        <element name="PutFileID" value="32" hexvalue="20" since="3.0" />
        <element name="DeleteFileID" value="33" hexvalue="21" since="3.0" />
        <element name="ListFilesID" value="34" hexvalue="22" since="3.0" />
        <element name="SetAppIconID" value="35" hexvalue="23" since="3.0" />
        <element name="SetDisplayLayoutID" value="36" hexvalue="24" since="3.0" />
        <element name="DiagnosticMessageID" value="37" hexvalue="25" since="3.0" />
        <element name="SystemRequestID" value="38" hexvalue="26" since="3.0" />
        <element name="SendLocationID" value="39" hexvalue="27" since="3.0" />
        <element name="DialNumberID" value="40" hexvalue="28" since="3.0" />
        <element name="ButtonPressID" value="41" hexvalue="29" since="4.5" />
        <element name="GetInteriorVehicleDataID" value="43" hexvalue="2B" since="4.5" />
        <element name="SetInteriorVehicleDataID" value="44" hexvalue="2C" since="4.5" />
        <element name="GetWayPointsID" value="45" hexvalue="2D" since="4.1" />
        <element name="SubscribeWayPointsID" value="46" hexvalue="2E" since="4.1" />
        <element name="UnsubscribeWayPointsID" value="47" hexvalue="2F" since="4.1" />
        <element name="GetSystemCapabilityID" value="48" hexvalue="30" since="4.5" />
        <element name="SendHapticDataID" value="49" hexvalue="31" since="4.5" />
        <element name="SetCloudAppPropertiesID" value="50" hexvalue="32" since="5.1" />
        <element name="GetCloudAppPropertiesID" value="51" hexvalue="33" since="5.1" />
        <element name="PublishAppServiceID" value="52" hexvalue="34" since="5.1" />
        <element name="GetAppServiceDataID" value="53" hexvalue="35" since="5.1" />
        <element name="GetFileID" value="54" hexvalue="36" since="5.1" />
        <element name="PerformAppServiceInteractionID" value="55" hexvalue="37" since="5.1" />
        <element name="UnpublishAppServiceID" value="56" hexvalue="38" since="6.0" />
        <element name="CancelInteractionID" value="57" hexvalue="39" since="6.0" />
        <element name="CloseApplicationID" value="58" hexvalue="3A" since="6.0" />
        <element name="ShowAppMenuID" value="59" hexvalue="3B" since="6.0" />
        <element name="CreateWindowID" value="60" hexvalue="3C" since="6.0" />
        <element name="DeleteWindowID" value="61" hexvalue="3D" since="6.0" />
        <element name="GetInteriorVehicleDataConsentID" value="62" hexvalue="3E" since="6.0" />
        <element name="ReleaseInteriorVehicleDataModuleID" value="63" hexvalue="3F" since="6.0" /> 
        
        <!--
         Base Notifications
         Range = 0x 0000 8000 - 0x 0000 FFFF
         -->
        
        <element name="OnHMIStatusID" value="32768" hexvalue="8000" since="1.0" />
        <element name="OnAppInterfaceUnregisteredID" value="32769" hexvalue="8001" since="1.0" />
        <element name="OnButtonEventID" value="32770" hexvalue="8002" since="1.0" />
        <element name="OnButtonPressID" value="32771" hexvalue="8003" since="1.0" />
        <element name="OnVehicleDataID" value="32772" hexvalue="8004" since="2.0" />
        <element name="OnCommandID" value="32773" hexvalue="8005" since="1.0" />
        <element name="OnTBTClientStateID" value="32774" hexvalue="8006" since="1.0" />
        <element name="OnDriverDistractionID" value="32775" hexvalue="8007" since="1.0" />
        <element name="OnPermissionsChangeID" value="32776" hexvalue="8008" since="2.0" />
        <element name="OnAudioPassThruID" value="32777" hexvalue="8009" since="2.0" />
        <element name="OnLanguageChangeID" value="32778" hexvalue="800A" since="2.0" />
        <element name="OnKeyboardInputID" value="32779" hexvalue="800B" since="3.0" />
        <element name="OnTouchEventID" value="32780" hexvalue="800C" since="3.0" />
        <element name="OnSystemRequestID" value="32781" hexvalue="800D" since="3.0" />
        <element name="OnHashChangeID" value="32782" hexvalue="800E" since="3.0" />
        <element name="OnInteriorVehicleDataID" value="32783" hexvalue="800F" since="4.5" />
        <element name="OnWayPointChangeID" value="32784" hexvalue="8010" since="4.1" />
        <element name="OnRCStatusID" value="32785" hexvalue="8011" since="5.0" />
        <element name="OnAppServiceDataID" value="32786" hexvalue="8012" since="5.1" />
        <element name="OnSystemCapabilityUpdatedID" value="32787" hexvalue="8013" since="5.1" />

        <!--
         Ford Specific Request / Response RPCs
         Range = 0x 0001 0000 - 0x 0001 7FFF
         -->
        
        <element name="EncodedSyncPDataID" value="65536" hexvalue="10000" since="1.0" />
        <element name="SyncPDataID" value="65537" hexvalue="10001" since="1.0" />
        
        <!--
         Ford Specific Notifications
         Range = 0x 0001 8000 - 0x 0001 FFFF
         -->
        
        <element name="OnEncodedSyncPDataID" value="98304" hexvalue="18000" since="1.0" />
        <element name="OnSyncPDataID" value="98305" hexvalue="18001" since="1.0" />
    </enum>
    
    <enum name="messageType" since="1.0">
        <description>
            Enumeration linking message types with function types in WiPro protocol.
            Assumes enumeration starts at value 0.
        </description>
        <element name="request" value="0" />
        <element name="response" value="1" />
        <element name="notification" value="2" />
    </enum>
    
    <struct name="DateTime" since="4.1">
        <param name="millisecond" type="Integer" minvalue="0" maxvalue="999" mandatory="false" since="4.2.2">
            <description>Milliseconds </description>
        </param>
        <param name="second" type="Integer" minvalue="0" maxvalue="60" mandatory="false" since="4.2.2">
            <description>Seconds part of time</description>
            <history>
                <param name="second" type="Integer" minvalue="0" maxvalue="60" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="minute" type="Integer" minvalue="0" maxvalue="59" mandatory="false" since="4.2.2">
            <description>Minutes part of time</description>
            <history>
                <param name="minute" type="Integer" minvalue="0" maxvalue="59" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="hour" type="Integer" minvalue="0" maxvalue="23" mandatory="false" since="4.2.2">
            <description>Hours part of time. Note that this structure accepts time only in 24 Hr format</description>
            <history>
                <param name="hour" type="Integer" minvalue="0" maxvalue="23" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="day" type="Integer" minvalue="1" maxvalue="31" mandatory="false" since="4.2.2">
            <description>Day of the month</description>
            <history>
                <param name="day" type="Integer" minvalue="1" maxvalue="31" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="month" type="Integer" minvalue="1" maxvalue="12" mandatory="false" since="4.2.2">
            <description>Month of the year</description>
            <history>
                <param name="month" type="Integer" minvalue="1" maxvalue="12" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="year" type="Integer" maxvalue="4095" mandatory="false" since="4.2.2">
            <description>The year in YYYY format</description>
            <history>
                <param name="year" type="Integer" maxvalue="4095" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="tz_hour" type="Integer" minvalue="-12" maxvalue="14" defvalue="0" mandatory="false" since="4.2.2">
            <description>Time zone offset in Hours wrt UTC.</description>
            <history>
                <param name="tz_hour" type="Integer" minvalue="-12" maxvalue="14" defvalue="0" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
        <param name="tz_minute" type="Integer" minvalue="0" maxvalue="59" defvalue="0" mandatory="false" since="4.2.2">
            <description>Time zone offset in Min wrt UTC.</description>
            <history>
                <param name="tz_minute" type="Integer" minvalue="0" maxvalue="59" defvalue="0" mandatory="true" since="4.1" until="4.2.1" />
            </history>
        </param>
    </struct>
    
    <enum name="WayPointType" since="4.1">
        <description>Describes what kind of waypoint is requested/provided.</description>
        <element name="ALL" />
        <element name="DESTINATION" />
    </enum>
    
    <struct name="Coordinate" since="4.1">
        <param name="latitudeDegrees" minvalue="-90" maxvalue="90" type="Float" mandatory="true">
            <description>Latitude of the location.</description>
        </param>
        <param name="longitudeDegrees" minvalue="-180" maxvalue="180" type="Float" mandatory="true">
            <description>Longitude of the location.</description>
        </param>
    </struct>
    
    <struct name="OASISAddress" since="4.1">
        <param name="countryName" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Name of the country (localized)</description>
        </param>
        <param name="countryCode" minlength="0" maxlength="50" type="String" mandatory="false">
            <description>Name of country (ISO 3166-2)</description>
        </param>
        <param name="postalCode" minlength="0" maxlength="16" type="String" mandatory="false">
            <description>(PLZ, ZIP, PIN, CAP etc.)</description>
        </param>
        <param name="administrativeArea" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Portion of country (e.g. state)</description>
        </param>
        <param name="subAdministrativeArea" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Portion of e.g. state (e.g. county)</description>
        </param>
        <param name="locality" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Hypernym for e.g. city/village</description>
        </param>
        <param name="subLocality" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Hypernym for e.g. district</description>
        </param>
        <param name="thoroughfare" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Hypernym for street, road etc.</description>
        </param>
        <param name="subThoroughfare" minlength="0" maxlength="200" type="String" mandatory="false">
            <description>Portion of thoroughfare e.g. house number</description>
        </param>
    </struct>
    
    <struct name="LocationDetails" since="4.1">
        <param name="coordinate" type="Coordinate" mandatory="false">
            <description>Latitude/Longitude of the location.</description>
        </param>
        <param name="locationName" type="String" maxlength="500" mandatory="false">
            <description>Name of location.</description>
        </param>
        <param name="addressLines" type="String" maxlength="500" minsize="0" maxsize="4" array="true" mandatory="false">
            <description>Location address for display purposes only</description>
        </param>
        <param name="locationDescription" type="String" maxlength="500" mandatory="false">
            <description>Description intended location / establishment (if applicable)</description>
        </param>
        <param name="phoneNumber" type="String" maxlength="500" mandatory="false">
            <description>Phone number of location / establishment.</description>
        </param>
        <param name="locationImage" type="Image" mandatory="false">
            <description>Image / icon of intended location.</description>
        </param>
        <param name="searchAddress" type="OASISAddress" mandatory="false">
            <description>Address to be used by navigation engines for search</description>
        </param>
    </struct>
    
    <enum name="SystemCapabilityType" since="4.5">
        <description>Enumerations of all available system capability types</description>
        <element name="NAVIGATION"/>
        <element name="PHONE_CALL"/>
        <element name="VIDEO_STREAMING"/>
        <element name="REMOTE_CONTROL"/>
        <element name="APP_SERVICES" since="5.1"/>
        <element name="SEAT_LOCATION" since="6.0"/>
        <element name="DISPLAYS" since="6.0"/>
    </enum>
    
    <struct name="NavigationCapability" since="4.5">
        <description>Extended capabilities for an onboard navigation system</description>
        <param name="sendLocationEnabled" type="Boolean" mandatory="false">
            <description>If the module has the ability to add locations to the onboard nav</description>
        </param>
        <param name="getWayPointsEnabled" type="Boolean" mandatory="false">
            <description>If the module has the ability to return way points from onboard nav</description>
        </param>
    </struct>
    
    <struct name="PhoneCapability" since="4.5">
        <description>Extended capabilities of the module's phone feature</description>
        <param name="dialNumberEnabled" type="Boolean" mandatory="false">
            <description>If the module has the ability to perform dial number</description>
        </param>
    </struct>
    
    <struct name="VideoStreamingFormat" since="4.5">
        <description>Video streaming formats and their specifications.</description>
        <param name="protocol" type="VideoStreamingProtocol" mandatory="true">
            <description>Protocol type, see VideoStreamingProtocol</description>
        </param>
        <param name="codec" type="VideoStreamingCodec" mandatory="true">
            <description>Codec type, see VideoStreamingCodec</description>
        </param>
    </struct>

    <struct name="VideoStreamingCapability" since="4.5">
        <description>Contains information about this system's video streaming capabilities.</description>
        <param name="preferredResolution" type="ImageResolution" mandatory="false">
            <description>The preferred resolution of a video stream for decoding and rendering on HMI.</description>
        </param>
        <param name="maxBitrate" type="Integer" minvalue="0" maxvalue="2147483647" mandatory="false">
            <description>The maximum bitrate of video stream that is supported, in kbps.</description>
        </param>
        <param name="supportedFormats" type="VideoStreamingFormat" array="true" mandatory="false">
            <description>Detailed information on each format supported by this system, in its preferred order (i.e. the first element in the array is most preferable to the system). Each object will contain a VideoStreamingFormat that describes what can be expected.</description>
        </param>
        <param name="hapticSpatialDataSupported" type="Boolean" mandatory="false">
            <description>True if the system can utilize the haptic spatial data from the source being streamed. If not included, it can be assumed the module doesn't support haptic spatial data'. </description>
        </param>
        <param name="diagonalScreenSize" type="Float" minvalue="0" mandatory="false" since="6.0">
            <description>The diagonal screen size in inches.</description>
        </param>
        <param name="pixelPerInch" type="Float" minvalue="0" mandatory="false" since="6.0">
            <description>PPI is the diagonal resolution in pixels divided by the diagonal screen size in inches.</description>
        </param>
        <param name="scale" type="Float" minvalue="1" maxvalue="10" mandatory="false" since="6.0">
            <description>The scaling factor the app should use to change the size of the projecting view.</description>
        </param>
    </struct>

    <struct name="RGBColor" since="5.0">
        <param name="red" type="Integer" minvalue="0" maxvalue="255" mandatory="true" />
        <param name="green" type="Integer" minvalue="0" maxvalue="255" mandatory="true" />
        <param name="blue" type="Integer" minvalue="0" maxvalue="255" mandatory="true" />
    </struct>

    <struct name="TemplateColorScheme" since="5.0">
        <description>
            A color scheme for all display layout templates.
        </description>
        <param name="primaryColor" type="RGBColor" mandatory="false">
            <description>The primary "accent" color</description>
        </param>
        <param name="secondaryColor" type="RGBColor" mandatory="false">
            <description>The secondary "accent" color</description>
        </param>
        <param name="backgroundColor" type="RGBColor" mandatory="false">
            <description>The color of the background</description>
        </param>
    </struct>

    <struct name="TemplateConfiguration" since="6.0">
        <param name="template" type="String" maxlength="500" mandatory="true">
          <description>
              Predefined or dynamically created window template.
              Currently only predefined window template layouts are defined.
          </description>
        </param>
        <param name="dayColorScheme" type="TemplateColorScheme" mandatory="false" />
        <param name="nightColorScheme" type="TemplateColorScheme" mandatory="false" />
    </struct>

    <!---Remote control  -->

    <struct name="SeatLocation" since="6.0">
        <description>Describes the location of a seat.</description>
        <param name="grid" type="Grid"  mandatory="false">
        </param>
    </struct>

    <struct name="SeatLocationCapability" since="6.0">
        <description>Contains information about the locations of each seat</description>
        <param name="rows" type="Integer" minvalue="1" maxvalue="100" mandatory="false"></param>
        <param name="columns" type="Integer" minvalue="1" maxvalue="100" mandatory="false"></param>
        <param name="levels" type="Integer" minvalue="1" maxvalue="100" defvalue="1" mandatory="false">   
        </param>
        <param name="seats" type="SeatLocation" array="true" mandatory="false">
            <description>Contains a list of SeatLocation in the vehicle</description>
        </param>
    </struct>

    <enum name="MassageZone" since="5.0">
        <description>List possible zones of a multi-contour massage seat.</description>
        <element name="LUMBAR">
            <description>The back of a multi-contour massage seat. or SEAT_BACK</description>
        </element>
        <element name="SEAT_CUSHION">
            <description>The bottom a multi-contour massage seat. or SEAT_BOTTOM </description>
        </element>
    </enum>

    <enum name="MassageMode" since="5.0">
        <description>List possible modes of a massage zone.</description>
        <element name="OFF"/>
        <element name="LOW"/>
        <element name="HIGH"/>
    </enum>

    <struct name="MassageModeData" since="5.0">
        <description>Specify the mode of a massage zone.</description>
        <param name="massageZone" type="MassageZone" mandatory="true"></param>
        <param name="massageMode" type="MassageMode" mandatory="true"></param>
    </struct>

    <enum name="MassageCushion" since="5.0">
        <description>List possible cushions of a multi-contour massage seat.</description>
        <element name="TOP_LUMBAR"/>
        <element name="MIDDLE_LUMBAR"/>
        <element name="BOTTOM_LUMBAR"/>
        <element name="BACK_BOLSTERS"/>
        <element name="SEAT_BOLSTERS"/>
    </enum>

    <struct name="MassageCushionFirmness" since="5.0">
        <description>The intensity or firmness of a cushion.</description>
        <param name="cushion" type="MassageCushion" mandatory="true"></param>
        <param name="firmness" type="Integer" minvalue="0" maxvalue="100" mandatory="true"></param>
    </struct>

    <enum name="SeatMemoryActionType" since="5.0">
        <element name="SAVE">
            <description>Save current seat postions and settings to seat memory.</description>
        </element>
        <element name="RESTORE">
            <description>Restore / apply the seat memory settings to the current seat. </description>
        </element>
        <element name="NONE">
            <description>No action to be performed.</description>
        </element>
    </enum>

    <struct name="SeatMemoryAction" since="5.0">
        <param name="id" type="Integer" minvalue="1" maxvalue="10" mandatory="true"/>
        <param name="label" type="String" maxlength="100" mandatory="false"/>
        <param name="action" type="SeatMemoryActionType" mandatory="true"/>
    </struct>

    <enum name="SupportedSeat" deprecated="true" since="6.0">
        <description>List possible seats that is a remote controllable seat.</description>
            <history>
                <enum name="SupportedSeat" since="5.0" until="6.0"/>
            </history>
        <element name="DRIVER"/>
        <element name="FRONT_PASSENGER"/>
    </enum>

    <struct name="SeatControlData" since="5.0">
        <description>Seat control data corresponds to "SEAT" ModuleType. </description>
        <param name="id" type="SupportedSeat" mandatory="true" deprecated="true" since="6.0">
            <history>
                <param name="id" type="SupportedSeat" mandatory="true" since="5.0" until="6.0"/>
            </history>
        </param>
        
        <param name="heatingEnabled" type="Boolean" mandatory="false"></param>
        <param name="coolingEnabled" type="Boolean" mandatory="false"></param>
        <param name="heatingLevel" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="coolingLevel" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>

        <param name="horizontalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="verticalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="frontVerticalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="backVerticalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="backTiltAngle" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        
        <param name="headSupportHorizontalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        <param name="headSupportVerticalPosition" type="Integer" minvalue="0" maxvalue="100" mandatory="false"></param>
        
        <param name="massageEnabled" type="Boolean" mandatory="false"></param>
        <param name="massageMode" type="MassageModeData" minsize="1" maxsize="2" array="true" mandatory="false"></param>
        <param name="massageCushionFirmness" type="MassageCushionFirmness" minsize="1" maxsize="5" array="true" mandatory="false"></param>
        
        <param name="memory" type="SeatMemoryAction" mandatory="false"></param>
    </struct>

    <struct name="SeatControlCapabilities" since="5.0">
        <param name="moduleName" type="String" maxlength="100"  mandatory="true">
            <description>
            The short friendly name of the light control module.
            It should not be used to identify a module by mobile application.
            </description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="heatingEnabledAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="coolingEnabledAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="heatingLevelAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="coolingLevelAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="horizontalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="verticalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="frontVerticalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="backVerticalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="backTiltAngleAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="headSupportHorizontalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="headSupportVerticalPositionAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="massageEnabledAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="massageModeAvailable" type="Boolean" mandatory="false">
        </param> 
        <param name="massageCushionFirmnessAvailable" type="Boolean" mandatory="false">
        </param>
        <param name="memoryAvailable" type="Boolean" mandatory="false">
        </param> 
    </struct> 
    
    <struct name="Temperature" since="4.5">
        <param name="unit" type="TemperatureUnit" mandatory="true">
            <description>Temperature Unit</description>
        </param>
        <param name="value" type="Float" mandatory="true">
            <description>Temperature Value in TemperatureUnit specified unit. Range depends on OEM and is not checked by SDL.</description>
        </param>
    </struct>
    
    <struct name="RdsData" since="4.5">
        <param name="PS" type="String" minlength="0" maxlength="8" mandatory="false">
            <description>Program Service Name</description>
        </param>
        <param name="RT" type="String" minlength="0" maxlength="64" mandatory="false">
            <description>Radio Text</description>
        </param>
        <param name="CT" type="String" minlength="24" maxlength="24" mandatory="false">
            <description>The clock text in UTC format as YYYY-MM-DDThh:mm:ss.sTZD</description>
        </param>
        <param name="PI" type="String" minlength="0" maxlength="6" mandatory="false">
            <description>Program Identification - the call sign for the radio station</description>
        </param>
        <param name="PTY" type="Integer" minvalue="0" maxvalue="31" mandatory="false">
            <description>The program type - The region should be used to differentiate between EU and North America program types</description>
        </param>
        <param name="TP" type="Boolean" mandatory="false">
            <description>Traffic Program Identification - Identifies a station that offers traffic</description>
        </param>
        <param name="TA" type="Boolean" mandatory="false">
            <description>Traffic Announcement Identification - Indicates an ongoing traffic announcement</description>
        </param>
        <param name="REG" type="String" mandatory="false">
            <description>Region</description>
        </param>
    </struct>

    <struct name="StationIDNumber" since="5.0">
        <param name="countryCode" type="Integer" minvalue="0" maxvalue="999"  mandatory="false">
            <description>Binary Representation of ITU Country Code. USA Code is 001.</description>
        </param>
        <param name="fccFacilityId" type="Integer" minvalue="0" maxvalue="999999"  mandatory="false">
            <description>Binary representation  of unique facility ID assigned by the FCC; FCC controlled for U.S. territory</description>
        </param>
    </struct>

    <struct name="SisData" since="5.0">
        <param name="stationShortName" type="String" minlength="4" maxlength="7"  mandatory="false">
            <description>Identifies the 4-alpha-character station call sign plus an optional (-FM) extension</description>
        </param>
        <param name="stationIDNumber" type="StationIDNumber"  mandatory="false">
            <description>Used for network Application. Consists of Country Code and FCC Facility ID.</description>
        </param>
        <param name="stationLongName" type="String" minlength="0" maxlength="56"  mandatory="false">
            <description>Identifies the station call sign or other identifying information in the long format.</description>
        </param>
        <param name="stationLocation" type="GPSData" mandatory="false">
            <description>Provides the 3-dimensional geographic station location.</description>
        </param>
        <param name="stationMessage" type="String" minlength="0" maxlength="56"  mandatory="false">
            <description>May be used to convey textual information of general interest to the consumer such as weather forecasts or public service announcements. Includes a high priority delivery feature to convey emergencies that may be in the listening area.</description>
        </param>
    </struct>
    
    <struct name="RadioControlData" since="4.5">
        <param name="frequencyInteger" type="Integer" minvalue="0" maxvalue="1710" mandatory="false">
            <description>The integer part of the frequency ie for 101.7 this value should be 101</description>
        </param>
        <param name="frequencyFraction" type="Integer" minvalue="0" maxvalue="9" mandatory="false">
            <description>The fractional part of the frequency for 101.7 is 7</description>
        </param>
        <param name="band" type="RadioBand" mandatory="false">
        </param>
        <param name="rdsData" type="RdsData" mandatory="false">
        </param>
        <param name="hdRadioEnable" type="Boolean" mandatory="false"  since="5.0">
            <description> True if the hd radio is on, false if the radio is off</description>
        </param>
        <param name="availableHDs" type="Integer" minvalue="1" maxvalue="7" mandatory="false" deprecated="true" since="6.0">
            <description>Number of HD sub-channels if available</description>
            <history>
                <param name="availableHDs" type="Integer" minvalue="1" maxvalue="3" mandatory="false" since="4.5" until="5.0"/>
                <param name="availableHDs" type="Integer" minvalue="1" maxvalue="7" mandatory="false" since="5.0" until="6.0"/>
            </history>
        </param>
        <param name="availableHdChannels" type="Integer" minvalue="0" maxvalue="7" array="true" minsize="0" maxsize="8" mandatory="false" since="6.0">
            <description>The list of available HD sub-channel indexes. Empty list means no Hd channel is available. Read-only. </description>
        </param>
        <param name="hdChannel" type="Integer" minvalue="0" maxvalue="7" mandatory="false" since="6.0">
            <description>Current HD sub-channel if available</description>
            <history>
                <param name="hdChannel" type="Integer" minvalue="1" maxvalue="3" mandatory="false" since="4.5" until="5.0"/>
                <param name="hdChannel" type="Integer" minvalue="1" maxvalue="7" mandatory="false" since="5.0" until="6.0"/>
            </history>
        </param>
        <param name="signalStrength" type="Integer" minvalue="0" maxvalue="100" mandatory="false">
        </param>
        <param name="signalChangeThreshold" type="Integer" minvalue="0" maxvalue="100" mandatory="false">
            <description>If the signal strength falls below the set value for this parameter, the radio will tune to an alternative frequency</description>
        </param>
        <param name="radioEnable" type="Boolean" mandatory="false">
            <description> True if the radio is on, false if the radio is off. If set to false, no other data will be included.</description>
        </param>
        <param name="state" type="RadioState" mandatory="false">
        </param>
        <param name="sisData" type="SisData" mandatory="false" since="5.0">
            <description>Read-only Station Information Service (SIS) data provides basic information about the station such as call sign, as well as information not displayable to the consumer such as the station identification number</description>
        </param>
    </struct>
    
    <struct name="ClimateControlData" since="4.5">
        <param name="fanSpeed" type="Integer" minvalue="0" maxvalue="100" mandatory="false">
        </param>
        <param name="currentTemperature" type="Temperature" mandatory="false">
        </param>
        <param name="desiredTemperature" type="Temperature" mandatory="false">
        </param>
        <param name="acEnable" type="Boolean" mandatory="false">
        </param>
        <param name="circulateAirEnable" type="Boolean" mandatory="false">
        </param>
        <param name="autoModeEnable" type="Boolean" mandatory="false">
        </param>
        <param name="defrostZone" type="DefrostZone" mandatory="false">
        </param>
        <param name="dualModeEnable" type="Boolean" mandatory="false">
        </param>
        <param name="acMaxEnable" type="Boolean" mandatory="false">
        </param>
        <param name="ventilationMode" type="VentilationMode" mandatory="false">
        </param>
        <param name="heatedSteeringWheelEnable" type="Boolean" mandatory="false" since="5.0">
            <description>value false means disabled/turn off, value true means enabled/turn on.</description>
        </param>
        <param name="heatedWindshieldEnable" type="Boolean" mandatory="false" since="5.0">
            <description>value false means disabled, value true means enabled.</description>
        </param>
        <param name="heatedRearWindowEnable" type="Boolean" mandatory="false" since="5.0">
            <description>value false means disabled, value true means enabled.</description>
        </param>
        <param name="heatedMirrorsEnable" type="Boolean" mandatory="false" since="5.0">
            <description>value false means disabled, value true means enabled.</description>
        </param>
        <param name="climateEnable" type="Boolean" mandatory="false" since="6.0">
            <description>True if the climate module is on, false if the climate module is off</description>
        </param>
    </struct>

    <struct name="RadioControlCapabilities" since="4.5">
        <description>Contains information about a radio control module's capabilities.</description>
        <param name="moduleName" type="String" maxlength="100" mandatory="true">
            <description>
                The short friendly name of the climate control module.
                It should not be used to identify a module by mobile application.
            </description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="radioEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of enable/disable radio.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="radioBandAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of radio band.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="radioFrequencyAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of radio frequency.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="hdChannelAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of HD radio channel.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="rdsDataAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the getting Radio Data System (RDS) data.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="availableHDsAvailable" type="Boolean" mandatory="false" deprecated="true" since="6.0">
            <description>
                Availability of the getting the number of available HD channels.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
            <history>
                <param name="availableHDsAvailable" type="Boolean" mandatory="false" since="4.5" until="6.0"/>
            </history>
        </param>
        <param name="availableHdChannelsAvailable" type="Boolean" mandatory="false" since="6.0">
            <description>
                Availability of the list of available HD sub-channel indexes.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="stateAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the getting the Radio state.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="signalStrengthAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the getting the signal strength.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="signalChangeThresholdAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the getting the signal Change Threshold.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="sisDataAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the getting HD radio Station Information Service (SIS) data.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="hdRadioEnableAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the control of enable/disable HD radio.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="siriusxmRadioAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of sirius XM radio.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
    </struct>
    
    <struct name="ClimateControlCapabilities" since="4.5">
        <description>Contains information about a climate control module's capabilities.</description>
        <param name="moduleName" type="String" maxlength="100" mandatory="true">
            <description>The short friendly name of the climate control module.
                It should not be used to identify a module by mobile application.</description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="currentTemperatureAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the reading of current temperature.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="fanSpeedAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of fan speed.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="desiredTemperatureAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of desired temperature.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="acEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of turn on/off AC.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="acMaxEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of enable/disable air conditioning is ON on the maximum level.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="circulateAirEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of enable/disable circulate Air mode.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="autoModeEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of enable/disable auto mode.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="dualModeEnableAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of enable/disable dual mode.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="defrostZoneAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of defrost zones.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="defrostZone" type="DefrostZone" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                A set of all defrost zones that are controllable.
            </description>
        </param>
        <param name="ventilationModeAvailable" type="Boolean" mandatory="false">
            <description>
                Availability of the control of air ventilation mode.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="ventilationMode" type="VentilationMode" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                A set of all ventilation modes that are controllable.
            </description>
        </param>
        <param name="heatedSteeringWheelAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the control (enable/disable) of heated Steering Wheel.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="heatedWindshieldAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the control (enable/disable) of heated Windshield.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="heatedRearWindowAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the control (enable/disable) of heated Rear Window.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="heatedMirrorsAvailable" type="Boolean" mandatory="false" since="5.0">
            <description>
                Availability of the control (enable/disable) of heated Mirrors.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
        <param name="climateEnableAvailable" type="Boolean" mandatory="false" since="6.0">
            <description>
                Availability of the control of enable/disable climate control.
                True: Available, False: Not Available, Not present: Not Available.
            </description>
        </param>
    </struct>

    <struct name="EqualizerSettings" since="5.0">
        <description>Defines the each Equalizer channel settings.</description>
        <param name="channelId" type="Integer" minvalue="1" maxvalue="100" mandatory="true"></param>
        <param name="channelName" type="String" mandatory="false" maxlength="50">
            <description>read-only channel / frequency name (e.i. "Treble, Midrange, Bass" or "125 Hz")</description>
        </param>
        <param name="channelSetting" type="Integer" minvalue="0" maxvalue="100" mandatory="true">
            <description>Reflects the setting, from 0%-100%.</description>
        </param>
    </struct>

    <struct name="AudioControlData" since="5.0">
        <param name="source" type="PrimaryAudioSource" mandatory="false">
            <description>
                In a getter response or a notification, it is the current primary audio source of the system.
                In a setter request, it is the target audio source that the system shall switch to.
                If the value is MOBILE_APP, the system shall switch to the mobile media app that issues the setter RPC.
            </description>
        </param>
        <param name="keepContext" type="Boolean" mandatory="false">
            <description>
                This parameter shall not be present in any getter responses or notifications.
                This parameter is optional in a setter request. The default value is false if it is not included.
                If it is false, the system not only changes the audio source but also brings the default application or 
                system UI associated with the audio source to foreground.
                If it is true, the system only changes the audio source, but keeps the current application in foreground.
            </description>
        </param>
        <param name="volume" type="Integer" mandatory="false" minvalue="0" maxvalue="100">
            <description>Reflects the volume of audio, from 0%-100%.</description>
        </param>
        <param name="equalizerSettings" type="EqualizerSettings" minsize="1" maxsize="100" mandatory="false" array="true">
            <description>Defines the list of supported channels (band) and their current/desired settings on HMI</description>
        </param>
    </struct>

    <struct name="AudioControlCapabilities" since="5.0">
        <param name="moduleName" type="String" maxlength="100" mandatory="true">
            <description>
                The short friendly name of the light control module.
                It should not be used to identify a module by mobile application.
            </description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="sourceAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of audio source. </description>
        </param>
        <param name="keepContextAvailable" type="Boolean" mandatory="false">
            <description>Availability of the keepContext parameter. </description>
        </param>
        <param name="volumeAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of audio volume.</description>
        </param>
        <param name="equalizerAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of Equalizer Settings.</description>
        </param>
        <param name="equalizerMaxChannelId" type="Integer" minvalue="1" maxvalue="100" mandatory="false">
            <description>Must be included if equalizerAvailable=true, and assume all IDs starting from 1 to this value are valid</description>
        </param>
    </struct>

    <enum name="LightName" since="5.0">
        <!-- Common Single Light 0~500 -->
        <element name="FRONT_LEFT_HIGH_BEAM" value="0"/>
        <element name="FRONT_RIGHT_HIGH_BEAM" value="1"/>
        <element name="FRONT_LEFT_LOW_BEAM" value="2"/>
        <element name="FRONT_RIGHT_LOW_BEAM" value="3"/>
        <element name="FRONT_LEFT_PARKING_LIGHT" value="4"/>
        <element name="FRONT_RIGHT_PARKING_LIGHT" value="5"/>
        <element name="FRONT_LEFT_FOG_LIGHT" value="6"/>
        <element name="FRONT_RIGHT_FOG_LIGHT" value="7"/>
        <element name="FRONT_LEFT_DAYTIME_RUNNING_LIGHT" value="8"/>
        <element name="FRONT_RIGHT_DAYTIME_RUNNING_LIGHT" value="9"/>
        <element name="FRONT_LEFT_TURN_LIGHT" value="10"/>
        <element name="FRONT_RIGHT_TURN_LIGHT" value="11"/>
        <element name="REAR_LEFT_FOG_LIGHT" value="12"/>
        <element name="REAR_RIGHT_FOG_LIGHT" value="13"/>
        <element name="REAR_LEFT_TAIL_LIGHT" value="14"/>
        <element name="REAR_RIGHT_TAIL_LIGHT" value="15"/>
        <element name="REAR_LEFT_BRAKE_LIGHT" value="16"/>
        <element name="REAR_RIGHT_BRAKE_LIGHT" value="17"/>
        <element name="REAR_LEFT_TURN_LIGHT" value="18"/>
        <element name="REAR_RIGHT_TURN_LIGHT" value="19"/>
        <element name="REAR_REGISTRATION_PLATE_LIGHT" value="20"/>

        <!-- Exterior Lights by common function groups 501~800 -->
        <element name="HIGH_BEAMS" value="501">
            <description>Include all high beam lights: front_left and front_right.</description>
        </element>
        <element name="LOW_BEAMS" value="502">
            <description>Include all low beam lights: front_left and front_right.</description>
        </element>
        <element name="FOG_LIGHTS" value="503">
            <description>Include all fog lights: front_left, front_right, rear_left and rear_right.</description>
        </element>
        <element name="RUNNING_LIGHTS" value="504">
            <description>Include all daytime running lights: front_left and front_right.</description>
        </element>
        <element name="PARKING_LIGHTS" value="505">
            <description>Include all parking lights: front_left and front_right.</description>
        </element>
        <element name="BRAKE_LIGHTS" value="506">
            <description>Include all brake lights: rear_left and rear_right.</description>
        </element>
        <element name="REAR_REVERSING_LIGHTS" value="507"/>
        <element name="SIDE_MARKER_LIGHTS" value="508"/>
        <element name="LEFT_TURN_LIGHTS" value="509">
            <description>Include all left turn signal lights: front_left, rear_left, left_side and mirror_mounted.</description>
        </element>
        <element name="RIGHT_TURN_LIGHTS" value="510">
            <description>Include all right turn signal lights: front_right, rear_right, right_side and mirror_mounted.</description>
        </element>
        <element name="HAZARD_LIGHTS" value="511">
            <description>Include all hazard lights: front_left, front_right, rear_left and rear_right.</description>
        </element>
        <element name="REAR_CARGO_LIGHTS" value="512">
            <description>Cargo lamps illuminate the cargo area.</description>
        </element>
        <element name="REAR_TRUCK_BED_LIGHTS" value="513">
            <description>Truck bed lamps light up the bed of the truck.</description>
        </element>
        <element name="REAR_TRAILER_LIGHTS" value="514">
            <description>Trailer lights are lamps mounted on a trailer hitch.</description>
        </element>
        <element name="LEFT_SPOT_LIGHTS" value="515">
            <description>It is the spotlights mounted on the left side of a vehicle.</description>
        </element>
        <element name="RIGHT_SPOT_LIGHTS" value="516">
            <description>It is the spotlights mounted on the right side of a vehicle.</description>
        </element>
        <element name="LEFT_PUDDLE_LIGHTS" value="517">
            <description>Puddle lamps illuminate the ground beside the door as the customer is opening or approaching the door.</description>
        </element>
        <element name="RIGHT_PUDDLE_LIGHTS" value="518">
            <description>Puddle lamps illuminate the ground beside the door as the customer is opening or approaching the door.</description>
        </element>

        <!-- Interior Lights by common function groups 801~900 -->
        <element name="AMBIENT_LIGHTS" value="801"/>
        <element name="OVERHEAD_LIGHTS" value="802"/>
        <element name="READING_LIGHTS" value="803"/>
        <element name="TRUNK_LIGHTS" value="804"/>

        <!-- Lights by location 901~1000-->
        <element name="EXTERIOR_FRONT_LIGHTS" value="901">
            <description>Include exterior lights located in front of the vehicle. For example, fog lights and low beams.</description>
        </element>
        <element name="EXTERIOR_REAR_LIGHTS" value="902">
            <description>Include exterior lights located at the back of the vehicle. For example, license plate lights, reverse lights, cargo lights, bed lights and trailer assist lights.</description>
        </element>
        <element name="EXTERIOR_LEFT_LIGHTS" value="903">
            <description>Include exterior lights located at the left side of the vehicle. For example, left puddle lights and spot lights.</description>
        </element>
        <element name="EXTERIOR_RIGHT_LIGHTS" value="904">
            <description>Include exterior lights located at the right side of the vehicle. For example, right puddle lights and spot lights.</description>
        </element>
        <element name="EXTERIOR_ALL_LIGHTS" value="905">
            <description> Include all exterior lights around the vehicle.</description>
        </element>
    </enum>

    <enum name="LightStatus" since="5.0">
        <element name="ON"/>
        <element name="OFF"/>
        <element name="RAMP_UP"/>
        <element name="RAMP_DOWN"/>
        <element name="UNKNOWN"/>
        <element name="INVALID"/>
    </enum>

    <struct name="LightCapabilities" since="5.0">
        <param name="name" type="LightName" mandatory="true" />
        <param name="statusAvailable" type="Boolean" mandatory="false">
          <description>
            Indicates if the status (ON/OFF) can be set remotely. App shall not use read-only values (RAMP_UP/RAMP_DOWN/UNKNOWN/INVALID) in a setInteriorVehicleData request.
          </description>
        </param>
        <param name="densityAvailable" type="Boolean" mandatory="false">
            <description>
                Indicates if the light's density can be set remotely (similar to a dimmer).
            </description>
        </param>
        <param name="rgbColorSpaceAvailable" type="Boolean" mandatory="false">
            <description>
                Indicates if the light's color can be set remotely by using the sRGB color space.
            </description>
        </param>
    </struct>

    <struct name="LightControlCapabilities" since="5.0">
        <param name="moduleName" type="String" maxlength="100" mandatory="true">
            <description>
                The short friendly name of the light control module.
                It should not be used to identify a module by mobile application.
            </description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="supportedLights" type="LightCapabilities" minsize="1" maxsize="100" array="true" mandatory="true">
            <description> An array of available LightCapabilities that are controllable. </description>
        </param>
    </struct>

    <struct name="LightState" since="5.0">
        <param name="id" type="LightName" mandatory="true">
            <description>The name of a light or a group of lights. </description>
        </param>
        <param name="status" type="LightStatus" mandatory="true"/>
        <param name="density" type="Float" minvalue="0" maxvalue="1" mandatory="false" />
        <param name="color" type="RGBColor" mandatory="false" />
    </struct>

    <struct name="LightControlData" since="5.0">
        <param name="lightState" type="LightState" mandatory="true" minsize="1" maxsize="100" array="true">
            <description>An array of LightNames and their current or desired status. No change to the status of the LightNames that are not listed in the array.</description>
        </param>
    </struct>

    <enum name="DisplayMode" since="5.0">
        <element name="DAY"/>
        <element name="NIGHT"/>
        <element name="AUTO"/>
    </enum>

    <enum name="DistanceUnit" since="5.0">
        <element name="MILES"/>
        <element name="KILOMETERS"/>
    </enum>

    <struct name="HMISettingsControlData" since="5.0">
        <description>Corresponds to "HMI_SETTINGS" ModuleType</description>
        <param name="displayMode" type="DisplayMode" mandatory="false"></param>
        <param name="temperatureUnit" type="TemperatureUnit" mandatory="false"></param>
        <param name="distanceUnit" type="DistanceUnit" mandatory="false"></param>
    </struct>

    <struct name="HMISettingsControlCapabilities" since="5.0">
        <param name="moduleName" type="String" maxlength="100" mandatory="true">
            <description>
              The short friendly name of the hmi setting module.
              It should not be used to identify a module by mobile application.
            </description>
        </param>
        <param name="moduleInfo" type="ModuleInfo" mandatory="false" since="6.0">
            <description>Information about a RC module, including its id. </description>
        </param>
        <param name="distanceUnitAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of distance unit. </description>
        </param>
        <param name="temperatureUnitAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of temperature unit. </description>
        </param>
        <param name="displayModeUnitAvailable" type="Boolean" mandatory="false">
            <description>Availability of the control of HMI display mode. </description>
        </param>
    </struct>

    <struct name="ModuleData" since="4.5">
        <description>The moduleType indicates which type of data should be changed and identifies which data object exists in this struct. For example, if the moduleType is CLIMATE then a "climateControlData" should exist</description>
        <param name="moduleType" type="ModuleType" mandatory="true">
        </param>
        <param name="moduleId" type="String" maxlength="100" mandatory="false" since="6.0">
            <description>Id of a module, published by System Capability. </description>
        </param>
        <param name="radioControlData" type="RadioControlData" mandatory="false">
        </param>
        <param name="climateControlData" type="ClimateControlData" mandatory="false">
        </param>
        <param name="seatControlData" type="SeatControlData" mandatory="false" since="5.0">
        </param>
        <param name="audioControlData" type="AudioControlData" mandatory="false" since="5.0">
        </param>
        <param name="lightControlData" type="LightControlData" mandatory="false" since="5.0">
        </param>
        <param name="hmiSettingsControlData" type="HMISettingsControlData" mandatory="false" since="5.0">
        </param>
    </struct>

    <struct name="RemoteControlCapabilities" since="4.5">
        <param name="climateControlCapabilities" type="ClimateControlCapabilities" mandatory="false" minsize="1" maxsize="100" array="true">
            <description>If included, the platform supports RC climate controls. For this baseline version, maxsize=1. i.e. only one climate control module is supported.</description>
        </param>
        <param name="radioControlCapabilities" type="RadioControlCapabilities" mandatory="false" minsize="1" maxsize="100" array="true">
            <description>If included, the platform supports RC radio controls.For this baseline version, maxsize=1. i.e. only one radio control module is supported.</description>
        </param>
        <param name="buttonCapabilities" type="ButtonCapabilities"  mandatory="false" minsize="1" maxsize="100" array="true">
            <description>If included, the platform supports RC button controls with the included button names.</description>
        </param>
        <param name="audioControlCapabilities" type="AudioControlCapabilities" mandatory="false" minsize="1" maxsize="100" array="true" since="5.0">
            <description>If included, the platform supports audio controls.</description>
        </param>
        <param name="hmiSettingsControlCapabilities" type="HMISettingsControlCapabilities" mandatory="false" since="5.0">
            <description>If included, the platform supports hmi setting controls.</description>
        </param>
        <param name="lightControlCapabilities" type="LightControlCapabilities" mandatory="false" since="5.0">
            <description>If included, the platform supports light controls.</description>
        </param>
        <param name="seatControlCapabilities" type="SeatControlCapabilities" mandatory="false" minsize="1" maxsize="100" array="true" since="5.0">
            <description>If included, the platform supports seat controls.</description>
        </param>
    </struct>
    
    <!-- End of RC -->
    
    <enum name="MetadataType" since="4.5">
        <element name="mediaTitle">
            <description>The data in this field contains the title of the currently playing audio track.</description>
        </element>
        <element name="mediaArtist">
            <description>The data in this field contains the artist or creator of the currently playing audio track.</description>
        </element>
        <element name="mediaAlbum">
            <description>The data in this field contains the album title of the currently playing audio track.</description>
        </element>
        <element name="mediaYear">
            <description>The data in this field contains the creation year of the currently playing audio track.</description>
        </element>
        <element name="mediaGenre">
            <description>The data in this field contains the genre of the currently playing audio track.</description>
        </element>
        <element name="mediaStation">
            <description>The data in this field contains the name of the current source for the media.</description>
        </element>
        <element name="rating">
            <description>The data in this field is a rating.</description>
        </element>
        <element name="currentTemperature">
            <description>The data in this field is the current temperature.</description>
        </element>
        <element name="maximumTemperature">
            <description>The data in this field is the maximum temperature for the day.</description>
        </element>
        <element name="minimumTemperature">
            <description>The data in this field is the minimum temperature for the day.</description>
        </element>
        <element name="weatherTerm">
            <description>The data in this field describes the current weather (ex. cloudy, clear, etc.).</description>
        </element>
        <element name="humidity">
            <description>The data in this field describes the current humidity value.</description>
        </element>
    </enum>

    <struct name="MetadataTags" since="4.5">
        <param name="mainField1" type="MetadataType" minsize="0" maxsize="5" array="true" mandatory="false">
            <description>The type of data contained in the "mainField1" text field.</description>
        </param>
        <param name="mainField2" type="MetadataType" minsize="0" maxsize="5" array="true" mandatory="false">
            <description>The type of data contained in the "mainField2" text field.</description>
        </param>
        <param name="mainField3" type="MetadataType" minsize="0" maxsize="5" array="true" mandatory="false">
            <description>The type of data contained in the "mainField3" text field.</description>
        </param>
        <param name="mainField4" type="MetadataType" minsize="0" maxsize="5" array="true" mandatory="false">
            <description>The type of data contained in the "mainField4" text field.</description>
        </param>
    </struct>
    
    <struct name="Rectangle" since="4.5">
        <param name="x" type="Float" mandatory="true">
            <description>The upper left X-coordinate of the rectangle</description>
        </param>
        <param name="y" type="Float" mandatory="true">
            <description>The upper left Y-coordinate of the rectangle</description>
        </param>
        <param name="width" type="Float" mandatory="true">
            <description>The width of the rectangle</description>
        </param>
        <param name="height" type="Float" mandatory="true">
            <description>The height of the rectangle</description>
        </param>
    </struct>

    <struct name="HapticRect" since="4.5">
        <description>Defines haptic data for each user control object for video streaming application</description>
        <param name="id" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>A user control spatial identifier</description>
        </param>
        <param name="rect" type="Rectangle" mandatory="true">
            <description>The position of the haptic rectangle to be highlighted. The center of this rectangle will be "touched" when a press occurs.</description>
        </param>
    </struct>

    <!-- App Services -->

    <enum name="AppServiceType" platform="documentation" since="5.1">
        <element name="MEDIA"/>
        <element name="WEATHER"/>
        <element name="NAVIGATION"/>
    </enum>

    <struct name="MediaServiceManifest" since="5.1">
    </struct>

    <enum name="MediaType" since="5.1">
        <element name="MUSIC"/>
        <element name="PODCAST"/>
        <element name="AUDIOBOOK"/>
        <element name="OTHER"/>
    </enum>

    <struct name="MediaServiceData" since="5.1">
        <description>This data is related to what a media service should provide</description>

        <param name="mediaType" type="MediaType" mandatory="false">
            <description>The type of the currently playing or paused track.</description>
        </param>

        <param name="mediaTitle" type="String" mandatory="false">
            <description>
                Music: The name of the current track
                Podcast: The name of the current episode
                Audiobook: The name of the current chapter
            </description>
        </param>

        <param name="mediaArtist" type="String" mandatory="false">
            <description>
                Music: The name of the current album artist
                Podcast: The provider of the podcast (hosts, network, company)
                Audiobook: The book author's name
            </description>
        </param>

        <param name="mediaAlbum" type="String" mandatory="false">
            <description>
                Music: The name of the current album
                Podcast: The name of the current podcast show
                Audiobook: The name of the current book
            </description>
        </param>

        <param name="playlistName" type="String" mandatory="false">
            <description>
                Music: The name of the playlist or radio station, if the user is playing from a playlist, otherwise, Null
                Podcast: The name of the playlist, if the user is playing from a playlist, otherwise, Null
                Audiobook: Likely not applicable, possibly a collection or "playlist" of books
            </description>
        </param>

        <param name="isExplicit" type="Boolean" mandatory="false">
            <description> Whether or not the content currently playing (e.g. the track, episode, or book) contains explicit content</description>
        </param>

        <param name="trackPlaybackProgress" type="Integer" mandatory="false">
            <description>
                Music: The current progress of the track in seconds
                Podcast: The current progress of the episode in seconds
                Audiobook: The current progress of the current segment (e.g. the chapter) in seconds
            </description>
        </param>

        <param name="trackPlaybackDuration" type="Integer" mandatory="false">
            <description>
                Music: The total duration of the track in seconds
                Podcast: The total duration of the episode in seconds
                Audiobook: The total duration of the current segment (e.g. the chapter) in seconds
            </description>
        </param>

        <param name="queuePlaybackProgress" type="Integer" mandatory="false">
            <description>
                Music: The current progress of the playback queue in seconds
                Podcast: The current progress of the playback queue in seconds
                Audiobook: The current progress of the playback queue (e.g. the book) in seconds
            </description>
        </param>

        <param name="queuePlaybackDuration" type="Integer" mandatory="false">
            <description>
                Music: The total duration of the playback queue in seconds
                Podcast: The total duration of the playback queue in seconds
                Audiobook: The total duration of the playback queue (e.g. the book) in seconds
            </description>
        </param>

        <param name="queueCurrentTrackNumber" type="Integer" mandatory="false">
            <description>
                Music: The current number (1 based) of the track in the playback queue
                Podcast: The current number (1 based) of the episode in the playback queue
                Audiobook: The current number (1 based) of the episode in the playback queue (e.g. the chapter number in the book)
            </description>
        </param>

        <param name="queueTotalTrackCount" type="Integer" mandatory="false">
            <description>
                Music: The total number of tracks in the playback queue
                Podcast: The total number of episodes in the playback queue
                Audiobook: The total number of sections in the playback queue (e.g. the number of chapters in the book)
            </description>
        </param>
        <param name="mediaImage" type="Image" mandatory="false" since="6.0">
          <description>
              Music: The album art of the current track
              Podcast: The podcast or chapter artwork of the current podcast episode
              Audiobook: The book or chapter artwork of the current audiobook
          </description>
        </param>
    </struct>

    <struct name="WeatherServiceManifest" since="5.1">
        <param name="currentForecastSupported" type="Boolean" mandatory="false"/>
        <param name="maxMultidayForecastAmount" type="Integer" mandatory="false"/>
        <param name="maxHourlyForecastAmount" type="Integer" mandatory="false"/>
        <param name="maxMinutelyForecastAmount" type="Integer" mandatory="false"/>
        <param name="weatherForLocationSupported" type="Boolean" mandatory="false"/>
    </struct>

    <struct name="WeatherAlert" since="5.1">
        <param name="title" type="String" mandatory="false"/>
        <param name="summary" type="String" mandatory="false"/>
        <param name="expires" type="DateTime" mandatory="false"/>
        <param name="regions" type="String" array="true" minsize="1" maxsize="99" mandatory="false"/>
        <param name="severity" type="String" mandatory="false"/>
        <param name="timeIssued" type="DateTime" mandatory="false"/>
    </struct>

    <struct name="WeatherData" since="5.1">
        <param name="currentTemperature" type="Temperature" mandatory="false"/>
        <param name="temperatureHigh" type="Temperature" mandatory="false"/>
        <param name="temperatureLow" type="Temperature" mandatory="false"/>
        <param name="apparentTemperature" type="Temperature" mandatory="false"/>
        <param name="apparentTemperatureHigh" type="Temperature" mandatory="false"/>
        <param name="apparentTemperatureLow" type="Temperature" mandatory="false"/>
    
        <param name="weatherSummary" type="String" mandatory="false"/>
        <param name="time" type="DateTime" mandatory="false"/>
        <param name="humidity" type="Float" minvalue="0" maxvalue="1" mandatory="false">
            <description> 0 to 1, percentage humidity </description>
        </param>
        <param name="cloudCover" type="Float" minvalue="0" maxvalue="1" mandatory="false">
            <description> 0 to 1, percentage cloud cover </description>
        </param>
        <param name="moonPhase" type="Float" minvalue="0" maxvalue="1" mandatory="false">
            <description> 0 to 1, percentage of the moon seen, e.g. 0 = no moon, 0.25 = quarter moon </description>
        </param>

        <param name="windBearing" type="Integer" mandatory="false">
            <description> In degrees, true north at 0 degrees </description>
        </param>
        <param name="windGust" type="Float" mandatory="false">
            <description> km/hr </description>
        </param>
        <param name="windSpeed" type="Float" mandatory="false">
            <description> km/hr </description>
        </param>

        <param name="nearestStormBearing" type="Integer" mandatory="false">
            <description> In degrees, true north at 0 degrees </description>
        </param>
        <param name="nearestStormDistance" type="Integer" mandatory="false">
            <description> In km </description>
        </param>
        <param name="precipAccumulation" type="Float" mandatory="false">
            <description> cm </description>
        </param>
        <param name="precipIntensity" type="Float" mandatory="false">
            <description> cm of water per hour </description>
        </param>
        <param name="precipProbability" type="Float" minvalue="0" maxvalue="1" mandatory="false">
            <description> 0 to 1, percentage chance </description>
        </param>
        <param name="precipType" type="String" mandatory="false">
            <description> e.g. "rain", "snow", "sleet", "hail" </description>
        </param>
        <param name="visibility" type="Float" mandatory="false">
            <description> In km </description>
        </param>

        <param name="weatherIcon" type="Image" mandatory="false"/>
    </struct>

    <struct name="WeatherServiceData" since="5.1">
        <description> This data is related to what a weather service would provide</description>
        <param name="location" type="LocationDetails" mandatory="true"/>
        <param name="currentForecast" type="WeatherData" mandatory="false"/>
        <param name="minuteForecast" type="WeatherData" array="true" minsize="15" maxsize="60" mandatory="false"/>
        <param name="hourlyForecast" type="WeatherData" array="true" minsize="1" maxsize="96" mandatory="false"/>
        <param name="multidayForecast" type="WeatherData" array="true" minsize="1" maxsize="30" mandatory="false"/>
        <param name="alerts" type="WeatherAlert" array="true" minsize="1" maxsize="10" mandatory="false">
            <description> This array should be ordered with the first object being the current day</description>
        </param>
    </struct>

    <struct name="NavigationServiceManifest" since="5.1">
        <param name="acceptsWayPoints" type="Boolean" mandatory="false">
            <description> Informs the subscriber if this service can actually accept way points. </description>
        </param>
    </struct>

    <enum name="NavigationAction" since="5.1">
        <element name="TURN">
            <description> Using this action plus a supplied direction can give the type of turn. </description>
        </element>
        <element name="EXIT"/>
        <element name="STAY"/>    
        <element name="MERGE"/>
        <element name="FERRY"/>
        <element name="CAR_SHUTTLE_TRAIN"/>
        <element name="WAYPOINT"/>
    </enum>

    <enum name="NavigationJunction" since="5.1">
        <element name="REGULAR">
            <description> A junction that represents a standard intersection with a single road crossing another. </description>
        </element>
        <element name="BIFURCATION">
            <description> A junction where the road splits off into two paths; a fork in the road. </description>
        </element>
        <element name="MULTI_CARRIAGEWAY">
            <description> A junction that has multiple intersections and paths. </description>
        </element>
        <element name="ROUNDABOUT">
            <description> A junction where traffic moves in a single direction around a central, non-traversable point to reach one of the connecting roads. </description>
        </element>
        <element name="TRAVERSABLE_ROUNDABOUT">
            <description> Similar to a roundabout, however the center of the roundabout is fully traversable. Also known as a mini-roundabout. </description>
        </element>
        <element name="JUGHANDLE">
            <description> A junction where lefts diverge to the right, then curve to the left, converting a left turn to a crossing maneuver. </description>
        </element>
        <element name="ALL_WAY_YIELD">
            <description> Multiple way intersection that allows traffic to flow based on priority; most commonly right of way and first in, first out. </description>
        </element>
        <element name="TURN_AROUND">
            <description> A junction designated for traffic turn arounds. </description>
        </element>
    </enum>

    <enum name="Direction" since="5.1">
        <element name="LEFT"/>
        <element name="RIGHT"/>
    </enum>

    <struct name="NavigationInstruction" since="5.1">
        <param name="locationDetails" type="LocationDetails" mandatory="true"/>

        <param name="action" type="NavigationAction" mandatory="true"/>

        <param name="eta" type="DateTime" mandatory="false"/>

        <param name="bearing" type="Integer" minvalue="0" maxvalue="359" mandatory="false">
            <description> The angle at which this instruction takes place. For example, 0 would mean straight, less than 45 is bearing right, greater than 135 is sharp right, between 45 and 135 is a regular right, and 180 is a U-Turn, etc. </description>
        </param>

        <param name="junctionType" type="NavigationJunction" mandatory="false"/>

        <param name="drivingSide" type="Direction" mandatory="false">
            <description> Used to infer which side of the road this instruction takes place. For a U-Turn (action=TURN, bearing=180) this will determine which direction the turn should take place. </description>
        </param>

        <param name="details" type="String" mandatory="false">
            <description> This is a string representation of this instruction, used to display instructions to the users. This is not intended to be read aloud to the users, see the param prompt in NavigationServiceData for that. </description>
        </param>

        <param name="image" type="Image" mandatory="false">
            <description> An image representation of this instruction. </description>
        </param>
    </struct>

    <struct name="NavigationServiceData" since="5.1">
        <description> This data is related to what a navigation service would provide.</description>

        <param name="timeStamp" type="DateTime" mandatory="true">
            <description> This is the timestamp of when the data was generated. This is to ensure any time or distance given in the data can accurately be adjusted if necessary. </description>
        </param>

        <param name="origin" type="LocationDetails" mandatory="false"/>
        <param name="destination" type="LocationDetails" mandatory="false"/>
        <param name="destinationETA" type="DateTime" mandatory="false"/>

        <param name="instructions" type="NavigationInstruction" array="true" mandatory="false">
            <description> This array should be ordered with all remaining instructions. The start of this array should always contain the next instruction.</description>
        </param>

        <param name="nextInstructionETA" type="DateTime" mandatory="false"/>
        <param name="nextInstructionDistance" type="Float" mandatory="false">
            <description>The distance to this instruction from current location. This should only be updated ever .1 unit of distance. For more accuracy the consumer can use the GPS location of itself and the next instruction. </description>
        </param>
        <param name="nextInstructionDistanceScale" type="Float" mandatory="false">
            <description>Distance till next maneuver (starting from) from previous maneuver.</description>
        </param>

        <param name="prompt" type="String" mandatory="false">
            <description>This is a prompt message that should be conveyed to the user through either display or voice (TTS). This param will change often as it should represent the following: approaching instruction, post instruction, alerts that affect the current navigation session, etc.</description>
        </param>
    </struct>

    <struct name="AppServiceManifest" since="5.1">
        <description> This manifest contains all the information necessary for the service to be published, activated, and consumers able to interact with it </description>

        <param name="serviceName" type="String" mandatory="false">
            <description> Unique name of this service </description>
        </param>

        <param name="serviceType" type="String" mandatory="true">
            <description> The type of service that is to be offered by this app. See AppServiceType for known enum equivalent types. Parameter is a string to allow for new service types to be used by apps on older versions of SDL Core. </description>
        </param>

        <param name="serviceIcon" type="Image" mandatory="false">
            <description> The icon to be associated with this service. Most likely the same as the appIcon.</description>
        </param>

        <param name="allowAppConsumers" type="Boolean" mandatory="false" defvalue="false">
            <description> If true, app service consumers beyond the IVI system will be able to access this service. If false, only the IVI system will be able consume the service. If not provided, it is assumed to be false. </description>
        </param>

        <param name="rpcSpecVersion" type="SyncMsgVersion" mandatory="false">
            <description> This is the max RPC Spec version the app service understands. This is important during the RPC passthrough functionality. If not included, it is assumed the max version of the module is acceptable. </description>
        </param>

        <param name="handledRPCs" type="Integer" array="true" mandatory="false">
            <description> This field contains the Function IDs for the RPCs that this service intends to handle correctly. This means the service will provide meaningful responses. </description>
        </param>

        <param name="mediaServiceManifest" type="MediaServiceManifest" mandatory="false"/>
        <param name="weatherServiceManifest" type="WeatherServiceManifest" mandatory="false"/>
        <param name="navigationServiceManifest" type="NavigationServiceManifest" mandatory="false"/>
    </struct>

    <struct name="AppServiceRecord" since="5.1">
        <description> This is the record of an app service publisher that the module has. It should contain the most up to date information including the service's active state</description>

        <param name="serviceID" type="String" mandatory="true">
            <description> A unique ID tied to this specific service record. The ID is supplied by the module that services publish themselves. </description>
        </param>

        <param name="serviceManifest" type="AppServiceManifest" mandatory="true">
            <description> Manifest for the service that this record is for.</description>
        </param>

        <param name="servicePublished" type="Boolean" mandatory="true">
            <description> If true, the service is published and available. If false, the service has likely just been unpublished, and should be considered unavailable.</description>
        </param>

        <param name="serviceActive" type="Boolean" mandatory="true">
            <description> If true, the service is the active primary service of the supplied service type. It will receive all potential RPCs that are passed through to that service type. If false, it is not the primary service of the supplied type. See servicePublished for its availability. </description>
        </param>
    </struct>

    <struct name="AppServiceData" since="5.1">
        <description> Contains all the current data of the app service. The serviceType will link to which of the service data objects are included in this object (e.g. if the service type is MEDIA, the mediaServiceData param should be included).</description>

        <param name="serviceType" type="String" mandatory="true">
            <description>The type of service that is to be offered by this app. See AppServiceType for known enum equivalent types. Parameter is a string to allow for new service types to be used by apps on older versions of SDL Core.</description>
        </param>
        <param name="serviceID" type="String" mandatory="true"/>

        <param name="mediaServiceData" type="MediaServiceData" mandatory="false"/>
        <param name="weatherServiceData" type="WeatherServiceData" mandatory="false"/>
        <param name="navigationServiceData" type="NavigationServiceData" mandatory="false"/>
    </struct>

    <enum name="ServiceUpdateReason" since="5.1">
        <element name="PUBLISHED">
            <description> The service has just been published with the module and once activated to the primary service of its type, it will be ready for possible consumption.</description>
        </element>
        <element name="REMOVED">
            <description> The service has just been unpublished with the module and is no longer accessible</description>
        </element>
        <element name="ACTIVATED">
            <description> The service is activated as the primary service of this type. All requests dealing with this service type will be handled by this service.</description>
        </element>
        <element name="DEACTIVATED">
            <description> The service has been deactivated as the primary service of its type</description>
        </element>
        <element name="MANIFEST_UPDATE">
            <description> The service has updated its manifest. This could imply updated capabilities</description>
        </element>
    </enum>

    <struct name="AppServiceCapability" since="5.1">
        <param name="updateReason" type="ServiceUpdateReason" mandatory="false">
            <description> Only included in OnSystemCapabilityUpdated. Update reason for service record.</description>
        </param>
        <param name="updatedAppServiceRecord" type="AppServiceRecord" mandatory="true">
            <description>Service record for a specific app service provider</description>
        </param>
    </struct>

    <struct name="AppServicesCapabilities" since="5.1">
        <description>Capabilities of app services including what service types are supported and the current state of services.</description>
        <param name="appServices" type="AppServiceCapability" array="true" mandatory="false">
            <description>An array of currently available services. If this is an update to the capability the affected services will include an update reason in that item</description>
        </param>
    </struct>

    <!-- End App Services -->
    
    <struct name="SystemCapability" since="4.5">
        <description>The systemCapabilityType identifies which data object exists in this struct. For example, if the SystemCapability Type is NAVIGATION then a "navigationCapability" should exist</description>
        <param name="systemCapabilityType" type="SystemCapabilityType" mandatory="true">
            <description>Used as a descriptor of what data to expect in this struct. The corresponding param to this enum should be included and the only other param included.</description>
        </param>
        <param name="navigationCapability" type="NavigationCapability" mandatory="false">
            <description>Describes extended capabilities for onboard navigation system </description>
        </param>
        <param name="phoneCapability" type="PhoneCapability" mandatory="false">
            <description>Describes extended capabilities of the module's phone feature</description>
        </param>
        <param name="videoStreamingCapability" type="VideoStreamingCapability" mandatory="false">
            <description>Describes extended capabilities of the module's phone feature</description>
        </param>
        <param name="remoteControlCapability" type="RemoteControlCapabilities" mandatory="false">
            <description>Describes extended capabilities of the module's phone feature</description>
        </param>
        <param name="appServicesCapabilities" type="AppServicesCapabilities" mandatory="false" since="5.1">
            <description>An array of currently available services. If this is an update to the capability the affected services will include an update reason in that item</description>
        </param>
        <param name="seatLocationCapability" type="SeatLocationCapability" mandatory="false" since="6.0">
            <description>Contains information about the locations of each seat</description>
        </param>
        <param name="displayCapabilities" type="DisplayCapability" array="true" minsize="1" maxsize="1000" mandatory="false" since="6.0"/>
    </struct>

    <!-- Requests/Responses -->
    
    <function name="RegisterAppInterface" functionID="RegisterAppInterfaceID" messagetype="request" since="1.0">
        <description>
            Establishes an interface with a mobile application.
            Before registerAppInterface no other commands will be accepted/executed.
        </description>
        
        <param name="syncMsgVersion" type="SyncMsgVersion" mandatory="true" since="1.0">
            <description>See SyncMsgVersion</description>
        </param>
        
        <param name="appName" type="String" maxlength="100" mandatory="true" since="1.0">
            <description>
                The mobile application name, e.g. "My SDL App".
                Needs to be unique over all applications from the same device.
                May not be empty.
                May not start with a new line character.
                May not interfere with any name or synonym of previously registered applications from the same device and any predefined blacklist of words (global commands)
                Additional applications with the same name from the same device will be rejected.
                Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.
            </description>
        </param>
        
        <param name="ttsName" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0">
            <description>
                TTS string for VR recognition of the mobile application name, e.g. "My S D L App".
                Meant to overcome any failing on speech engine in properly pronouncing / understanding app name.
                Needs to be unique over all applications from the same device.
                May not be empty.
                May not start with a new line character.
                Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.
            </description>
        </param>
        
        <param name="ngnMediaScreenAppName" type="String" maxlength="100" mandatory="false" since="1.0">
            <description>
                Provides an abbreviated version of the app name (if needed), that will be displayed on the NGN media screen.
                If not provided, the appName is used instead (and will be truncated if too long)
                Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.
            </description>
        </param>
        
        <param name="vrSynonyms" type="String" maxlength="40" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>
                Defines an additional voice recognition command.
                May not interfere with any app name of previously registered applications from the same device and any predefined blacklist of words (global commands)
                Only characters from char set [@TODO: Create char set (character/hex value) for each ACM and refer to] are supported.
            </description>
        </param>
        
        <param name="isMediaApplication" type="Boolean" mandatory="true" since="1.0">
            <description>
                Indicates if the application is a media or a non-media application.
                Only media applications will be able to stream audio to the module that is audible outside of the BT media source.
            </description>
        </param>
        <param name="languageDesired" type="Language" mandatory="true" since="1.0">
            <description>
                See Language
                Current app's expected VR+TTS language
                If there is a mismatch with the module, the app will be able to change this registration with changeRegistration prior to app being brought into focus.
            </description>
        </param>
        <param name="hmiDisplayLanguageDesired" type="Language" mandatory="true" since="2.0">
            <description>
                See Language
                Current app's expected display language
                If there is a mismatch with the module, the app will be able to change this registration with changeRegistration prior to app being brought into focus.
            </description>
        </param>
        
        <param name="appHMIType" type="AppHMIType" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0">
            <description>
                See AppHMIType
                List of all applicable app HMI types stating which HMI classifications to be given to the app.
            </description>
        </param>
        
        <param name="hashID" type="String" maxlength="100" mandatory="false" since="3.0">
            <description>
                ID used to uniquely identify current state of all app data that can persist through connection cycles (e.g. ignition cycles).
                This registered data (commands, submenus, choice sets, etc.) can be reestablished without needing to explicitly reregister each piece.
                If omitted, then the previous state of an app's commands, etc. will not be restored.
                When sending hashID, all RegisterAppInterface parameters should still be provided (e.g. ttsName, etc.).
            </description>
        </param>
        <param name="deviceInfo" type="DeviceInfo" mandatory="false" since="3.0">
            <description>
                See DeviceInfo.
            </description>
        </param>
        <param name="appID" type="String" maxlength="100" mandatory="true" since="2.0">
            <description>ID used to validate app with policy table entries</description>
        </param>
        <param name="fullAppID" type="String" maxlength="100" mandatory="false" since="5.0">
            <description>ID used to validate app with policy table entries</description>
        </param>
        <param name="appInfo" type="AppInfo" mandatory="false" since="2.0">
            <description>
                See AppInfo.
            </description>
        </param>
        <param name="dayColorScheme" type="TemplateColorScheme" mandatory="false" since="5.0"/>
        <param name="nightColorScheme" type="TemplateColorScheme" mandatory="false" since="5.0"/>
    </function>
    
    <function name="RegisterAppInterface" functionID="RegisterAppInterfaceID" messagetype="response" since="1.0">
        <description>The response to registerAppInterface</description>
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="GENERIC_ERROR"/>
            <element name="DUPLICATE_NAME"/>
            <element name="TOO_MANY_APPLICATIONS"/>
            <element name="APPLICATION_REGISTERED_ALREADY"/>
            <element name="UNSUPPORTED_VERSION"/>
            <element name="WRONG_LANGUAGE"/>
            <element name="DISALLOWED"/>
            <element name="WARNINGS"/>
            <element name="RESUME_FAILED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="syncMsgVersion" type="SyncMsgVersion" mandatory="false">
            <description>See SyncMsgVersion</description>
        </param>
        
        <param name="language" type="Language" mandatory="false">
            <description>The currently active VR+TTS language on the module. See "Language" for options.</description>
        </param>
        
        <param name="hmiDisplayLanguage" type="Language" mandatory="false" since="2.0">
            <description>The currently active display language on the module. See "Language" for options.</description>
        </param>

        <param name="displayCapabilities" type="DisplayCapabilities" mandatory="false" deprecated="true" since="6.0">
            <description>
                See DisplayCapabilities. This parameter is deprecated and replaced by SystemCapability using DISPLAYS.
            </description>
            <history>
                <param name="displayCapabilities" type="DisplayCapabilities" mandatory="false" since="2.0" until="6.0"/>
            </history>
        </param>

        <param name="buttonCapabilities" type="ButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" deprecated="true" since="6.0">
            <description>
                See ButtonCapabilities. This parameter is deprecated and replaced by  SystemCapability using DISPLAYS.
            </description>
            <history>
                <param name="buttonCapabilities" type="ButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0" until="6.0"/>
            </history>
        </param>

        <param name="softButtonCapabilities" type="SoftButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" deprecated="true" since="6.0">
            <description>
                If returned, the platform supports on-screen SoftButtons; see SoftButtonCapabilities.
                This parameter is deprecated and replaced by  SystemCapability using DISPLAYS.
            </description>
            <history>
                <param name="softButtonCapabilities" type="SoftButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0" until="6.0"/>
            </history>
        </param>

        <param name="presetBankCapabilities" type="PresetBankCapabilities" mandatory="false" deprecated="true" since="6.0">
            <description>
                If returned, the platform supports custom on-screen Presets; see PresetBankCapabilities.
                This parameter is deprecated and replaced by SystemCapability using DISPLAYS.
            </description>
            <history>
                <param name="presetBankCapabilities" type="PresetBankCapabilities" mandatory="false" since="2.0" until="6.0"/>
            </history>
        </param>

        <param name="hmiZoneCapabilities" type="HmiZoneCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>See HmiZoneCapabilities</description>
        </param>
        <param name="speechCapabilities" type="SpeechCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>See SpeechCapabilities</description>
        </param>
        
        <param name="prerecordedSpeech" type="PrerecordedSpeech" minsize="1" maxsize="100" array="true" mandatory="false" since="3.0">
            <description>See PrerecordedSpeech</description>
        </param>
        
        <param name="vrCapabilities" type="VrCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>See VrCapabilities</description>
        </param>
        
        <param name="audioPassThruCapabilities" type="AudioPassThruCapabilities" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0">
            <description>See AudioPassThruCapability</description>
        </param>
        
        <param name="pcmStreamCapabilities" type="AudioPassThruCapabilities" array="false" mandatory="false" since="4.1">
            <description>See AudioPassThruCapability</description>
        </param>
        
        <param name="vehicleType" type="VehicleType" mandatory="false" since="2.0">
            <description>Specifies the vehicle's type. See VehicleType.</description>
        </param>
        
        <param name="supportedDiagModes" type="Integer" minvalue="0" maxvalue="255" array="true" minsize="1" maxsize="100" mandatory="false" since="3.0">
            <description>
                Specifies the white-list of supported diagnostic modes (0x00-0xFF) capable for DiagnosticMessage requests.
                If a mode outside this list is requested, it will be rejected.
            </description>
        </param>
        
        <param name="hmiCapabilities" type="HMICapabilities" mandatory="false" since="3.0">
            <description>Specifies the HMI's capabilities. See HMICapabilities.</description>
        </param>
        
        <param name="sdlVersion" type="String" maxlength="100" mandatory="false" platform="documentation" since="3.0">
            <description>The SmartDeviceLink version.</description>
        </param>
        
        <param name="systemSoftwareVersion" type="String" maxlength="100" mandatory="false" platform="documentation" since="3.0">
            <description>The software version of the system that implements the SmartDeviceLink core.</description>
        </param>

        <param name="iconResumed" type="Boolean" mandatory="false" since="5.0">
            <description>
                Existence of apps icon at system. If true, apps icon
                was resumed at system. If false, apps icon is not resumed at system
            </description>
        </param>
    </function>
    
    <function name="UnregisterAppInterface" functionID="UnregisterAppInterfaceID" messagetype="request" since="1.0">
        <description>
            Closes an interface from a mobile application.
            After unregisterAppInterface, no commands other than registerAppInterface will be accepted/executed.
            Will fail, if no registerAppInterface was completed successfully before.
        </description>
    </function>
    
    <function name="UnregisterAppInterface" functionID="UnregisterAppInterfaceID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="CreateWindow" functionID="CreateWindowID" messagetype="request" since="6.0">
        <description>
          Create a new window on the display with the specified window type.
        </description>
        <param name="windowID" type="Integer" mandatory="true">
            <description>
                A unique ID to identify the window. The value of '0' will always be the default main window on the main display and should not be used in this context as it will already be created for the app. See PredefinedWindows enum. Creating a window with an ID that is already in use will be rejected with `INVALID_ID`.
            </description>
        </param>

        <param name="windowName" type="String" maxlength="100" mandatory="true">
            <description>
                The window name to be used by the HMI. The name of the pre-created default window will match the app name.
                Multiple apps can share the same window name except for the default main window.
                Creating a window with a name which is already in use by the app will result in `DUPLICATE_NAME`.
            </description>
        </param>

        <param name="type" type="WindowType" mandatory="true">
            <description>The type of the window to be created. Main window or widget.</description>
        </param>

        <param name="associatedServiceType" type="String" mandatory="false">
            <description>
              Allows an app to create a widget related to a specific service type.
              As an example if a `MEDIA` app becomes active, this app becomes audible and is allowed to play audio. Actions such as skip or play/pause will be
              directed to this active media app. In case of widgets, the system can provide a single "media" widget which will act as a placeholder for the active media app.

              It is only allowed to have one window per service type. This means that a media app can only have a single MEDIA widget. Still the app can create widgets omitting this parameter. Those widgets would be available as app specific widgets that are permanently included in the HMI.

              This parameter is related to widgets only. The default main window, which is pre-created during app registration, will be created based on the HMI types specified in the app registration request.
            </description>
        </param>
        <param name="duplicateUpdatesFromWindowID" type="Integer" mandatory="false">
            <description>
              Optional parameter. Specify whether the content sent to an existing window
              should be duplicated to the created window.
              If there isn't a window with the ID, the request will be rejected with `INVALID_DATA`.
            </description>
        </param>
    </function>

    <function name="CreateWindow" functionID="CreateWindowID" messagetype="response" since="6.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed.</description>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>

        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="INVALID_DATA"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
            <element name="DISALLOWED"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>
    </function>

    <function name="DeleteWindow" functionID="DeleteWindowID" messagetype="request" since="6.0">
        <description>
            Deletes previously created window of the SDL application.
        </description>
        <param name="windowID" type="Integer" mandatory="true">
            <description>
                A unique ID to identify the window. The value of '0' will always be the default main window on the main display and cannot be deleted.
                See PredefinedWindows enum.
            </description>
        </param>
    </function>

    <function name="DeleteWindow" functionID="DeleteWindowID" messagetype="response" since="6.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed.</description>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>

        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="INVALID_DATA"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
            <element name="DISALLOWED"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>
    </function>

    <function name="SetGlobalProperties" functionID="SetGlobalPropertiesID" messagetype="request" since="1.0">
        <description>Allows setting global properties.</description>
        <param name="userLocation" type="SeatLocation" mandatory="false" since="6.0">
            <description>Location of the user's seat. Default is driver's seat location if it is not set yet.</description>
        </param>
        <param name="helpPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>
                The help prompt.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="timeoutPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" since="1.0">
            <description>
                Help text for a wait timeout.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="vrHelpTitle" type="String" maxlength="500" mandatory="false" since="2.0">
            <description>
                VR Help Title text.
                If omitted on supported displays, the default module help title shall be used.
                If omitted and one or more vrHelp items are provided, the request will be rejected.
            </description>
        </param>
        
        <param name="vrHelp" type="VrHelpItem" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0">
            <description>
                VR Help Items.
                If omitted on supported displays, the default SmartDeviceLink VR help / What Can I Say? screen shall be used.
                If the list of VR Help Items contains nonsequential positions (e.g. [1,2,4]), the RPC shall be rejected.
                If omitted and a vrHelpTitle is provided, the request will be rejected.
            </description>
        </param>
        <param name="menuTitle" maxlength="500" type="String" mandatory="false" since="3.0">
            <description>Optional text to label an app menu button (for certain touchscreen platforms).</description>
        </param>
        
        <param name="menuIcon" type="Image" mandatory="false" since="3.0">
            <description>Optional icon to draw on an app menu button (for certain touchscreen platforms).</description>
        </param>
        
        <param name="keyboardProperties" type="KeyboardProperties" mandatory="false" since="3.0">
            <description>On-screen keyboard configuration (if available).</description>
        </param>

        <param name="menuLayout" type="MenuLayout" mandatory="false" since="6.0">
            <description>Sets the layout of the main menu screen. If this is sent while a menu is already on-screen, the head unit will change the display to the new layout type.</description>
        </param>
    </function>
    
    <function name="SetGlobalProperties" functionID="SetGlobalPropertiesID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="WARNINGS"/>
            <element name="DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="ResetGlobalProperties" functionID="ResetGlobalPropertiesID" messagetype="request" since="1.0">
        <description>Allows resetting global properties.</description>
        
        <param name="properties" type="GlobalProperty" minsize="1" maxsize="100" array="true"  mandatory="true">
            <description>Contains the names of all global properties (like timeoutPrompt) that should be unset. Resetting means, that they have the same value as at start up (default)</description>
        </param>
    </function>
    
    <function name="ResetGlobalProperties" functionID="ResetGlobalPropertiesID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="AddCommand" functionID="AddCommandID" messagetype="request" since="1.0">
        <description>
            Adds a command to the in application menu.
            Either menuParams or vrCommands must be provided.
        </description>
        
        <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>unique ID of the command to add.</description>
        </param>
        
        <param name="menuParams" type="MenuParams" mandatory="false">
            <description>Optional sub value containing menu parameters</description>
        </param>
        
        <param name="vrCommands" type="String" minsize="1" maxsize="100" maxlength="99" array="true" mandatory="false">
            <description>
                An array of strings to be used as VR synonyms for this command.
                If this array is provided, it may not be empty.
            </description>
        </param>
        
        <param name="cmdIcon" type="Image" mandatory="false" since="2.0">
            <description>
                Image struct determining whether static or dynamic icon.
                If omitted on supported displays, no (or the default if applicable) icon shall be displayed.
            </description>
        </param>
        
    </function>
    
    <function name="AddCommand" functionID="AddCommandID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="DISALLOWED"/>
            <element name="WARNINGS"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="DeleteCommand" functionID="DeleteCommandID" messagetype="request" since="1.0">
        <description>Deletes all commands from the in-application menu with the specified command id.</description>
        
        <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>ID of the command(s) to delete.</description>
        </param>
        
    </function>
    
    <function name="DeleteCommand" functionID="DeleteCommandID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="IN_USE"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="AddSubMenu" functionID="AddSubMenuID" messagetype="request" since="1.0">
        <description>Adds a sub menu to the in-application menu.</description>
        
        <param name="menuID" type="Integer" minvalue="1" maxvalue="2000000000" mandatory="true">
            <description>unique ID of the sub menu to add.</description>
        </param>
        
        <param name="position" type="Integer" minvalue="0" maxvalue="1000" defvalue="1000" mandatory="false">
            <description>
                Position within the items that are are at top level of the in application menu.
                0 will insert at the front.
                1 will insert at the second position.
                If position is greater or equal than the number of items on top level, the sub menu will be appended to the end.
                Position of any submenu will always be located before the return and exit options
                If this param was omitted the entry will be added at the end.
            </description>
        </param>
        
        <param name="menuName" maxlength="500" type="String" mandatory="true">
            <description>Text to show in the menu for this sub menu.</description>
        </param>

        <param name="menuIcon" type="Image" mandatory="false" since="5.0">
            <description>The image field for AddSubMenu</description>
        </param>

        <param name="menuLayout" type="MenuLayout" mandatory="false" since="6.0">
            <description>Sets the layout of the submenu screen.</description>
        </param>
    </function>
    
    <function name="AddSubMenu" functionID="AddSubMenuID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="DeleteSubMenu" functionID="DeleteSubMenuID" messagetype="request" since="1.0">
        <description>Deletes a submenu from the in-application menu.</description>
        
        <param name="menuID" type="Integer" minvalue="1" maxvalue="2000000000" mandatory="true">
            <description>The "menuID" of the submenu to delete. (See addSubMenu.menuID)</description>
        </param>
        
    </function>
    
    <function name="DeleteSubMenu" functionID="DeleteSubMenuID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="IN_USE"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="ShowAppMenu" functionID="ShowAppMenuID" messagetype="request" since="6.0">
        <description>Shows the built in menu view</description>

        <param name="menuID" type="Integer" minvalue="1" maxvalue="2000000000" mandatory="false">
            <description>
                If omitted the HMI opens the app's menu.
                If set to a sub-menu ID the HMI opens the corresponding sub-menu previously added using `AddSubMenu`.
            </description>
        </param>

    </function>

    <function name="ShowAppMenu" functionID="ShowAppMenuID" messagetype="response" since="6.0">

        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
    
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="IN_USE"/>
        </param>
    
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    
    </function>

    <function name="CreateInteractionChoiceSet" functionID="CreateInteractionChoiceSetID" messagetype="request" since="1.0">
        <description>creates interaction choice set to be used later by performInteraction</description>
        
        <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>Unique ID used for this interaction choice set.</description>
        </param>
        
        <param name="choiceSet" type="Choice" minsize="1" maxsize="100" array="true"  mandatory="true"/>
    </function>
    
    <function name="CreateInteractionChoiceSet" functionID="CreateInteractionChoiceSetID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="PerformInteraction" functionID="PerformInteractionID" messagetype="request" since="1.0">
        <description>Triggers an interaction (e.g. "Permit GPS?" - Yes, no, Always Allow).</description>
        
        <param name="initialText" type="String" maxlength="500"  mandatory="true">
            <description>
                Text to be displayed first.
            </description>
        </param>
        
        <param name="initialPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                This is the initial prompt spoken to the user at the start of an interaction.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="interactionMode" type="InteractionMode" mandatory="true">
            <description>See InteractionMode.</description>
        </param>
        
        <param name="interactionChoiceSetIDList" type="Integer" minsize="0" maxsize="100" minvalue="0" maxvalue="2000000000" array="true" mandatory="true">
            <description>List of interaction choice set IDs to use with an interaction.</description>
        </param>
        
        <param name="helpPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                Help text. This is the spoken string when a user speaks "help" when the interaction is occurring.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="timeoutPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                Timeout text. This text is spoken when a VR interaction times out.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="timeout" type="Integer" minvalue="5000" maxvalue="100000" defvalue="10000" mandatory="false">
            <description>
                Timeout in milliseconds.
                If omitted a standard value of 10000 milliseconds is used.
                Applies only to the menu portion of the interaction. The VR timeout will be handled by the platform.
            </description>
        </param>
        
        <param name="vrHelp" type="VrHelpItem" minsize="1" maxsize="100" array="true" mandatory="false" since="2.0">
            <description>
                Ability to send suggested VR Help Items to display on-screen during Perform Interaction.
                If omitted on supported displays, the default generated list of suggested choices shall be displayed.
            </description>
        </param>
        
        <param name="interactionLayout" type="LayoutMode" mandatory="false" since="3.0">
            <description>See LayoutMode.</description>
        </param>

        <param name="cancelID" type="Integer" mandatory="false" since="6.0">
            <description>
                An ID for this specific PerformInteraction to allow cancellation through the `CancelInteraction` RPC.
            </description>
        </param>

    </function>
    
    <function name="PerformInteraction" functionID="PerformInteractionID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="DUPLICATE_NAME"/>
            <element name="TIMED_OUT"/>
            <element name="ABORTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="WARNINGS"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="choiceID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>
                ID of the choice that was selected in response to PerformInteraction.
                Only is valid if general result is "success:true".
            </description>
        </param>
        
        <param name="manualTextEntry" type="String" maxlength="500" mandatory="false" since="3.0">
            <description>
                Manually entered text selection, e.g. through keyboard
                Can be returned in lieu of choiceID, depending on trigger source
            </description>
        </param>
        
        <param name="triggerSource" type="TriggerSource" mandatory="false">
            <description>
                See TriggerSource
                Only is valid if resultCode is SUCCESS.
            </description>
        </param>
        
    </function>
    
    <function name="DeleteInteractionChoiceSet" functionID="DeleteInteractionChoiceSetID" messagetype="request" since="1.0">
        <description>Deletes interaction choice set that has been created with "CreateInteractionChoiceSet".</description>
        <description>The interaction may only be deleted when not currently in use by a "performInteraction".</description>
        
        <param name="interactionChoiceSetID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>ID of the interaction choice set to delete.</description>
        </param>
    </function>
    
    <function name="DeleteInteractionChoiceSet" functionID="DeleteInteractionChoiceSetID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_ID"/>
            <element name="IN_USE"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="Alert" functionID="AlertID" messagetype="request" since="1.0">
        <description>Shows an alert which typically consists of text-to-speech message and text on the display. At least either alertText1, alertText2 or TTSChunks need to be provided.</description>
        
        <param name="alertText1" type="String" maxlength="500" mandatory="false">
            <description>The first line of the alert text field</description>
        </param>
        
        <param name="alertText2" type="String" maxlength="500" mandatory="false">
            <description>The second line of the alert text field</description>
        </param>
        
        <param name="alertText3" type="String" maxlength="500" mandatory="false" since="2.0">
            <description>The optional third line of the alert text field</description>
        </param>
        
        <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
        <param name="duration" type="Integer" minvalue="3000" maxvalue="10000" defvalue="5000" mandatory="false">
            <description>
                Timeout in milliseconds.
                Typical timeouts are 3-5 seconds.
                If omitted, timeout is set to 5s.
            </description>
        </param>
        
        <param name="playTone" type="Boolean" mandatory="false">
            <description>
                Defines if tone should be played. Tone is played before TTS.
                If omitted, no tone is played.
            </description>
        </param>
        
        <param name="progressIndicator" type="Boolean" mandatory="false" since="3.0">
            <description>
                If supported on the given platform, the alert GUI will include some sort of animation indicating that loading of a feature is progressing.  e.g. a spinning wheel or hourglass, etc.
            </description>
        </param>
        
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="4" array="true" mandatory="false" since="2.0">
            <description>
                App defined SoftButtons.
                If omitted on supported displays, the displayed alert shall not have any SoftButtons.
            </description>
        </param>

        <param name="alertIcon" type="Image" mandatory="false" since="6.0">
            <description>
                Image struct determining whether static or dynamic icon.
                If omitted on supported displays, no (or the default if applicable) icon should be displayed.
            </description>
        </param>

        <param name="cancelID" type="Integer" mandatory="false" since="6.0">
            <description>
                An ID for this specific alert to allow cancellation through the `CancelInteraction` RPC.
            </description>
        </param>
        
    </function>
    
    <function name="Alert" functionID="AlertID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="ABORTED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="WARNINGS"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="tryAgainTime" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false" since="2.0">
            <description>
                Amount of time (in seconds) that an app must wait before resending an alert.
                If provided, another system event or overlay currently has a higher priority than this alert.
                An app must not send an alert without waiting at least the amount of time dictated.
            </description>
        </param>
        
    </function>
    
    <function name="Show" functionID="ShowID" messagetype="request" since="1.0">
        <description>Updates the persistent display. Supported fields depend on display capabilities.</description>
        
        <param name="mainField1" type="String" minlength="0" maxlength="500" mandatory="false" since="1.0">
            <description>
                The text that should be displayed in a single or upper display line.
                If this text is not set, the text of mainField1 stays unchanged.
                If this text is empty "", the field will be cleared.
            </description>
        </param>
        
        <param name="mainField2" type="String" minlength="0" maxlength="500" mandatory="false" since="1.0">
            <description>
                The text that should be displayed on the second display line.
                If this text is not set, the text of mainField2 stays unchanged.
                If this text is empty "", the field will be cleared.
            </description>
        </param>
        
        <param name="mainField3" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
            <description>
                The text that should be displayed on the second "page" first display line.
                If this text is not set, the text of mainField3 stays unchanged.
                If this text is empty "", the field will be cleared.
            </description>
        </param>
        
        <param name="mainField4" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
            <description>
                The text that should be displayed on the second "page" second display line.
                If this text is not set, the text of mainField4 stays unchanged.
                If this text is empty "", the field will be cleared.
            </description>
        </param>
        
        <param name="alignment" type="TextAlignment" mandatory="false" since="1.0">
            <description>
                Specifies how mainField1 and mainField2 texts should be aligned on display.
                If omitted, texts will be centered.
            </description>
        </param>
        
        <param name="statusBar" type="String" minlength="0" maxlength="500" mandatory="false" since="1.0">
            <description>Requires investigation regarding the nav display capabilities. Potentially lower lowerStatusBar, upperStatusBar, titleBar, etc.</description>
        </param>
        
        <param name="mediaClock" type="String" minlength="0" maxlength="500" mandatory="false" since="1.0">
            <description>
                Text value for MediaClock field. Has to be properly formatted by Mobile App according to the module's capabilities.
                If this text is set, any automatic media clock updates previously set with SetMediaClockTimer will be stopped.
            </description>
        </param>
        
        <param name="mediaTrack" type="String" minlength="0" maxlength="500" mandatory="false" since="1.0">
            <description>
                The text that should be displayed in the track field.
                If this text is not set, the text of mediaTrack stays unchanged.
                If this text is empty "", the field will be cleared.
            </description>
        </param>
        
        <param name="graphic" type="Image" mandatory="false" since="3.0">
            <description>
                Image struct determining whether static or dynamic image to display in app.
                If omitted on supported displays, the displayed graphic shall not change.
            </description>
        </param>
        
        <param name="secondaryGraphic" type="Image" mandatory="false" since="3.0">
            <description>
                Image struct determining whether static or dynamic secondary image to display in app.
                If omitted on supported displays, the displayed secondary graphic shall not change.
            </description>
        </param>
        
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="8" array="true" mandatory="false" since="2.0">
            <description>
                App defined SoftButtons.
                If omitted on supported displays, the currently displayed SoftButton values will not change.
            </description>
        </param>
        
        <param name="customPresets" type="String" maxlength="500" minsize="0" maxsize="10" array="true" mandatory="false" since="3.0">
            <description>
                App labeled on-screen presets (i.e. on-screen media presets or dynamic search suggestions).
                If omitted on supported displays, the presets will be shown as not defined.
            </description>
        </param>
        
        <param name="metadataTags" type="MetadataTags" mandatory="false" since="4.5">
            <description>
                App defined metadata information. See MetadataStruct. Uses mainField1, mainField2, mainField3, mainField4.
                If omitted on supported displays, the currently set metadata tags will not change.
                If any text field contains no tags or the none tag, the metadata tag for that textfield should be removed.
            </description>
        </param>

        <param name="templateTitle" type="String" minlength="0" maxlength="100" mandatory="false" since="6.0">
            <description>
                The title of the new template that will be displayed.
                How this will be displayed is dependent on the OEM design and implementation of the template.
            </description>
        </param>
        <param name="windowID" type="Integer" mandatory="false" since="6.0" >
            <description>
                This is the unique ID assigned to the window that this RPC is intended. If this param is not included,
                it will be assumed that this request is specifically for the main window on the main display.
                See PredefinedWindows enum.
            </description>
        </param>

        <param name="templateConfiguration" type="TemplateConfiguration" mandatory="false" since="6.0">
            <description>
                Used to set an alternate template layout to a window.
            </description>
        </param>
    </function>
    
    <function name="Show" functionID="ShowID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="WARNINGS"/>
            <element name="ABORTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="Speak" functionID="SpeakID" messagetype="request" since="1.0">
        <description>Speaks a text.</description>
        
        <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="true">
            <description>
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
            </description>
        </param>
        
    </function>
    
    <function name="Speak" functionID="SpeakID" messagetype="response" since="1.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="ABORTED"/>
            <element name="WARNINGS"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="SetMediaClockTimer" functionID="SetMediaClockTimerID" messagetype="request" since="1.0">
        <description>Sets the initial media clock value and automatic update method.</description>
        
        <param name="startTime" type="StartTime" mandatory="false">
            <description>
                See StartTime.
                startTime must be provided for "COUNTUP" and "COUNTDOWN".
                startTime will be ignored for "RESUME", and "CLEAR"
                startTime can be sent for "PAUSE", in which case it will update the paused startTime
            </description>
        </param>
        
        <param name="endTime" type="StartTime" mandatory="false" since="3.0">
            <description>
                See StartTime.
                endTime can be provided for "COUNTUP" and "COUNTDOWN"; to be used to calculate any visual progress bar (if not provided, this feature is ignored)
                If endTime is greater then startTime for COUNTDOWN or less than startTime for COUNTUP, then the request will return an INVALID_DATA.
                endTime will be ignored for "RESUME", and "CLEAR"
                endTime can be sent for "PAUSE", in which case it will update the paused endTime
            </description>
        </param>
        
        <param name="updateMode" type="UpdateMode" mandatory="true">
            <description>
                Enumeration to control the media clock.
                In case of pause, resume, or clear, the start time value is ignored and shall be left out.  For resume, the time continues with the same value as it was when paused.
            </description>
        </param>

        <param name="audioStreamingIndicator" type="AudioStreamingIndicator" mandatory="false" since="5.0">
            <description>
                Enumeration for the indicator icon on a play/pause button. see AudioStreamingIndicator.
            </description>
        </param>
    </function>
    
    <function name="SetMediaClockTimer" functionID="SetMediaClockTimerID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="PerformAudioPassThru" functionID="PerformAudioPassThruID" messagetype="request" since="2.0">
        <description>Starts audio pass thru session </description>
        <param name="initialPrompt" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>
                The module will speak this prompt before opening the audio pass thru session.
                An array of text chunks of type TTSChunk. See TTSChunk.
                The array must have at least one item.
                If omitted, then no initial prompt is spoken.
            </description>
        </param>
        <param name="audioPassThruDisplayText1" type="String" mandatory="false" maxlength="500">
            <description>First line of text displayed during audio capture.</description>
        </param>
        <param name="audioPassThruDisplayText2" type="String" mandatory="false" maxlength="500">
            <description>Second line of text displayed during audio capture.</description>
        </param>
        <param name="samplingRate" type="SamplingRate" mandatory="true">
            <description> This value shall be allowed at 8 kHz or 16 or 22 or 44 kHz.</description>
        </param>
        <param name="maxDuration" type="Integer" minvalue="3000" maxvalue="1000000" mandatory="true">
            <description>The maximum duration of audio recording in milliseconds. </description>
        </param>
        <param name="bitsPerSample" type="BitsPerSample" mandatory="true">
            <description>Specifies the quality the audio is recorded. Currently 8 bit or 16 bit.</description>
        </param>
        <param name="audioType" type="AudioType" mandatory="true">
            <description>Specifies the type of audio data being requested.</description>
        </param>
        <param name="muteAudio" type="Boolean" mandatory="false">
            <description>
                Defines if the current audio source should be muted during the APT session.  If not, the audio source will play without interruption.
                If omitted, the value is set to true.
            </description>
        </param>
    </function>
    
    <function name="PerformAudioPassThru" functionID="PerformAudioPassThruID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="DISALLOWED"/>
            <element name="REJECTED"/>
            <element name="ABORTED"/>
            <element name="RETRY"/>
            <element name="WARNINGS"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="EndAudioPassThru" functionID="EndAudioPassThruID" messagetype="request" since="2.0">
        <description>When this request is invoked, the audio capture stops.</description>
    </function>
    
    <function name="EndAudioPassThru" functionID="EndAudioPassThruID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="SubscribeButton" functionID="SubscribeButtonID" messagetype="request" since="1.0">
        <description>
            Subscribes to built-in HMI buttons.
            The application will be notified by the OnButtonEvent and OnButtonPress.
            To unsubscribe the notifications, use unsubscribeButton.
        </description>
        
        <param name="buttonName" type="ButtonName" mandatory="true">
            <description>Name of the button to subscribe.</description>
        </param>
    </function>
    
    <function name="SubscribeButton" functionID="SubscribeButtonID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="UNSUPPORTED_RESOURCE" />
            <element name="IGNORED" />
            <element name="REJECTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="UnsubscribeButton" functionID="UnsubscribeButtonID" messagetype="request" since="1.0">
        <description>Unsubscribes from built-in HMI buttons.</description>
        
        <param name="buttonName" type="ButtonName" mandatory="true">
            <description>Name of the button to unsubscribe.</description>
        </param>
    </function>
    
    <function name="UnsubscribeButton" functionID="UnsubscribeButtonID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="UNSUPPORTED_RESOURCE" />
            <element name="IGNORED" />
            <element name="REJECTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="SubscribeVehicleData" functionID="SubscribeVehicleDataID" messagetype="request" since="2.0">
        <description>
            Subscribes for specific published data items.
            The data will be only sent if it has changed.
            The application will be notified by the onVehicleData notification whenever new data is available.
            To unsubscribe the notifications, use unsubscribe with the same subscriptionType.
        </description>
        
        <param name="gps" type="Boolean" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="Boolean" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="Boolean" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="Boolean" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="Boolean" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="Boolean" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="Boolean" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="Boolean" mandatory="false">
            <description>The external temperature in degrees celsius</description>
        </param>
        <param name="turnSignal" type="Boolean" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="prndl" type="Boolean" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="Boolean" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="Boolean" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="Boolean" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="Boolean" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="Boolean" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="Boolean" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="Boolean" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="Boolean" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="Boolean" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="Boolean" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="Boolean" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="Boolean" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="Boolean" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="Boolean" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="Boolean" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="Boolean" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="Boolean" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModeStatus" type="Boolean" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="Boolean" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="SubscribeVehicleData" functionID="SubscribeVehicleDataID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="WARNINGS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED" />
            <element name="IGNORED" />
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="gps" type="VehicleDataResult" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="VehicleDataResult" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="VehicleDataResult" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="VehicleDataResult" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="VehicleDataResult" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="VehicleDataResult" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="VehicleDataResult" mandatory="false">
            <description>The external temperature in degrees celsius.</description>
        </param>
        <param name="turnSignal" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="prndl" type="VehicleDataResult" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="VehicleDataResult" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="VehicleDataResult" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="VehicleDataResult" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="VehicleDataResult" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="VehicleDataResult" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="VehicleDataResult" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="VehicleDataResult" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="VehicleDataResult" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="VehicleDataResult" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="VehicleDataResult" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="VehicleDataResult" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="VehicleDataResult" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="VehicleDataResult" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="VehicleDataResult" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="VehicleDataResult" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModes" type="VehicleDataResult" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="VehicleDataResult" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="UnsubscribeVehicleData" functionID="UnsubscribeVehicleDataID" messagetype="request" since="2.0">
        <description>This function is used to unsubscribe the notifications from the subscribeVehicleData function.</description>
        
        <param name="gps" type="Boolean" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="Boolean" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="Boolean" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="Boolean" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="Boolean" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="Boolean" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="Boolean" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="Boolean" mandatory="false">
            <description>The external temperature in degrees celsius.</description>
        </param>
        <param name="turnSignal" type="Boolean" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="prndl" type="Boolean" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="Boolean" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="Boolean" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="Boolean" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="Boolean" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="Boolean" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="Boolean" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="Boolean" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="Boolean" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="Boolean" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="Boolean" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="Boolean" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="Boolean" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="Boolean" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="Boolean" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="Boolean" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="Boolean" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="Boolean" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModeStatus" type="Boolean" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="Boolean" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="UnsubscribeVehicleData" functionID="UnsubscribeVehicleDataID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="WARNINGS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED" />
            <element name="IGNORED" />
            <element name="DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="gps" type="VehicleDataResult" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="VehicleDataResult" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="VehicleDataResult" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="VehicleDataResult" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="VehicleDataResult" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="VehicleDataResult" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="VehicleDataResult" mandatory="false">
            <description>The external temperature in degrees celsius</description>
        </param>
        <param name="turnSignal" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="prndl" type="VehicleDataResult" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="VehicleDataResult" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="VehicleDataResult" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="VehicleDataResult" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="VehicleDataResult" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="VehicleDataResult" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="VehicleDataResult" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="VehicleDataResult" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="VehicleDataResult" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="VehicleDataResult" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="VehicleDataResult" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="VehicleDataResult" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="VehicleDataResult" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="VehicleDataResult" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="VehicleDataResult" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="VehicleDataResult" mandatory="false" >
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="VehicleDataResult" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModes" type="VehicleDataResult" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="VehicleDataResult" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="GetVehicleData" functionID="GetVehicleDataID" messagetype="request" since="2.0">
        <description>Non periodic vehicle data read request.</description>
        
        <param name="gps" type="Boolean" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="Boolean" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="Boolean" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="Boolean" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="Boolean" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="Boolean" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="Boolean" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="Boolean" mandatory="false">
            <description>The external temperature in degrees celsius</description>
        </param>
        <param name="turnSignal" type="Boolean" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="vin" type="Boolean" mandatory="false">
            <description>Vehicle identification number</description>
        </param>
        <param name="prndl" type="Boolean" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="Boolean" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="Boolean" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="Boolean" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="Boolean" mandatory="false">
            <description>The body information including ignition status and internal temp</description>
        </param>
        <param name="deviceStatus" type="Boolean" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="Boolean" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="Boolean" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="Boolean" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="Boolean" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="Boolean" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="Boolean" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="Boolean" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="Boolean" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="Boolean" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="Boolean" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="Boolean" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="Boolean" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModeStatus" type="Boolean" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="Boolean" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="GetVehicleData" functionID="GetVehicleDataID" messagetype="response" since="2.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="VEHICLE_DATA_NOT_ALLOWED"/>
            <element name="VEHICLE_DATA_NOT_AVAILABLE"/>
            <element name="USER_DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="gps" type="GPSData" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="Float" minvalue="0" maxvalue="700" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="Float" minvalue="-6" maxvalue="106" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="ComponentVolumeStatus" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="Float" minvalue="0" maxvalue="25575" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="FuelRange" minsize="0" maxsize="100" array="true" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
            <description>The external temperature in degrees celsius</description>
        </param>
        <param name="turnSignal" type="TurnSignal" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="vin" type="String" maxlength="17" mandatory="false">
            <description>Vehicle identification number</description>
        </param>
        <param name="prndl" type="PRNDL" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="TireStatus" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="Integer" minvalue="0" maxvalue="17000000" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="BeltStatus" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="BodyInformation" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="DeviceStatus" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="VehicleDataEventStatus" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="WiperStatus" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="HeadLampStatus" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="Float" minvalue="-1000" maxvalue="2000" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="Float" minvalue="0" maxvalue="100" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="Float" minvalue="-2000" maxvalue="2000" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="Float" minvalue="0" maxvalue="100" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="ElectronicParkBrakeStatus" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="String" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="ECallInfo" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="AirbagStatus" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="EmergencyEvent" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModeStatus" type="ClusterModeStatus" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="MyKey" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="ReadDID" functionID="ReadDIDID" messagetype="request" since="2.0">
        <description>Non periodic vehicle data read request</description>
        
        <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Name of ECU.</description>
        </param>
        <param name="didLocation" type="Integer" minvalue="0" maxvalue="65535" minsize="1" maxsize="1000" array="true" mandatory="true">
            <description>Get raw data from vehicle data DID location(s)</description>
        </param>
    </function>
    
    <function name="ReadDID" functionID="ReadDIDID" messagetype="response" since="2.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="TRUNCATED_DATA"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="didResult" type="DIDResult" minsize="0" maxsize="1000" array="true" mandatory="false">
            <description>Array of requested DID results (with data if available).</description>
        </param>
        
    </function>
    
    <function name="GetDTCs" functionID="GetDTCsID" messagetype="request" since="2.0">
        <description>Vehicle module diagnostic trouble code request.</description>
        
        <param name="ecuName" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Name of ECU.</description>
        </param>
        
        <param name="dtcMask" type="Integer" minvalue="0" maxvalue="255" mandatory="false">
            <description>DTC Mask Byte to be sent in diagnostic request to module .</description>
        </param>
        
    </function>
    
    <function name="GetDTCs" functionID="GetDTCsID" messagetype="response" since="2.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="TRUNCATED_DATA"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="ecuHeader" type="Integer" minvalue="0" maxvalue="65535" mandatory="false">
            <description>2 byte ECU Header for DTC response (as defined in VHR_Layout_Specification_DTCs.pdf)</description>
        </param>
        
        <param name="dtc" type="String" mandatory="false" minsize="1" maxsize="15" maxlength="10" array="true">
            <description>
                Array of all reported DTCs on module (ecuHeader contains information if list is truncated).
                Each DTC is represented by 4 bytes (3 bytes of data and 1 byte status as defined in VHR_Layout_Specification_DTCs.pdf).
            </description>
        </param>
        
    </function>
    
    <function name="DiagnosticMessage" functionID="DiagnosticMessageID" messagetype="request" since="3.0">
        <description>Non periodic vehicle diagnostic request</description>
        
        <param name="targetID" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Name of target ECU.</description>
        </param>
        
        <param name="messageLength" type="Integer" minvalue="0" maxvalue="65535" mandatory="true">
            <description>Length of message (in bytes).</description>
        </param>
        
        <param name="messageData" type="Integer" minvalue="0" maxvalue="255" minsize="1" maxsize="65535" array="true" mandatory="true">
            <description>
                Array of bytes comprising CAN message.
            </description>
        </param>
    </function>
    
    <function name="DiagnosticMessage" functionID="DiagnosticMessageID" messagetype="response" since="3.0">
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="TRUNCATED_DATA"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="messageDataResult" type="Integer" minvalue="0" maxvalue="255" minsize="1" maxsize="65535" array="true" mandatory="false">
            <description>
                Array of bytes comprising CAN message result.
            </description>
        </param>
        
    </function>
    
    <function name="ScrollableMessage" functionID="ScrollableMessageID" messagetype="request" since="2.0">
        <description>Creates a full screen overlay containing a large block of formatted text that can be scrolled with up to 8 SoftButtons defined</description>
        <param name="scrollableMessageBody" type="String" maxlength="500" mandatory="true">
            <description>Body of text that can include newlines and tabs.</description>
        </param>
        <param name="timeout" type="Integer" minvalue="1000" maxvalue="65535" defvalue="30000" mandatory="false">
            <description>App defined timeout.  Indicates how long of a timeout from the last action (i.e. scrolling message resets timeout).</description>
        </param>
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="8" array="true" mandatory="false">
            <description>
                App defined SoftButtons.
                If omitted on supported displays, only the system defined "Close" SoftButton will be displayed.
            </description>
        </param>
        <param name="cancelID" type="Integer" mandatory="false" since="6.0">
            <description>
                An ID for this specific ScrollableMessage to allow cancellation through the `CancelInteraction` RPC.
            </description>
        </param>
    </function>
    
    <function name="ScrollableMessage" functionID="ScrollableMessageID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="CHAR_LIMIT_EXCEEDED"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="REJECTED"/>
            <element name="ABORTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="Slider" functionID="SliderID" messagetype="request" since="2.0">
        <description>Creates a full screen or pop-up overlay (depending on platform) with a single user controlled slider.</description>
        <param name="numTicks" type="Integer" minvalue="2" maxvalue="26" mandatory="true">
            <description>Number of selectable items on a horizontal axis</description>
        </param>
        <param name="position" type="Integer" minvalue="1" maxvalue="26" mandatory="true">
            <description>Initial position of slider control (cannot exceed numTicks)</description>
        </param>
        <param name="sliderHeader" type="String" maxlength="500" mandatory="true">
            <description>Text header to display</description>
        </param>
        <param name="sliderFooter" type="String" maxlength="500"  minsize="1" maxsize="26" array="true" mandatory="false">
            <description>
                Text footer to display (meant to display min/max threshold descriptors).
                For a static text footer, only one footer string shall be provided in the array.
                For a dynamic text footer, the number of footer text string in the array must match the numTicks value.
                For a dynamic text footer, text array string should correlate with potential slider position index.
                If omitted on supported displays, no footer text shall be displayed.
            </description>
        </param>
        <param name="timeout" type="Integer" minvalue="1000" maxvalue="65535" defvalue="10000" mandatory="false">
            <description>
                App defined timeout.  Indicates how long of a timeout from the last action (i.e. sliding control resets timeout).
                If omitted, the value is set to 10000.
            </description>
        </param>
        <param name="cancelID" type="Integer" mandatory="false" since="6.0">
            <description>
                An ID for this specific Slider to allow cancellation through the `CancelInteraction` RPC.
            </description>
        </param>
    </function>
    
    <function name="Slider" functionID="SliderID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="SAVED"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="REJECTED"/>
            <element name="ABORTED"/>
            <element name="TIMED_OUT"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <param name="sliderPosition" type="Integer" minvalue="1" maxvalue="26" mandatory="false">
            <description>
                Current slider value returned when saved or canceled (aborted)
                This value is only returned for resultCodes "SAVED" or "ABORTED"
            </description>
        </param>
    </function>
    
    <function name="ShowConstantTBT" functionID="ShowConstantTBTID" messagetype="request" since="2.0">
        <param name="navigationText1" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
        </param>
        <param name="navigationText2" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
        </param>
        <param name="eta" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
        </param>
        <param name="timeToDestination" type="String" minlength="0" maxlength="500" mandatory="false" since="3.0">
        </param>
        <param name="totalDistance" type="String" minlength="0" maxlength="500" mandatory="false" since="2.0">
        </param>
        <param name="turnIcon" type="Image" mandatory="false" since="2.0">
        </param>
        <param name="nextTurnIcon" type="Image" mandatory="false" since="3.0">
        </param>
        <param name="distanceToManeuver" type="Float" minvalue="0" maxvalue="1000000000" mandatory="false" since="2.0">
            <description>
                Fraction of distance till next maneuver (starting from when AlertManeuver is triggered).
                Used to calculate progress bar.
            </description>
        </param>
        <param name="distanceToManeuverScale" type="Float" minvalue="0" maxvalue="1000000000" mandatory="false" since="2.0">
            <description>
                Distance till next maneuver (starting from) from previous maneuver.
                Used to calculate progress bar.
            </description>
        </param>
        <param name="maneuverComplete" type="Boolean" mandatory="false" since="2.0">
            <description>
                If and when a maneuver has completed while an AlertManeuver is active, the app must send this value set to TRUE in order to clear the AlertManeuver overlay.
                If omitted the value will be assumed as FALSE.
            </description>
        </param>
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="3" array="true" mandatory="false" since="2.0">
            <description>
                Three dynamic SoftButtons available (first SoftButton is fixed to "Turns").
                If omitted on supported displays, the currently displayed SoftButton values will not change.
            </description>
        </param>
    </function>
    
    <function name="ShowConstantTBT" functionID="ShowConstantTBTID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_REQUEST"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="AlertManeuver" functionID="AlertManeuverID" messagetype="request" since="2.0">
        <param name="ttsChunks" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>An array of text chunks of type TTSChunk. See TTSChunk</description>
        </param>
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="3" array="true" mandatory="false">
            <description>If omitted on supported displays, only the system defined "Close" SoftButton shall be displayed.</description>
        </param>
    </function>
    
    <function name="AlertManeuver" functionID="AlertManeuverID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_REQUEST"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="ABORTED"/>
            <element name="WARNINGS"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="UpdateTurnList" functionID="UpdateTurnListID" messagetype="request" since="2.0">
        <param name="turnList" type="Turn" minsize="1" maxsize="100" array="true" mandatory="false">
        </param>
        <param name="softButtons" type="SoftButton" minsize="0" maxsize="1" array="true" mandatory="false">
            <description>If omitted on supported displays, app-defined SoftButton will be left blank.</description>
        </param>
    </function>
    
    <function name="UpdateTurnList" functionID="UpdateTurnListID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_REQUEST"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="ChangeRegistration" functionID="ChangeRegistrationID" messagetype="request" since="2.0">
        <param name="language" type="Language" mandatory="true">
            <description>Requested voice engine (VR+TTS) language registration</description>
        </param>
        <param name="hmiDisplayLanguage" type="Language" mandatory="true">
            <description>Request display language registration</description>
        </param>
        <param name="appName" type="String" maxlength="100" mandatory="false" since="3.0">
            <description>Request new app name registration</description>
        </param>
        <param name="ttsName" type="TTSChunk" minsize="1" maxsize="100" array="true" mandatory="false" since="3.0">
            <description>Request new ttsName registration</description>
        </param>
        <param name="ngnMediaScreenAppName" type="String" maxlength="100" mandatory="false" since="3.0">
            <description>Request new app short name registration</description>
        </param>
        <param name="vrSynonyms" type="String" maxlength="40" minsize="1" maxsize="100" array="true" mandatory="false" since="3.0">
            <description>Request new VR synonyms registration</description>
        </param>
        
    </function>
    
    <function name="ChangeRegistration" functionID="ChangeRegistrationID" messagetype="response" since="2.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description>
                true, if successful
                false, if failed
            </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="GenericResponse" functionID="GenericResponseID" messagetype="response" since="1.0">
        <description>
            Generic Response is sent, when the name of a received msg cannot be retrieved. Only used in case of an error.
            Currently, only resultCode INVALID_DATA is used.
        </description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="INVALID_DATA"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="PutFile" functionID="PutFileID" messagetype="request" since="3.0">
        <description>
            Used to push a binary data onto the module from a mobile device, such as icons and album art
            Not supported on first generation of SDL enabled modules.
            Binary data is in binary part of hybrid msg.
        </description>
        
        <param name="syncFileName" type="String" maxlength="255" mandatory="true">
            <description>File reference name.</description>
        </param>
        
        <param name="fileType" type="FileType" mandatory="true">
            <description>Selected file type.</description>
        </param>
        
        <param name="persistentFile" type="Boolean" defvalue="false" mandatory="false">
            <description>
                Indicates if the file is meant to persist between sessions / ignition cycles.
                If set to TRUE, then the system will aim to persist this file through session / cycles.
                While files with this designation will have priority over others, they are subject to deletion by the system at any time.
                In the event of automatic deletion by the system, the app will receive a rejection and have to resend the file.
                If omitted, the value will be set to false.
            </description>
        </param>
        
        <param name="systemFile" type="Boolean" defvalue="false" mandatory="false" >
            <description>
                Indicates if the file is meant to be passed thru core to elsewhere on the system.
                If set to TRUE, then the system will instead pass the data thru as it arrives to a predetermined area outside of core.
                If omitted, the value will be set to false.
            </description>
        </param>
        
        <param name="offset" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>Optional offset in bytes for resuming partial data chunks</description>
        </param>
        <param name="length" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>
                Optional length in bytes for resuming partial data chunks
                If offset is set to 0, then length is the total length of the file to be downloaded
            </description>
        </param>
        <param name="crc" type="Integer" minvalue="0" maxvalue="4294967295" mandatory="false" since="5.0">
            <description> Additional CRC32 checksum to protect data integrity up to 512 Mbits </description>
        </param>
    </function>
    
    <function name="PutFile" functionID="PutFileID" messagetype="response" since="3.0">
        <description>Response is sent, when the file data was copied (success case). Or when an error occurred.</description>
        <description>Not supported on first generation SDL enabled vehicles. </description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_REQUEST"/>
            <element name="CORRUPTED_DATA"/>
        </param>
        
        <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false" since="5.0">
            <description>
                Provides the total local space available in SDL Core for the registered app.
                If the transfer has systemFile enabled, then the value will be set to 0 automatically.
            </description>
            <history>
                <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true" since="3.0" until="5.0"/>
            </history>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <function name="GetFile" functionID="GetFileID" messagetype="request" since="5.1">
        <description>This request is sent to the module to retrieve a file</description>
        <param name="fileName" type="String" maxlength="255" mandatory="true">
            <description>File name that should be retrieved</description>
        </param>
        <param name="appServiceId" type="String" mandatory="false">
            <description>ID of the service that should have uploaded the requested file.</description>
        </param>
        <param name="fileType" type="FileType" mandatory="false">
            <description>Selected file type.</description>
        </param>
        <param name="offset" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>Optional offset in bytes for resuming partial data chunks</description>
        </param>
        <param name="length" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>
                Optional length in bytes for resuming partial data chunks
                If offset is set to 0, then length is the total length of the file to be retrieved
            </description>
        </param>
    </function>

    <function name="GetFile" functionID="GetFileID" messagetype="response" since="5.1">
        <description>This response includes the data that is requested from the specific service</description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="FILE_NOT_FOUND"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>

        <!-- Specific response data -->
        <param name="offset" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>Optional offset in bytes for resuming partial data chunks</description>
        </param>

        <param name="length" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>Optional length in bytes for resuming partial data chunks if offset is set to 0, then length is the total length of the file to be downloaded</description>
        </param>

        <param name="fileType" type="FileType" mandatory="false">
            <description>File type that is being sent in response.</description>
        </param>

        <param name="crc" type="Integer" minvalue="0" maxvalue="4294967295" mandatory="false">
            <description>Additional CRC32 checksum to protect data integrity up to 512 Mbits</description>
        </param>
    </function>

    <function name="DeleteFile" functionID="DeleteFileID" messagetype="request" since="3.0">
        <description>
            Used to delete a file resident on the module in the app's local cache.
            Not supported on first generation SDL enabled vehicles.
        </description>
        
        <param name="syncFileName" type="String" maxlength="500" mandatory="true">
            <description>File reference name.</description>
        </param>
        
    </function>
    
    <function name="DeleteFile" functionID="DeleteFileID" messagetype="response" since="3.0">
        <description>
            Response is sent, when the file data was deleted (success case). Or when an error occurred.
            Not supported on First generation SDL enabled vehicles.
        </description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_REQUEST"/>
        </param>
        
        <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false" since="5.0">
            <description>Provides the total local space available on the module for the registered app.</description>
            <history>
                <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true" since="3.0" until="5.0"/>
            </history>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="ListFiles" functionID="ListFilesID" messagetype="request" since="3.0">
        <description>
            Requests the current list of resident filenames for the registered app.
            Not supported on first generation SDL enabled vehicles.
        </description>
    </function>
    
    <function name="ListFiles" functionID="ListFilesID" messagetype="response" since="3.0">
        <description>
            Returns the current list of resident filenames for the registered app along with the current space available
            Not supported on First generation SDL enabled vehicles.
        </description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_REQUEST"/>
        </param>
        
        <param name="filenames" type="String" maxlength="500" minsize="0" maxsize="1000" array="true" mandatory="false">
            <description>
                An array of all filenames resident on the module for the given registered app.
                If omitted, then no files currently reside on the system.
            </description>
        </param>
        
        <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false" since="5.0">
            <description>Provides the total local space available on the module for the registered app.</description>
            <history>
                <param name="spaceAvailable" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true" since="3.0" until="5.0"/>
            </history>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="SetAppIcon" functionID="SetAppIconID" messagetype="request" since="3.0">
        <description>
            Used to set existing local file on the module as the app's icon
            Not supported on first generation SDL enabled vehicles.
        </description>
        
        <param name="syncFileName" type="String" maxlength="500" mandatory="true">
            <description>File reference name.</description>
        </param>
        
    </function>
    
    <function name="SetAppIcon" functionID="SetAppIconID" messagetype="response" since="3.0">
        <description>
            Response is sent, when the file data was copied (success case). Or when an error occurred.
            Not supported on First generation SDL enabled vehicles.
        </description>
        
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_REQUEST"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="request" deprecated="true" since="6.0">
        <history>
            <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="request" since="3.0" until="6.0"/>
        </history>
        <description>This RPC is deprecated. Use Show RPC to change layout.</description>
        <param name="displayLayout" type="String" maxlength="500" mandatory="true">
            <description>
                Predefined or dynamically created screen layout.
                Currently only predefined screen layouts are defined.
            </description>
        </param>

        <param name="dayColorScheme" type="TemplateColorScheme" mandatory="false" since="5.0"/>

        <param name="nightColorScheme" type="TemplateColorScheme" mandatory="false" since="5.0"/>
    </function>
    
    <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="response" deprecated="true" since="6.0">
        <history>
            <function name="SetDisplayLayout" functionID="SetDisplayLayoutID" messagetype="response" since="3.0" until="6.0"/>
        </history>
        <description>This RPC is deprecated. Use Show RPC to change layout.</description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>

        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_REQUEST"/>
        </param>

        <param name="displayCapabilities" type="DisplayCapabilities" mandatory="false">
            <description>See DisplayCapabilities</description>
        </param>

        <param name="buttonCapabilities" type="ButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>See ButtonCapabilities</description >
        </param>

        <param name="softButtonCapabilities" type="SoftButtonCapabilities" minsize="1" maxsize="100" array="true" mandatory="false">
            <description>If returned, the platform supports on-screen SoftButtons; see SoftButtonCapabilities.</description>
        </param>

        <param name="presetBankCapabilities" type="PresetBankCapabilities" mandatory="false">
            <description>If returned, the platform supports custom on-screen Presets; see PresetBankCapabilities.</description>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
    </function>
    
    <function name="SystemRequest" functionID="SystemRequestID" messagetype="request" since="3.0">
        <description>An asynchronous request from the device; binary data can be included in hybrid part of message for some requests (such as HTTP, Proprietary, or Authentication requests)</description>
        <param name="requestType" type="RequestType" mandatory="true">
            <description>
                The type of system request.
                Note that Proprietary requests should forward the binary data to the known proprietary module on the system.
            </description>
        </param>
        <param name="requestSubType" type="String" maxlength="255" mandatory="false" since="5.0">
            <description>
                This parameter is filled for supporting OEM proprietary data exchanges.
            </description>
        </param>
        <param name="fileName" type="String" maxlength="255" mandatory="false">
            <description>
                Filename of HTTP data to store in predefined system staging area.
                Mandatory if requestType is HTTP.
                PROPRIETARY requestType should ignore this parameter.
            </description>
        </param>
    </function>
    
    <function name="SystemRequest" functionID="SystemRequestID" messagetype="response" since="3.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="INVALID_CERT"/>
            <element name="EXPIRED_CERT"/>
            <element name="UNSUPPORTED_REQUEST"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="DISALLOWED"/>
            <element name="ABORTED"/>
            <element name="WARNINGS"/>
            <element name="TIMED_OUT"/>
            <element name="IGNORED"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="SendLocation" functionID="SendLocationID" messagetype="request" since="3.0">
        <param name="longitudeDegrees" type="Float" minvalue="-180" maxvalue="180" mandatory="false">
        </param>
        <param name="latitudeDegrees" type="Float" minvalue="-90" maxvalue="90" mandatory="false">
        </param>
        <param name="locationName" type="String" maxlength="500" mandatory="false">
            <description>
                Name / title of intended location
            </description>
        </param>
        <param name="locationDescription" type="String" maxlength="500" mandatory="false">
            <description>
                Description intended location / establishment (if applicable)
            </description>
        </param>
        <param name="addressLines" type="String" maxlength="500" minsize="0" maxsize="4" array="true" mandatory="false">
            <description>
                Location address (if applicable)
            </description>
        </param>
        <param name="phoneNumber" type="String" maxlength="500" mandatory="false">
            <description>
                Phone number of intended location / establishment (if applicable)
            </description>
        </param>
        <param name="locationImage" type="Image" mandatory="false">
            <description>
                Image / icon of intended location (if applicable and supported)
            </description>
        </param>
        
        <param name="timeStamp" type="DateTime" mandatory="false" since="4.1">
            <description>
                timestamp in ISO 8601 format
            </description>
        </param>
        
        <param name="address" type="OASISAddress" mandatory="false" since="4.1">
            <description>Address to be used for setting destination</description>
        </param>
        <param name="deliveryMode" type="DeliveryMode" mandatory="false" since="4.1">
            <description>Defines the mode of prompt for user</description>
        </param>
    </function>
    
    <function name="SendLocation" functionID="SendLocationID" messagetype="response" since="3.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="DISALLOWED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="DialNumber" functionID="DialNumberID" messagetype="request" since="3.0">
        <description>Dials a phone number and switches to phone application.</description>
        
        <param name="number" type="String" maxlength="40" mandatory="true">
            <description>
                Phone number is a string, which can be up to 40 chars.
                All characters shall be stripped from string except digits 0-9 and * # , ; +
            </description>
        </param>
    </function>
    
    <function name="DialNumber" functionID="DialNumberID" messagetype="response" since="3.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description>true, if successful</description>
            <description>false, if failed</description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="ButtonPress" functionID="ButtonPressID" messagetype="request" since="4.5">
        <param name="moduleType" type="ModuleType" mandatory="true">
            <description>The module where the button should be pressed</description>
        </param>
        <param name="moduleId" type="String" maxlength="100" mandatory="false" since="6.0">
            <description>Id of a module, published by System Capability. </description>
        </param>
        <param name="buttonName" type="ButtonName" mandatory="true">
            <description>The name of supported RC climate or radio button.</description>
        </param>
        <param name="buttonPressMode" type="ButtonPressMode" mandatory="true">
            <description>Indicates whether this is a LONG or SHORT button press event.</description>
        </param>
    </function>
    
    <function name="ButtonPress" functionID="ButtonPressID" messagetype="response" since="4.5">
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="IN_USE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
        </param>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
    </function>
    
    <function name="GetInteriorVehicleData" functionID="GetInteriorVehicleDataID" messagetype="request" since="4.5">
        <param name="moduleType" type="ModuleType" mandatory="true">
            <description>
                The type of a RC module to retrieve module data from the vehicle.
                In the future, this should be the Identification of a module.
            </description>
        </param>
        <param name="moduleId" type="String" maxlength="100" mandatory="false" since="6.0">
            <description>Id of a module, published by System Capability. </description>
        </param>
        <param name="subscribe" type="Boolean" mandatory="false" since="4.5.1">
            <description>
                If subscribe is true, the head unit will register OnInteriorVehicleData notifications for the requested module (moduleId and moduleType).
                If subscribe is false, the head unit will unregister OnInteriorVehicleData notifications for the requested module (moduleId and moduleType).
                If subscribe is not included, the subscription status of the app for the requested module (moduleId and moduleType) will remain unchanged.
            </description>
            <history>
                <param name="subscribe" type="Boolean" mandatory="false" defvalue="false" since="4.5" until="4.5.1"/>
            </history>
        </param>
    </function>
    
    <function name="GetInteriorVehicleData" functionID="GetInteriorVehicleDataID" messagetype="response" since="4.5">
        <param name="moduleData" type="ModuleData" mandatory="false">
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
        </param>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        <param name="isSubscribed" type="Boolean" mandatory="false" >
            <description>
                It is a conditional-mandatory parameter: must be returned in case "subscribe" parameter was present in the related request.
                if "true" - the "moduleType" from request is successfully subscribed and the head unit will send onInteriorVehicleData notifications for the moduleType.
                if "false" - the "moduleType" from request is either unsubscribed or failed to subscribe.
            </description>
        </param>
    </function>

    <function name="GetInteriorVehicleDataConsent" functionID="GetInteriorVehicleDataConsentID" messagetype="request" since="6.0">
        <param name="moduleType" type="ModuleType" mandatory="true">
            <description>The module type that the app requests to control.</description>
        </param>
        <param name="moduleIds" type="String" maxlength="100" array="true" mandatory="true">
            <description>Ids of a module of same type, published by System Capability. </description>
       </param>
    </function>

    <function name="GetInteriorVehicleDataConsent" functionID="GetInteriorVehicleDataConsentID" messagetype="response" since="6.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
        </param>
        <param name="allowed" type="Boolean" array="true" mandatory="false">
            <description>
                This array has the same size as "moduleIds" in the request and each element corresponds to one moduleId
                If true, SDL grants the permission for the requested module
                If false, SDL denies the permission for the requested module.
            </description>
        </param>
    </function>

    <function name="ReleaseInteriorVehicleDataModule" functionID="ReleaseInteriorVehicleDataModuleID" messagetype="request" since="6.0">
        <param name="moduleType" type="ModuleType" mandatory="true">
        </param>
        <param name="moduleId" type="String" maxlength="100" mandatory="false" since="5.1">
           <description>Id of a module, published by System Capability. </description>
        </param>
    </function>

    <function name="ReleaseInteriorVehicleDataModule" functionID="ReleaseInteriorVehicleDataModuleID" messagetype="response" since="6.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
        </param>
    </function>
    
    <function name="SetInteriorVehicleData" functionID="SetInteriorVehicleDataID" messagetype="request" since="4.5">
        <param name="moduleData" type="ModuleData" mandatory="true">
            <description>The module data to set for the requested RC module.</description>
        </param>
    </function>
    
    <function name="SetInteriorVehicleData" functionID="SetInteriorVehicleDataID" messagetype="response" since="4.5">
        <description>Used to set the values of one remote control module </description>
        <param name="moduleData" type="ModuleData" mandatory="false">
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="READ_ONLY"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="IN_USE"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
        </param>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
    </function>
    
    <function name="SubscribeWayPoints" functionID="SubscribeWayPointsID" messagetype="request" since="4.1">
        <description>To subscribe in getting changes for Waypoints/destinations</description>
    </function>
    
    <function name="SubscribeWayPoints" functionID="SubscribeWayPointsID" messagetype="response" since="4.1">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <function name="GetWayPoints" functionID="GetWayPointsID" messagetype="request" since="4.1">
        <description>Request for getting waypoint/destination data.</description>
        <param name="wayPointType" type="WayPointType" mandatory="true">
            <description>To request for either the destination only or for all waypoints including destination</description>
        </param>
    </function>
    
    <function name="GetWayPoints" functionID="GetWayPointsID" messagetype="response" since="4.1">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="TIMED_OUT"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="IGNORED"/>
            <element name="IN_USE"/>
            <element name="DISALLOWED"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        <param name="wayPoints" type="LocationDetails" mandatory="false" array="true" minsize="1" maxsize="10">
            <description>See LocationDetails</description>
        </param>
    </function>
    
    <function name="UnsubscribeWayPoints" functionID="UnsubscribeWayPointsID" messagetype="request" since="4.1">
        <description>Request to unsubscribe from WayPoints and Destination</description>
    </function>
    
    <function name="UnsubscribeWayPoints" functionID="UnsubscribeWayPointsID" messagetype="response" since="4.1">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        <param name="wayPoints" type="LocationDetails" mandatory="false" array="true" minsize="1" maxsize="10">
            <description>See LocationDetails</description>
        </param>
    </function>
    
    <function name="GetSystemCapability" functionID="GetSystemCapabilityID" messagetype="request" since="4.5">
        <description>Request for expanded information about a supported system/HMI capability</description>
        <param name="systemCapabilityType" type="SystemCapabilityType" mandatory="true">
            <description>The type of system capability to get more information on</description>
        </param>
        <param name="subscribe" type="Boolean" mandatory="false" since="5.1">
            <description>Flag to subscribe to updates of the supplied service capability type. If true, the requester will be subscribed. If false, the requester will not be subscribed and be removed as a subscriber if it was previously subscribed.</description>
        </param>
    </function>
    
    <function name="GetSystemCapability" functionID="GetSystemCapabilityID" messagetype="response" since="4.5">
        <param name="systemCapability" type="SystemCapability" mandatory="false">
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="IGNORED"/>
            <element name="DISALLOWED"/>
            <element name="USER_DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE">
                <description>The capability does not exist on the module</description>
            </element>
            <element name="DATA_NOT_AVAILABLE">
                <description>The capability should exist on the module but there was an error retrieving the data.</description>
            </element>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
    </function>
    
    <function name="SendHapticData" functionID="SendHapticDataID" messagetype="request" since="4.5">
        <description>Send the spatial data gathered from SDLCarWindow or VirtualDisplayEncoder to the HMI. This data will be utilized by the HMI to determine how and when haptic events should occur</description>
        <param name="hapticRectData" type="HapticRect" minsize="0" maxsize="1000"  mandatory="false" array="true">
            <description>Array of spatial data structures that represent the locations of all user controls present on the HMI. This data should be updated if/when the application presents a new screen. When a request is sent, if successful, it will replace all spatial data previously sent through RPC. If an empty array is sent, the existing spatial data will be cleared</description>
        </param>
    </function>
    
    <function name="SendHapticData" functionID="SendHapticDataID" messagetype="response" since="4.5">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false if failed </description>
        </param>
        <param name="info" type="String" maxlength="1000" mandatory="false">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="GENERIC_ERROR"/>
        </param>
    </function>

    <function name="SetCloudAppProperties" functionID="SetCloudAppPropertiesID" messagetype="request" since="5.1">
        <description>
            RPC used to enable/disable a cloud application and set its cloud-related policy properties
        </description>
        <param name="properties" type="CloudAppProperties" mandatory="true">
            <description> The new cloud application properties </description>
        </param>
    </function>

    <function name="SetCloudAppProperties" functionID="SetCloudAppPropertiesID" messagetype="response" since="5.1">
        <description>The response to SetCloudAppProperties</description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="GENERIC_ERROR"/>
            <element name="DISALLOWED"/>
            <element name="WARNINGS"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <function name="GetCloudAppProperties" functionID="GetCloudAppPropertiesID" messagetype="request" since="5.1">
        <description>
            RPC used to get the current properties of a cloud application
        </description> 
        <param name="appID" type="String" maxlength="100" mandatory="true"></param>
    </function>

    <function name="GetCloudAppProperties" functionID="GetCloudAppPropertiesID" messagetype="response" since="5.1">
        <description>The response to GetCloudAppProperties</description>
        <param name="properties" type="CloudAppProperties" mandatory="false">
            <description> The requested cloud application properties </description>
        </param>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false if failed </description>
        </param>
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="GENERIC_ERROR"/>
            <element name="DISALLOWED"/>
            <element name="WARNINGS"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <function name="PublishAppService" functionID="PublishAppServiceID" messagetype="request" since="5.1">
        <description>
            Registers a service offered by this app on the module.
            Subsequent calls with the same service type will update the manifest for that service.
        </description>

        <param name="appServiceManifest" type="AppServiceManifest" mandatory="true">
            <description>
                The manifest of the service that wishes to be published. 
                If already published, the updated manifest for this service.
            </description>
        </param>
    </function>

    <function name="PublishAppService" functionID="PublishAppServiceID" messagetype="response" since="5.1">
        <description>Response to the request to register a service offered by this app on the module</description>

        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
       
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>

        <param name="appServiceRecord" type="AppServiceRecord" mandatory="false">
            <description> If the request was successful, this object will be the current status of the service record for the published service. This will include the Core supplied service ID.</description>
        </param>
    </function>

    <function name="UnpublishAppService" functionID="UnpublishAppServiceID" messagetype="request" since="6.0">
        <description> Unpublish an existing service published by this application. </description>

        <param name="serviceID" type="String" mandatory="true">
            <description> The ID of the service to be unpublished. </description>
        </param>
    </function>

    <function name="UnpublishAppService" functionID="UnpublishAppServiceID" messagetype="response" since="6.0">
        <description> The response to UnpublishAppService </description>
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>

        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="INVALID_DATA"/>
            <element name="INVALID_ID"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <function name="GetAppServiceData" functionID="GetAppServiceDataID" messagetype="request" since="5.1">
        <description> This request asks the module for current data related to the specific service. It also includes an option to subscribe to that service for future updates</description>
        
        <param name="serviceType" type="String" mandatory="true">
            <description>The type of service that is to be offered by this app. See AppServiceType for known enum equivalent types. Parameter is a string to allow for new service types to be used by apps on older versions of SDL Core.</description>
        </param>
        
        <param name="subscribe" type="Boolean" mandatory="false">
            <description> If true, the consumer is requesting to subscribe to all future updates from the service publisher. If false, the consumer doesn't wish to subscribe and should be unsubscribed if it was previously subscribed.</description>
        </param>
    </function>

    <function name="GetAppServiceData" functionID="GetAppServiceDataID" messagetype="response" since="5.1">
        <description> This response includes the data that was requested from the specific service</description>

        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
        
        <!-- Specific response data -->        
        <param name="serviceData" type="AppServiceData" mandatory="false"/>            
    </function>

    <function name="PerformAppServiceInteraction" functionID="PerformAppServiceInteractionID" messagetype="request" since="5.1">
        <param name="serviceUri" type="String"  mandatory="true">
            <description>Fully qualified URI based on a predetermined scheme provided by the app service. SDL makes no guarantee that this URI is correct.</description>
        </param>
        
        <param name="serviceID" type="String" mandatory="true">
            <description>The service ID that the app consumer wishes to send this URI.</description>
        </param>
        
        <param name="originApp" type="String" mandatory="true">
            <description>This string is the appID of the app requesting the app service provider take the specific action.</description>
        </param>
        
        <param name="requestServiceActive" type="Boolean" mandatory="false">
            <description>This flag signals the requesting consumer would like this service to become the active primary service of the destination's type.</description>
        </param>
    </function>

    <function name="PerformAppServiceInteraction" functionID="PerformAppServiceInteractionID" messagetype="response" since="5.1">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>       
            
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result. All results will be available for this response.</description>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>

        <param name="serviceSpecificResult" type="String" mandatory="false">
            <description>The service can provide specific result strings to the consumer through this param.</description>
        </param>
    </function>

    <function name="CancelInteraction" functionID="CancelInteractionID" messagetype="request" since="6.0">
        <description>
            Close an active interaction on the HMI.
        </description>

        <param name="cancelID" type="Integer" mandatory="false">
            <description>
                The ID of the specific interaction you want to dismiss. If not set, the most recent of the RPC type set in functionID will be dismissed.
            </description>
        </param>

        <param name="functionID" type="Integer" mandatory="true">
            <description>
                The ID of the type of interaction the developer wants to dismiss. Only values 10, (PerformInteractionID), 12 (AlertID), 25 (ScrollableMessageID), and 26 (SliderID) are permitted.
            </description>
        </param>
    </function>

    <function name="CancelInteraction" functionID="CancelInteractionID" messagetype="response" since="6.0">
        <description>
            If no applicable request can be dismissed, the result will be IGNORED.
        </description>

        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="IGNORED"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
            <element name="DISALLOWED"/>
            <element name="UNSUPPORTED_RESOURCE"/>
            <element name="WARNINGS"/>
            <element name="ABORTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <function name="CloseApplication" functionID="CloseApplicationID" messagetype="request" since="6.0">
        <description>Request from the application to exit the foreground and enter HMI_NONE.</description>
    </function>

    <function name="CloseApplication" functionID="CloseApplicationID" messagetype="response" since="6.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true if successful; false, if failed </description>
        </param>

        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="DISALLOWED"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="IGNORED"/>
        </param>

        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>

    <!-- Notifications -->
    
    <function name="OnHMIStatus" functionID="OnHMIStatusID" messagetype="notification" since="1.0">
        <param name="hmiLevel" type="HMILevel" mandatory="true">
            <description>See HMILevel</description>
        </param>
        
        <param name="audioStreamingState" type="AudioStreamingState" mandatory="true">
            <description>See AudioStreamingState</description>
        </param>
        
        <param name="systemContext" type="SystemContext" mandatory="true">
            <description>See SystemContext</description>
        </param>

        <param name="videoStreamingState" type="VideoStreamingState" mandatory="false" defvalue="STREAMABLE" since="5.0">
            <description>
                See VideoStreamingState. 
                If it is NOT_STREAMABLE, the app must stop streaming video to SDL Core(stop service).
            </description>
        </param>
        <param name="windowID" type="Integer" mandatory="false" since="6.0">
            <description>
              This is the unique ID assigned to the window that this RPC is intended. If this param is not included, it will be assumed that this request is specifically for the main window on the main display. See PredefinedWindows enum.
            </description>
        </param>
    </function>
    
    <function name="OnAppInterfaceUnregistered" functionID="OnAppInterfaceUnregisteredID" messagetype="notification" since="1.0">
        <param name="reason" type="AppInterfaceUnregisteredReason" mandatory="true">
            <description>See AppInterfaceUnregisteredReason</description>
        </param>
    </function>
    
    <function name="OnButtonEvent" functionID="OnButtonEventID" messagetype="notification" since="1.0">
        <description>Notifies application of UP/DOWN events for buttons to which the application is subscribed.</description>
        <param name="buttonName" type="ButtonName" mandatory="true"/>
        <param name="buttonEventMode" type="ButtonEventMode" mandatory="true">
            <description>Indicates whether this is an UP or DOWN event.</description>
        </param>
        <param name="customButtonID" type="Integer" minvalue="0" maxvalue="65536" mandatory="false" since="2.0">
            <description>If ButtonName is "CUSTOM_BUTTON", this references the integer ID passed by a custom button. (e.g. softButton ID)</description>
        </param>
    </function>
    
    <function name="OnButtonPress" functionID="OnButtonPressID" messagetype="notification" since="1.0">
        <description>Notifies application of LONG/SHORT press events for buttons to which the application is subscribed.</description>
        <param name="buttonName" type="ButtonName" mandatory="true"/>
        <param name="buttonPressMode" type="ButtonPressMode" mandatory="true">
            <description>Indicates whether this is a LONG or SHORT button press event.</description>
        </param>
        <param name="customButtonID" type="Integer" minvalue="0" maxvalue="65536" mandatory="false" since="2.0">
            <description>If ButtonName is "CUSTOM_BUTTON", this references the integer ID passed by a custom button. (e.g. softButton ID)</description>
        </param>
    </function>
    
    <function name="OnVehicleData" functionID="OnVehicleDataID" messagetype="notification" since="2.0">
        <description>Callback for the periodic and non periodic vehicle data read function.</description>
        <param name="gps" type="GPSData" mandatory="false">
            <description>See GPSData</description>
        </param>
        <param name="speed" type="Float" minvalue="0" maxvalue="700" mandatory="false">
            <description>The vehicle speed in kilometers per hour</description>
        </param>
        <param name="rpm" type="Integer" minvalue="0" maxvalue="20000" mandatory="false">
            <description>The number of revolutions per minute of the engine</description>
        </param>
        <param name="fuelLevel" type="Float" minvalue="-6" maxvalue="106" mandatory="false">
            <description>The fuel level in the tank (percentage)</description>
        </param>
        <param name="fuelLevel_State" type="ComponentVolumeStatus" mandatory="false">
            <description>The fuel level state</description>
        </param>
        <param name="instantFuelConsumption" type="Float" minvalue="0" maxvalue="25575" mandatory="false">
            <description>The instantaneous fuel consumption in microlitres</description>
        </param>
        <param name="fuelRange" type="FuelRange" minsize="0" maxsize="100" array="true" mandatory="false" since="5.0">
            <description>The estimate range in KM the vehicle can travel based on fuel level and consumption</description>
        </param>
        <param name="externalTemperature" type="Float" minvalue="-40" maxvalue="100" mandatory="false">
            <description>The external temperature in degrees celsius</description>
        </param>
        <param name="turnSignal" type="TurnSignal" mandatory="false" since="5.0">
            <description>See TurnSignal</description>
        </param>
        <param name="vin" type="String" maxlength="17" mandatory="false">
            <description>Vehicle identification number.</description>
        </param>
        <param name="prndl" type="PRNDL" mandatory="false">
            <description>See PRNDL</description>
        </param>
        <param name="tirePressure" type="TireStatus" mandatory="false">
            <description>See TireStatus</description>
        </param>
        <param name="odometer" type="Integer" minvalue="0" maxvalue="17000000" mandatory="false">
            <description>Odometer in km</description>
        </param>
        <param name="beltStatus" type="BeltStatus" mandatory="false">
            <description>The status of the seat belts</description>
        </param>
        <param name="bodyInformation" type="BodyInformation" mandatory="false">
            <description>The body information including power modes</description>
        </param>
        <param name="deviceStatus" type="DeviceStatus" mandatory="false">
            <description>The device status including signal and battery strength</description>
        </param>
        <param name="driverBraking" type="VehicleDataEventStatus" mandatory="false">
            <description>The status of the brake pedal</description>
        </param>
        <param name="wiperStatus" type="WiperStatus" mandatory="false">
            <description>The status of the wipers</description>
        </param>
        <param name="headLampStatus" type="HeadLampStatus" mandatory="false">
            <description>Status of the head lamps</description>
        </param>
        <param name="engineTorque" type="Float" minvalue="-1000" maxvalue="2000" mandatory="false">
            <description>Torque value for engine (in Nm) on non-diesel variants</description>
        </param>
        <param name="accPedalPosition" type="Float" minvalue="0" maxvalue="100" mandatory="false">
            <description>Accelerator pedal position (percentage depressed)</description>
        </param>
        <param name="steeringWheelAngle" type="Float" minvalue="-2000" maxvalue="2000" mandatory="false">
            <description>Current angle of the steering wheel (in deg)</description>
        </param>
        <param name="engineOilLife" type="Float" minvalue="0" maxvalue="100" mandatory="false" since="5.0">
            <description>The estimated percentage of remaining oil life of the engine.</description>
        </param>
        <param name="electronicParkBrakeStatus" type="ElectronicParkBrakeStatus" mandatory="false" since="5.0">
            <description>The status of the park brake as provided by Electric Park Brake (EPB) system.</description>
        </param>
        <param name="cloudAppVehicleID" type="String" mandatory="false" since="5.1">
            <description>Parameter used by cloud apps to identify a head unit</description>
        </param>
        <param name="eCallInfo" type="ECallInfo" mandatory="false">
            <description>Emergency Call notification and confirmation data</description>
        </param>
        <param name="airbagStatus" type="AirbagStatus" mandatory="false">
            <description>The status of the air bags</description>
        </param>
        <param name="emergencyEvent" type="EmergencyEvent" mandatory="false">
            <description>Information related to an emergency event (and if it occurred)</description>
        </param>
        <param name="clusterModeStatus" type="ClusterModeStatus" mandatory="false">
            <description>The status modes of the cluster</description>
        </param>
        <param name="myKey" type="MyKey" mandatory="false">
            <description>Information related to the MyKey feature</description>
        </param>
    </function>
    
    <function name="OnCommand" functionID="OnCommandID" messagetype="notification" since="1.0">
        <param name="cmdID" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="true">
            <description>Command ID, which is related to a specific menu entry</description>
        </param>
        
        <param name="triggerSource" type="TriggerSource" mandatory="true">
            <description>See TriggerSource</description>
        </param>
    </function>
    
    <function name="OnTBTClientState" functionID="OnTBTClientStateID" messagetype="notification" since="1.0">
        <description>Provides applications with notifications specific to the current TBT client status on the module</description>
        <param name="state" type="TBTState" mandatory="true">
            <description>Current State of TBT client</description>
        </param>
    </function>
    
    <function name="OnDriverDistraction" functionID="OnDriverDistractionID" messagetype="notification" since="1.0">
        <description>Provides driver distraction state to mobile applications</description>
        <param name="state" type="DriverDistractionState" mandatory="true">
            <description>Current State of Driver Distraction</description>
        </param>
        <param name="lockScreenDismissalEnabled" type="Boolean" mandatory="false" since="6.0">
            <description>
                If enabled, the lock screen will be able to be dismissed while connected to SDL, allowing users 
                the ability to interact with the app. Dismissals should include a warning to the user and ensure 
                that they are not the driver.
            </description>
        </param>
        <param name="lockScreenDismissalWarning" type="String" mandatory="false" since="6.0">
            <description>
                Warning message to be displayed on the lock screen when dismissal is enabled.
                This warning should be used to ensure that the user is not the driver of the vehicle, 
                ex. `Swipe down to dismiss, acknowledging that you are not the driver.`.
                This parameter must be present if "lockScreenDismissalEnabled" is set to true.
            </description>
        </param>
    </function>
    
    <function name="OnPermissionsChange" functionID="OnPermissionsChangeID" messagetype="notification" since="2.0">
        <description>Provides update to app of which policy-table-enabled functions are available</description>
        <param name="permissionItem" type="PermissionItem" minsize="0" maxsize="500" array="true" mandatory="true">
            <description>Change in permissions for a given set of RPCs</description>
        </param>
        <param name="requireEncryption" type="Boolean" mandatory="false" since="6.0"/>
    </function>
    
    <function name="OnAudioPassThru" functionID="OnAudioPassThruID" messagetype="notification" since="2.0">
        <description>Binary data is in binary part of hybrid msg</description>
    </function>
    
    <function name="OnLanguageChange" functionID="OnLanguageChangeID" messagetype="notification" since="2.0">
        <param name="language" type="Language" mandatory="true">
            <description>Current SDL voice engine (VR+TTS) language</description>
        </param>
        <param name="hmiDisplayLanguage" type="Language" mandatory="true">
            <description>Current display language</description>
        </param>
    </function>
    
    <function name="OnKeyboardInput" functionID="OnKeyboardInputID" messagetype="notification" since="3.0">
        
        <description>On-screen keyboard event.</description>
        <description>Can be full string or individual keypresses depending on keyboard mode.</description>
        
        <param name="event" type="KeyboardEvent" mandatory="true">
            <description>On-screen keyboard input data.</description>
        </param>
        
        <param name="data" type="String" maxlength="500" mandatory="false">
            <description>On-screen keyboard input data.</description>
            <description>For dynamic keypress events, this will be the current compounded string of entry text.</description>
            <description>For entry submission events, this will be the full text entry (this will always return regardless of the mode).</description>
            <description>For entry cancelled and entry aborted events, this data param will be omitted.</description>
        </param>
        
    </function>
    
    <function name="OnTouchEvent" functionID="OnTouchEventID" messagetype="notification" since="3.0">
        <description>Notifies about touch events on the screen's prescribed area</description>
        <param name="type" type="TouchType" mandatory="true">
            <description>The type of touch event.</description>
        </param>
        <param name="event" type="TouchEvent" mandatory="true" minsize="1" maxsize="10" array="true">
            <description>List of all individual touches involved in this event.</description>
        </param>
    </function>
    
    <function name="OnSystemRequest" functionID="OnSystemRequestID" messagetype="notification" since="3.0">
        <description>
            An asynchronous request from the system for specific data from the device or the cloud or response to a request from the device or cloud
            Binary data can be included in hybrid part of message for some requests (such as Authentication request responses)
        </description>
        <param name="requestType" type="RequestType" mandatory="true">
            <description>The type of system request.</description>
        </param>
        <param name="requestSubType" type="String" maxlength="255" mandatory="false" since="5.0">
            <description>
                This parameter is filled for supporting OEM proprietary data exchanges.
            </description>
        </param>
        <param name="url" type="String" maxlength="1000" mandatory="false">
            <description>
                Optional URL for HTTP requests.
                If blank, the binary data shall be forwarded to the app.
                If not blank, the binary data shall be forwarded to the url with a provided timeout in seconds.
            </description>
        </param>
        <param name="timeout" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>
                Optional timeout for HTTP requests
                Required if a URL is provided
            </description>
        </param>
        <param name="fileType" type="FileType" mandatory="false">
            <description>Optional file type (meant for HTTP file requests).</description>
        </param>
        <param name="offset" type="Integer" minvalue="0" maxvalue="100000000000" mandatory="false">
            <description>Optional offset in bytes for resuming partial data chunks</description>
        </param>
        <param name="length" type="Integer" minvalue="0" maxvalue="100000000000" mandatory="false">
            <description>Optional length in bytes for resuming partial data chunks</description>
        </param>
    </function>
    
    <function name="OnHashChange" functionID="OnHashChangeID" messagetype="notification" since="3.0">
        <description>
            Notification containing an updated hashID which can be used over connection cycles (i.e. loss of connection, ignition cycles, etc.).
            Sent after initial registration and subsequently after any change in the calculated hash of all persisted app data.
        </description>
        <param name="hashID" type="String" maxlength="100" mandatory="true">
            <description>Calculated hash ID to be referenced during RegisterAppInterface.</description>
        </param>
    </function>
    
    <function name="OnWayPointChange" functionID="OnWayPointChangeID" messagetype="notification" since="4.1">
        <description>Notification which provides the entire LocationDetails when there is a change to any waypoints or destination.</description>
        <param name="wayPoints" type="LocationDetails" mandatory="true" array="true" minsize="1" maxsize="10">
            <description>See LocationDetails</description>
        </param>
    </function>
    
    <function name="OnInteriorVehicleData" functionID="OnInteriorVehicleDataID" messagetype="notification" since="4.5">
        <param name="moduleData" type="ModuleData"  mandatory="true">
        </param>
    </function>

    <function name="OnRCStatus" functionID="OnRCStatusID" messagetype="notification" since="5.0">
        <description>Issued by SDL to notify the application about remote control status change on SDL</description>
        <param name="allowed" type="Boolean" mandatory="false">
            <description>If "true" - RC is allowed; if "false" - RC is disallowed.</description>
        </param>
        <param name="allocatedModules" type="ModuleData" minsize="0" maxsize="100" array="true" mandatory="true">
            <description>Contains a list (zero or more) of module types that are allocated to the application.</description>
        </param>
        <param name="freeModules" type="ModuleData" minsize="0" maxsize="100" array="true" mandatory="true">
            <description>Contains a list (zero or more) of module types that are free to access for the application.</description>
        </param>
    </function>

    <function name="OnAppServiceData" functionID="OnAppServiceDataID" messagetype="notification" since="5.1">
        <description>This notification includes the data that is updated from the specific service</description>

        <param name="serviceData" type="AppServiceData" mandatory="true"/>
    </function>
    
    <function name="OnSystemCapabilityUpdated" functionID="OnSystemCapabilityUpdatedID" messagetype="notification" since="5.1">
        <description>A notification to inform the connected device that a specific system capability has changed.</description>
        <param name="systemCapability" type="SystemCapability" mandatory="true">
            <description>The system capability that has been updated</description>
        </param>
    </function>
    
    <!-- ~~~~~~~~~~~~~~~~~~ -->
    <!-- Ford Specific APIs -->
    <!-- ~~~~~~~~~~~~~~~~~~ -->
    
    <function name="EncodedSyncPData" functionID="EncodedSyncPDataID" messagetype="request" since="1.0">
        <description>
            Allows encoded data in the form of SyncP packets to be sent to the SYNC module.
            Legacy / v1 Protocol implementation; use SyncPData instead.
            *** DEPRECATED ***
        </description>
        
        <param name="data" type="String" maxlength="1000000" minsize="1" maxsize="100" array="true" mandatory="true">
            <description>Contains base64 encoded string of SyncP packets.</description>
            <todo>What is the maxlength?</todo>
        </param>
    </function>
    
    <function name="EncodedSyncPData" functionID="EncodedSyncPDataID" messagetype="response" since="1.0">
        <param name="success" type="Boolean" platform="documentation" mandatory="true">
            <description> true, if successful; false, if failed </description>
        </param>
        
        <param name="resultCode" type="Result" platform="documentation" mandatory="true">
            <description>See Result</description>
            <element name="SUCCESS"/>
            <element name="INVALID_DATA"/>
            <element name="OUT_OF_MEMORY"/>
            <element name="TOO_MANY_PENDING_REQUESTS"/>
            <element name="APPLICATION_NOT_REGISTERED"/>
            <element name="GENERIC_ERROR"/>
            <element name="REJECTED"/>
        </param>
        
        <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
            <description>Provides additional human readable info regarding the result.</description>
        </param>
    </function>
    
    <!-- Deprecating - covered by SystemRequest
     <function name="SyncPData" functionID="SyncPDataID" messagetype="request" >
     <description>
     Allows binary data in the form of SyncP packets to be sent to the SYNC module.
     Binary data is in binary part of hybrid msg.
     </description>
     </function>
     
     <function name="SyncPData" functionID="SyncPDataID" messagetype="response" >
     <param name="success" type="Boolean" platform="documentation" mandatory="true">
     <description> true, if successful; false, if failed </description>
     </param>
     
     <param name="resultCode" type="Result" platform="documentation" mandatory="true">
     <description>See Result</description>
     <element name="SUCCESS"/>
     <element name="INVALID_DATA"/>
     <element name="OUT_OF_MEMORY"/>
     <element name="TOO_MANY_PENDING_REQUESTS"/>
     <element name="APPLICATION_NOT_REGISTERED"/>
     <element name="GENERIC_ERROR"/>
     <element name="REJECTED"/>
     </param>
     
     <param name="info" type="String" maxlength="1000" mandatory="false" platform="documentation">
     <description>Provides additional human readable info regarding the result.</description>
     </param>
     </function>
     -->
    
    <function name="OnEncodedSyncPData" functionID="OnEncodedSyncPDataID" messagetype="notification" since="1.0">
        <description>
            Callback including encoded data of any SyncP packets that SYNC needs to send back to the mobile device.
            Legacy / v1 Protocol implementation; responds to EncodedSyncPData.
            *** DEPRECATED ***
        </description>
        <param name="data" type="String" maxlength="1000000" minsize="1" maxsize="100" mandatory="true" array="true">
            <description>Contains base64 encoded string of SyncP packets.</description>
        </param>
        <param name="URL" type="String" maxlength="1000" mandatory="false">
            <description>
                If blank, the SyncP data shall be forwarded to the app.
                If not blank, the SyncP data shall be forwarded to the provided URL.
            </description>
        </param>
        <param name="Timeout" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
            <description>
                If blank, the SyncP data shall be forwarded to the app.
                If not blank, the SyncP data shall be forwarded with the provided timeout in seconds.
            </description>
        </param>  
    </function>
    
    
    <!-- Deprecating - covered by OnSystemRequest
     <function name="OnSyncPData" functionID="OnSyncPDataID" messagetype="notification" >
     <description>
     Callback including binary data of any SyncP packets that SYNC needs to send back to the mobile device.
     Responds to SyncPData.
     Binary data is in binary part of hybrid msg.
     </description>
     
     <param name="URL" type="String" maxlength="1000" mandatory="false">
     <description>
     If blank, the SyncP data shall be forwarded to the app.
     If not blank, the SyncP data shall be forwarded to the provided URL.
     </description>
     </param>
     <param name="Timeout" type="Integer" minvalue="0" maxvalue="2000000000" mandatory="false">
     <description>
     If blank, the SyncP data shall be forwarded to the app.
     If not blank, the SyncP data shall be forwarded with the provided timeout in seconds.
     </description>
     </param>  
     
     </function>
     -->
</interface>
