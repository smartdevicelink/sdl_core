* Introduction
  ================
  smartDeviceLinkCore is an application which manages the transport, connection and communication between a head unit and mobile device.

* OS and Hardware
  =========
  Ubuntu 12.04.01 LTS 32-bit OS on the PC with USB-dongle
  Application has been tested using 2 types of USB-dongle:
  D-Link DBT-122
  STLab B-121mini

* External components
  ===================
  For build application we need:
  libbluetooth3, the BlueZ library
  libbluetooth-dev, the development files to link to the BluetZ library.
  Install libraries:
  sudo apt-get install libbluetooth3
  sudo apt-get install libbluetooth-dev

  We are using cmake to create build configurations.
  Install cmake:
  sudo apt-get install cmake

  Also, make sure the g++ compiler is installed:
  sudo apt-get install g++

  To start web-based HMI we need web-browser with web-socket RFC6455 support.
  For example Google Chromium. Install it using:
  sudo apt-get install chromium-browser

  To run InterfaceGenerator some python libraries are required and must be
  installed with following command:
  sudo pip install -r tools/InterfaceGenerator/requirements.txt

  For logging Apache log4cxx library is used. Install required packages with the following command:
  sudo apt-get install liblog4cxx10 liblog4cxx10-dev

  For installing pulseaudio development files which neededfor audio management fetures run:
  sudo apt-get install libpulse-dev

  For installing gstreamer development files which needed for audio management fetures:
  First add gstreamer repositories to your apt source list (/etc/apt/sources.list):
	deb http://ppa.launchpad.net/gstreamer-developers/ppa/ubuntu <distributive codename> main
  deb-src http://ppa.launchpad.net/gstreamer-developers/ppa/ubuntu <distributive codename> main
	use code name relevant to the Ubuntu version which you use instead of <distributive codename>.
	Run:
	sudo apt-get update
	and:
	sudo apt-get install gstreamer1.0*

* Build application
  =================
  We support "out of sources" concept for build from R3.0.0
  It means all generated by build tools files will be stored in separate folder.
  Temporary build of application requires two steps.
  1. Enter src/thirdPartyLibs/logger
  build logger:

  1. Create directory outside of SmartDeviceLink project directory.
  For example "build" folder in the same folder with SmartDeviceLink git repo folder which has a name "git_repo":
  You will have folders structure like this:
  /home/projects/smart_device_link
  |--build
  |--git_repo
     |--doc
     |--src
     |--test
     |--DoxyFile
     \--CMakeLists.txt
  Enter this folder:
  cd build

  2. Create build configuration using cmake:
  2.1 For Debug configuration
  cmake ../git_repo
  2.2 For Release configuration, run:
  cmake -DCMAKE_BUILD_TYPE=Release ../git_repo
  2.3 For Debug configuration with tests, run:
  cmake -DBUILD_TESTS=On ../git_repo

  3. Make project:
  make

  Ready to use release application will be in build/src/appMain/smartDeviceLinkCore

  4. If You built configuration with tests (see 2.3 above), then You can run all project tests and see overall result with:
  make test

  5. For creating the doxygen documentation run:
  make doxygen