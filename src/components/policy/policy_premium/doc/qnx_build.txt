Building the project
cmake -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake ../applink
or for Momentics project:
cmake -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake -G "Eclipse CDT4 - Unix Makefiles" ../applink

Building with support D-Bus and Qt 4.8
Install D-Bus (see https://adc.luxoft.com/confluence/x/0AHJDw)
Install Qt 4.8 (see https://adc.luxoft.com/confluence/x/UwfJDw)
cmake -DHMI2=ON -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake ../applink
or for Momentics project:
cmake -DHMI2=ON -DCMAKE_TOOLCHAIN_FILE=../applink/qnx_6.5.0_linux_x86.cmake -G "Eclipse CDT4 - Unix Makefiles" ../applink

make
make install

Running project:
Change server IP in configuration file to QNX target IP.
Copy directory bin to QNX target.
You can copy it using scp. Example:
scp -r user_name@linux_pc_ip:/full_path/to/dir .

For Web HMI set target IP in ini file and change target IP in src/components/HMI/ffw/RPCClient.js
! Currently we don't have any configuration file for HMI.

Execute smartDeviceLinkCore on QNX qtarget.
Execute HMI on Linux PC (only Web HMI).

Have fun!
